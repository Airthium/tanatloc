name: Dispatch

on:
  push:
    branches:
      - master

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@main

      - name: Version
        id: package_version
        run: |
          VERSION=`cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]'`
          echo "::set-output name=version::$VERSION"

      - name: Create release
        continue-on-error: true
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package_version.outputs.version }}
          release_name: v${{ steps.package_version.outputs.version }}
          body: |
            Tanatloc release
            - [Docker build](https://github.com/Airthium/tanatloc-docker/releases/tag/v${{ steps.package_version.outputs.version }})
            - [Electron build](https://github.com/Airthium/tanatloc-electron/releases/tag/v${{ steps.package_version.outputs.version }})
          draft: false
          prerelease: false

  electron:
    name: Dispatch to tanatloc-electron
    runs-on: ubuntu-latest

    steps:
      - name: Dispatch for electron
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.DISPATCH_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/Airthium/tanatloc-electron/actions/workflows/submodule-update.yml/dispatches -d '{"ref": "main"}'

  docker:
    name: Dispatch to tanatloc-docker
    runs-on: ubuntu-latest

    steps:
      - name: Dispatch for docker
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.DISPATCH_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/Airthium/tanatloc-docker/actions/workflows/submodule-update.yml/dispatches -d '{"ref": "main"}'
