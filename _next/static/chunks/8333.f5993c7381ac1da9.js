"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8333],{98333:function(e,t,n){n.r(t),n.d(t,{default:function(){return $}});var a=n(85893),i=n(67294),r=n(53740),o=n(74981),s=n(53239),l=n(82679);n(39323),n(56604),ace.define("ace/mode/doc_comment_highlight_rules",["require","exports","module","ace/lib/oop","ace/mode/text_highlight_rules"],function(e,t,n){let a=e("../lib/oop"),i=e("./text_highlight_rules").TextHighlightRules,r=function(){this.$rules={start:[{token:"comment.doc.tag",regex:"@[\\w\\d_]+"},r.getTagRule(),{defaultToken:"comment.doc",caseInsensitive:!0}]}};a.inherits(r,i),r.getTagRule=function(e){return{token:"comment.doc.tag.storage.type",regex:"\\b(?:TODO|FIXME|XXX|HACK)\\b"}},r.getStartRule=function(e){return{token:"comment.doc",regex:"\\/\\*(?=\\*)",next:e}},r.getEndRule=function(e){return{token:"comment.doc",regex:"\\*\\/",next:e}},t.DocCommentHighlightRules=r}),ace.define("ace/mode/javascript_highlight_rules",["require","exports","module","ace/lib/oop","ace/mode/doc_comment_highlight_rules","ace/mode/text_highlight_rules"],function(e,t,n){let a=e("../lib/oop"),i=e("./doc_comment_highlight_rules").DocCommentHighlightRules,r=e("./text_highlight_rules").TextHighlightRules,o="[a-zA-Z\\$_\xa1-￿][a-zA-Z\\d\\$_\xa1-￿]*",s=function(e){let t=this.createKeywordMapper({"variable.language":"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|Namespace|QName|XML|XMLList|ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|SyntaxError|TypeError|URIError|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|isNaN|parseFloat|parseInt|JSON|Math|this|arguments|prototype|window|document",keyword:"const|yield|import|get|set|async|await|break|case|catch|continue|default|delete|do|else|finally|for|function|if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|__parent__|__count__|escape|unescape|with|__proto__|class|enum|extends|super|export|implements|private|public|interface|package|protected|static","storage.type":"const|let|var|function","constant.language":"null|Infinity|NaN|undefined","support.function":"alert","constant.language.boolean":"true|false"},"identifier"),n="\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|u{[0-9a-fA-F]{1,6}}|[0-2][0-7]{0,2}|3[0-7][0-7]?|[4-7][0-7]?|.)";this.$rules={no_regex:[i.getStartRule("doc-start"),p("no_regex"),{token:"string",regex:"'(?=.)",next:"qstring"},{token:"string",regex:'"(?=.)',next:"qqstring"},{token:"constant.numeric",regex:/0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\b/},{token:"constant.numeric",regex:/(?:\d\d*(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+\b)?/},{token:["storage.type","punctuation.operator","support.function","punctuation.operator","entity.name.function","text","keyword.operator"],regex:"("+o+")(\\.)(prototype)(\\.)("+o+")(\\s*)(=)",next:"function_arguments"},{token:["storage.type","punctuation.operator","entity.name.function","text","keyword.operator","text","storage.type","text","paren.lparen"],regex:"("+o+")(\\.)("+o+")(\\s*)(=)(\\s*)(function)(\\s*)(\\()",next:"function_arguments"},{token:["entity.name.function","text","keyword.operator","text","storage.type","text","paren.lparen"],regex:"("+o+")(\\s*)(=)(\\s*)(function)(\\s*)(\\()",next:"function_arguments"},{token:["storage.type","punctuation.operator","entity.name.function","text","keyword.operator","text","storage.type","text","entity.name.function","text","paren.lparen"],regex:"("+o+")(\\.)("+o+")(\\s*)(=)(\\s*)(function)(\\s+)(\\w+)(\\s*)(\\()",next:"function_arguments"},{token:["storage.type","text","entity.name.function","text","paren.lparen"],regex:"(function)(\\s+)("+o+")(\\s*)(\\()",next:"function_arguments"},{token:["entity.name.function","text","punctuation.operator","text","storage.type","text","paren.lparen"],regex:"("+o+")(\\s*)(:)(\\s*)(function)(\\s*)(\\()",next:"function_arguments"},{token:["text","text","storage.type","text","paren.lparen"],regex:"(:)(\\s*)(function)(\\s*)(\\()",next:"function_arguments"},{token:"keyword",regex:"from(?=\\s*('|\"))"},{token:"keyword",regex:"(?:case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void)\\b",next:"start"},{token:["support.constant"],regex:/that\b/},{token:["storage.type","punctuation.operator","support.function.firebug"],regex:/(console)(\.)(warn|info|log|error|time|trace|timeEnd|assert)\b/},{token:t,regex:o},{token:"punctuation.operator",regex:/[.](?![.])/,next:"property"},{token:"storage.type",regex:/=>/,next:"start"},{token:"keyword.operator",regex:/--|\+\+|\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\|\||\?:|[!$%&*+\-~\/^]=?/,next:"start"},{token:"punctuation.operator",regex:/[?:,;.]/,next:"start"},{token:"paren.lparen",regex:/[\[({]/,next:"start"},{token:"paren.rparen",regex:/[\])}]/},{token:"comment",regex:/^#!.*$/}],property:[{token:"text",regex:"\\s+"},{token:["storage.type","punctuation.operator","entity.name.function","text","keyword.operator","text","storage.type","text","entity.name.function","text","paren.lparen"],regex:"("+o+")(\\.)("+o+")(\\s*)(=)(\\s*)(function)(?:(\\s+)(\\w+))?(\\s*)(\\()",next:"function_arguments"},{token:"punctuation.operator",regex:/[.](?![.])/},{token:"support.function",regex:/(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\b(?=\()/},{token:"support.function.dom",regex:/(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\b(?=\()/},{token:"support.constant",regex:/(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\b/},{token:"identifier",regex:o},{regex:"",token:"empty",next:"no_regex"}],start:[i.getStartRule("doc-start"),p("start"),{token:"string.regexp",regex:"\\/",next:"regex"},{token:"text",regex:"\\s+|^$",next:"start"},{token:"empty",regex:"",next:"no_regex"}],regex:[{token:"regexp.keyword.operator",regex:"\\\\(?:u[\\da-fA-F]{4}|x[\\da-fA-F]{2}|.)"},{token:"string.regexp",regex:"/[sxngimy]*",next:"no_regex"},{token:"invalid",regex:/\{\d+\b,?\d*\}[+*]|[+*$^?][+*]|[$^][?]|\?{3,}/},{token:"constant.language.escape",regex:/\(\?[:=!]|\)|\{\d+\b,?\d*\}|[+*]\?|[()$^+*?.]/},{token:"constant.language.delimiter",regex:/\|/},{token:"constant.language.escape",regex:/\[\^?/,next:"regex_character_class"},{token:"empty",regex:"$",next:"no_regex"},{defaultToken:"string.regexp"}],regex_character_class:[{token:"regexp.charclass.keyword.operator",regex:"\\\\(?:u[\\da-fA-F]{4}|x[\\da-fA-F]{2}|.)"},{token:"constant.language.escape",regex:"]",next:"regex"},{token:"constant.language.escape",regex:"-"},{token:"empty",regex:"$",next:"no_regex"},{defaultToken:"string.regexp.charachterclass"}],function_arguments:[{token:"variable.parameter",regex:o},{token:"punctuation.operator",regex:"[, ]+"},{token:"punctuation.operator",regex:"$"},{token:"empty",regex:"",next:"no_regex"}],qqstring:[{token:"constant.language.escape",regex:n},{token:"string",regex:"\\\\$",consumeLineEnd:!0},{token:"string",regex:'"|$',next:"no_regex"},{defaultToken:"string"}],qstring:[{token:"constant.language.escape",regex:n},{token:"string",regex:"\\\\$",consumeLineEnd:!0},{token:"string",regex:"'|$",next:"no_regex"},{defaultToken:"string"}]},e&&e.noES6||(this.$rules.no_regex.unshift({regex:"[{}]",onMatch:function(e,t,n){if(this.next="{"==e?this.nextState:"","{"==e&&n.length)n.unshift("start",t);else if("}"==e&&n.length&&(n.shift(),this.next=n.shift(),-1!=this.next.indexOf("string")||-1!=this.next.indexOf("jsx")))return"paren.quasi.end";return"{"==e?"paren.lparen":"paren.rparen"},nextState:"start"},{token:"string.quasi.start",regex:/`/,push:[{token:"constant.language.escape",regex:n},{token:"paren.quasi.start",regex:/\${/,push:"start"},{token:"string.quasi.end",regex:/`/,next:"pop"},{defaultToken:"string.quasi"}]}),e&&!1==e.jsx||l.call(this)),this.embedRules(i,"doc-",[i.getEndRule("no_regex")]),this.normalizeRules()};function l(){let e=o.replace("\\d","\\d\\-"),t={onMatch:function(e,t,n){let a="/"==e.charAt(1)?2:1;return 1==a?(t!=this.nextState?n.unshift(this.next,this.nextState,0):n.unshift(this.next),n[2]++):2==a&&t==this.nextState&&(n[1]--,(!n[1]||n[1]<0)&&(n.shift(),n.shift())),[{type:"meta.tag.punctuation."+(1==a?"":"end-")+"tag-open.xml",value:e.slice(0,a)},{type:"meta.tag.tag-name.xml",value:e.substr(a)}]},regex:"</?"+e,next:"jsxAttributes",nextState:"jsx"};this.$rules.start.unshift(t);let n={regex:"{",token:"paren.quasi.start",push:"start"};this.$rules.jsx=[n,t,{include:"reference"},{defaultToken:"string"}],this.$rules.jsxAttributes=[{token:"meta.tag.punctuation.tag-close.xml",regex:"/?>",onMatch:function(e,t,n){return t==n[0]&&n.shift(),2==e.length&&(n[0]==this.nextState&&n[1]--,(!n[1]||n[1]<0)&&n.splice(0,2)),this.next=n[0]||"start",[{type:this.token,value:e}]},nextState:"jsx"},n,p("jsxAttributes"),{token:"entity.other.attribute-name.xml",regex:e},{token:"keyword.operator.attribute-equals.xml",regex:"="},{token:"text.tag-whitespace.xml",regex:"\\s+"},{token:"string.attribute-value.xml",regex:"'",stateName:"jsx_attr_q",push:[{token:"string.attribute-value.xml",regex:"'",next:"pop"},{include:"reference"},{defaultToken:"string.attribute-value.xml"}]},{token:"string.attribute-value.xml",regex:'"',stateName:"jsx_attr_qq",push:[{token:"string.attribute-value.xml",regex:'"',next:"pop"},{include:"reference"},{defaultToken:"string.attribute-value.xml"}]},t],this.$rules.reference=[{token:"constant.language.escape.reference.xml",regex:"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\.-]+;)"}]}function p(e){return[{token:"comment",regex:/\/\*/,next:[i.getTagRule(),{token:"comment",regex:"\\*\\/",next:e||"pop"},{defaultToken:"comment",caseInsensitive:!0}]},{token:"comment",regex:"\\/\\/",next:[i.getTagRule(),{token:"comment",regex:"$|^",next:e||"pop"},{defaultToken:"comment",caseInsensitive:!0}]}]}a.inherits(s,r),t.JavaScriptHighlightRules=s}),ace.define("ace/mode/freefem_highlight_rules",["require","exports","module","ace/lib/oop","ace/mode/doc_comment_highlight_rules","ace/mode/text_highlight_rules"],function(e,t,n){let a=e("../lib/oop"),i=e("./doc_comment_highlight_rules").DocCommentHighlightRules,r=e("./text_highlight_rules").TextHighlightRules,o="[a-zA-Z\\$_\xa1-￿][a-zA-Z\\d\\$_\xa1-￿]*",s=function(e){let t=this.createKeywordMapper({"variable.language":"ENDIFMACRO|include|IFMACRO|load",keyword:"adj|append|area|ARGV|be|binary|BoundaryEdge|bordermeasure|CG|Cholesky|cin|cout|Crout|default|diag|edgeOrientation|endl|false|ffind|FILE|find|fixed|flush|GMRES|good|hTriangle|im|imax|imin|InternalEdge|l1|l2|label|lenEdge|length|LINE|linfty|LU|m|max|measure|min|mpiAnySource|mpiBAND|mpiBXOR|mpiCommWorld|mpiLAND|mpiLOR|mpiLXOR|mpiMAX|mpiMIN|mpiPROD|mpirank|mpisize|mpiSUM|mpiUndefined|n|N|Nt|nbe|ndof|ndofK|noshowbase|noshowpos|notaregion|nt|nTonEdge|nuEdge|nuTriangle|nv|nbnomanifold|P|pi|precision|qf1pE|qf1pElump|qf1pT|qf1pTlump|qfV1|qfV1lump|qf2pE|qf2pT|qf2pT4P1|qfV2|qf3pE|qf4pE|qf5pE|qf5pT|qfV5|qf7pT|qf9pT|qfnbpE|quantile|re|region|rfind|scientific|searchMethod|setw|showbase|showpos|sparsesolver|sum|tellp|true|UMFPACK|unused|whoinElement|verbosity|version|volume|x|y|z","storage.type":"bool|border|complex|dmatrix|fespace|func|gslspline|ifstream|int|macro|matrix|mesh|mesh3|meshS|meshL|mpiComm|mpiGroup|mpiRequest|NewMacro|EndMacro|ofstream|Pmmap|problem|Psemaphore|real|solve|string|varf","constant.language":"BDM1|BDM1Ortho|Edge03d|Edge13d|Edge23d|FEQF|HCT|P0|P03d|P0Edge|P1|P13d|P1b|P1b3d|P1bl|P1bl3d|P1dc|P1Edge|P1nc|P2|P23d|P2b|P2BR|P2dc|P2Edge|P2h|P2Morley|P2pnc|P3|P3dc|P3Edge|P4|P4dc|P4Edge|P5Edge|RT0|RT03d|RT0Ortho|RT1|RT1Ortho|RT2|RT2Ortho","support.function":"abs|acos|acosh|adaptmesh|adj|AffineCG|AffineGMRES|arg|asin|asinh|assert|atan|atan2|atanh|atof|atoi|BFGS|broadcast|buildlayers|buildmesh|buildBdMesh|ceil|chi|complexEigenValue|copysign|change|checkmovemesh|checkmesh|clock|cmaes|conj|convect|cos|cosh|cube|d|dd|dfft|diffnp|diffpos|dimKrylov|dist|dumptable|dx|dxx|dxy|dxz|dy|dyx|dyy|dyz|dz|dzx|dzy|dzz|EigenValue|emptymesh|erf|erfc|exec|exit|exp|extract|fdim|floor|fmax|fmin|fmod|freeyams|Gamma|getARGV|getline|gmshload|gmshload3|gslcdfugaussianP|gslcdfugaussianQ|gslcdfugaussianPinv|gslcdfugaussianQinv|gslcdfgaussianP|gslcdfgaussianQ|gslcdfgaussianPinv|gslcdfgaussianQinv|gslcdfgammaP|gslcdfgammaQ|gslcdfgammaPinv|gslcdfgammaQinv|gslcdfcauchyP|gslcdfcauchyQ|gslcdfcauchyPinv|gslcdfcauchyQinv|gslcdflaplaceP|gslcdflaplaceQ|gslcdflaplacePinv|gslcdflaplaceQinv|gslcdfrayleighP|gslcdfrayleighQ|gslcdfrayleighPinv|gslcdfrayleighQinv|gslcdfchisqP|gslcdfchisqQ|gslcdfchisqPinv|gslcdfchisqQinv|gslcdfexponentialP|gslcdfexponentialQ|gslcdfexponentialPinv|gslcdfexponentialQinv|gslcdfexppowP|gslcdfexppowQ|gslcdftdistP|gslcdftdistQ|gslcdftdistPinv|gslcdftdistQinv|gslcdffdistP|gslcdffdistQ|gslcdffdistPinv|gslcdffdistQinv|gslcdfbetaP|gslcdfbetaQ|gslcdfbetaPinv|gslcdfbetaQinv|gslcdfflatP|gslcdfflatQ|gslcdfflatPinv|gslcdfflatQinv|gslcdflognormalP|gslcdflognormalQ|gslcdflognormalPinv|gslcdflognormalQinv|gslcdfgumbel1P|gslcdfgumbel1Q|gslcdfgumbel1Pinv|gslcdfgumbel1Qinv|gslcdfgumbel2P|gslcdfgumbel2Q|gslcdfgumbel2Pinv|gslcdfgumbel2Qinv|gslcdfweibullP|gslcdfweibullQ|gslcdfweibullPinv|gslcdfweibullQinv|gslcdfparetoP|gslcdfparetoQ|gslcdfparetoPinv|gslcdfparetoQinv|gslcdflogisticP|gslcdflogisticQ|gslcdflogisticPinv|gslcdflogisticQinv|gslcdfbinomialP|gslcdfbinomialQ|gslcdfpoissonP|gslcdfpoissonQ|gslcdfgeometricP|gslcdfgeometricQ|gslcdfnegativebinomialP|gslcdfnegativebinomialQ|gslcdfpascalP|gslcdfpascalQ|gslinterpakima|gslinterpakimaperiodic|gslinterpcsplineperiodic|gslinterpcspline|gslinterpsteffen|gslinterplinear|gslinterppolynomial|gslranbernoullipdf|gslranbeta|gslranbetapdf|gslranbinomialpdf|gslranexponential|gslranexponentialpdf|gslranexppow|gslranexppowpdf|gslrancauchy|gslrancauchypdf|gslranchisq|gslranchisqpdf|gslranerlang|gslranerlangpdf|gslranfdist|gslranfdistpdf|gslranflat|gslranflatpdf|gslrangamma|gslrangammaint|gslrangammapdf|gslrangammamt|gslrangammaknuth|gslrangaussian|gslrangaussianratiomethod|gslrangaussianziggurat|gslrangaussianpdf|gslranugaussian|gslranugaussianratiomethod|gslranugaussianpdf|gslrangaussiantail|gslrangaussiantailpdf|gslranugaussiantail|gslranugaussiantailpdf|gslranlandau|gslranlandaupdf|gslrangeometricpdf|gslrangumbel1|gslrangumbel1pdf|gslrangumbel2|gslrangumbel2pdf|gslranlogistic|gslranlogisticpdf|gslranlognormal|gslranlognormalpdf|gslranlogarithmicpdf|gslrannegativebinomialpdf|gslranpascalpdf|gslranpareto|gslranparetopdf|gslranpoissonpdf|gslranrayleigh|gslranrayleighpdf|gslranrayleightail|gslranrayleightailpdf|gslrantdist|gslrantdistpdf|gslranlaplace|gslranlaplacepdf|gslranlevy|gslranweibull|gslranweibullpdf|gslsfairyAi|gslsfairyBi|gslsfairyAiscaled|gslsfairyBiscaled|gslsfairyAideriv|gslsfairyBideriv|gslsfairyAiderivscaled|gslsfairyBiderivscaled|gslsfairyzeroAi|gslsfairyzeroBi|gslsfairyzeroAideriv|gslsfairyzeroBideriv|gslsfbesselJ0|gslsfbesselJ1|gslsfbesselJn|gslsfbesselY0|gslsfbesselY1|gslsfbesselYn|gslsfbesselI0|gslsfbesselI1|gslsfbesselIn|gslsfbesselI0scaled|gslsfbesselI1scaled|gslsfbesselInscaled|gslsfbesselK0|gslsfbesselK1|gslsfbesselKn|gslsfbesselK0scaled|gslsfbesselK1scaled|gslsfbesselKnscaled|gslsfbesselj0|gslsfbesselj1|gslsfbesselj2|gslsfbesseljl|gslsfbessely0|gslsfbessely1|gslsfbessely2|gslsfbesselyl|gslsfbesseli0scaled|gslsfbesseli1scaled|gslsfbesseli2scaled|gslsfbesselilscaled|gslsfbesselk0scaled|gslsfbesselk1scaled|gslsfbesselk2scaled|gslsfbesselklscaled|gslsfbesselJnu|gslsfbesselYnu|gslsfbesselInuscaled|gslsfbesselInu|gslsfbesselKnuscaled|gslsfbesselKnu|gslsfbessellnKnu|gslsfbesselzeroJ0|gslsfbesselzeroJ1|gslsfbesselzeroJnu|gslsfclausen|gslsfhydrogenicR1|gslsfdawson|gslsfdebye1|gslsfdebye2|gslsfdebye3|gslsfdebye4|gslsfdebye5|gslsfdebye6|gslsfdilog|gslsfmultiply|gslsfellintKcomp|gslsfellintEcomp|gslsfellintPcomp|gslsfellintDcomp|gslsfellintF|gslsfellintE|gslsfellintRC|gslsferfc|gslsflogerfc|gslsferf|gslsferfZ|gslsferfQ|gslsfhazard|gslsfexp|gslsfexpmult|gslsfexpm1|gslsfexprel|gslsfexprel2|gslsfexpreln|gslsfexpintE1|gslsfexpintE2|gslsfexpintEn|gslsfexpintE1scaled|gslsfexpintE2scaled|gslsfexpintEnscaled|gslsfexpintEi|gslsfexpintEiscaled|gslsfShi|gslsfChi|gslsfexpint3|gslsfSi|gslsfCi|gslsfatanint|gslsffermidiracm1|gslsffermidirac0|gslsffermidirac1|gslsffermidirac2|gslsffermidiracint|gslsffermidiracmhalf|gslsffermidirachalf|gslsffermidirac3half|gslsffermidiracinc0|gslsflngamma|gslsfgamma|gslsfgammastar|gslsfgammainv|gslsftaylorcoeff|gslsffact|gslsfdoublefact|gslsflnfact|gslsflndoublefact|gslsflnchoose|gslsfchoose|gslsflnpoch|gslsfpoch|gslsfpochrel|gslsfgammaincQ|gslsfgammaincP|gslsfgammainc|gslsflnbeta|gslsfbeta|gslsfbetainc|gslsfgegenpoly1|gslsfgegenpoly2|gslsfgegenpoly3|gslsfgegenpolyn|gslsfhyperg0F1|gslsfhyperg1F1int|gslsfhyperg1F1|gslsfhypergUint|gslsfhypergU|gslsfhyperg2F0|gslsflaguerre1|gslsflaguerre2|gslsflaguerre3|gslsflaguerren|gslsflambertW0|gslsflambertWm1|gslsflegendrePl|gslsflegendreP1|gslsflegendreP2|gslsflegendreP3|gslsflegendreQ0|gslsflegendreQ1|gslsflegendreQl|gslsflegendrePlm|gslsflegendresphPlm|gslsflegendrearraysize|gslsfconicalPhalf|gslsfconicalPmhalf|gslsfconicalP0|gslsfconicalP1|gslsfconicalPsphreg|gslsfconicalPcylreg|gslsflegendreH3d0|gslsflegendreH3d1|gslsflegendreH3d|gslsflog|gslsflogabs|gslsflog1plusx|gslsflog1plusxmx|gslsfpowint|gslsfpsiint|gslsfpsi|gslsfpsi1piy|gslsfpsi1int|gslsfpsi1|gslsfpsin|gslsfsynchrotron1|gslsfsynchrotron2|gslsftransport2|gslsftransport3|gslsftransport4|gslsftransport5|gslsfsin|gslsfcos|gslsfhypot|gslsfsinc|gslsflnsinh|gslsflncosh|gslsfanglerestrictsymm|gslsfanglerestrictpos|gslsfzetaint|gslsfzeta|gslsfzetam1|gslsfzetam1int|gslsfhzeta|gslsfetaint|gslsfeta|imag|int0d|int1d|int2d|int3d|intN|intN1|intalledges|intallfaces|interpolate|invdiff|invdiffnp|invdiffpos|Isend|isInf|isNaN|isoline|Irecv|j0|j1|jn|jump|lgamma|LinearCG|LinearGMRES|log|log10|lrint|lround|max|mean|medit|min|mmg3d|movemesh|movemesh23|movemesh3|movemeshS|mpiAlltoall|mpiAlltoallv|mpiAllgather|mpiAllgatherv|mpiAllReduce|mpiBarrier|mpiGather|mpiGatherv|mpiRank|mpiReduce|mpiScatter|mpiScatterv|mpiSize|mpiWait|mpiWaitAny|mpiWtick|mpiWtime|mshmet|NaN|NLCG|on|plot|polar|Post|pow|processor|processorblock|projection|randinit|randint31|randint32|random|randreal1|randreal2|randreal3|randres53|Read|readmesh|readmesh3|Recv|rint|round|savemesh|savesol|savevtk|seekg|Sent|set|sign|signbit|sin|sinh|sort|splitComm|splitmesh|sqrt|square|square3|segment|srandom|srandomdev|Stringification|swap|system|tan|tanh|tellg|tetg|tetgconvexhull|tetgreconstruction|tetgtransfo|tgamma|triangulate|trunc|Wait|Write|y0|y1|yn","constant.language.boolean":"true|false","variable.parameter":"A|A1|abserror|absolute|aniso|aspectratio|B|B1|bb|beginend|bin|boundary|bw|close|cleanmesh|cmm|coef|composante|cutoff|datafilename|dataname|dim|distmax|displacement|doptions|dparams|eps|err|errg|facemerge|facetcl|factorize|file|fill|fixedborder|flabel|flags|floatmesh|floatsol|fregion|gradation|grey|hmax|hmin|holelist|hsv|init|inquire|inside|IsMetric|iso|ivalue|keepbackvertices|label|labeldown|labelmid|labelup|levelset|loptions|lparams|maxit|maxsubdiv|meditff|mem|memory|metric|mode|nbarrow|nbiso|nbiter|nbjacoby|nboffacetcl|nbofholes|nbofregions|nbregul|nbsmooth|nbvx|ncv|nev|nomeshgeneration|normalization|omega|op|optimize|option|options|order|orientation|periodic|pNormalT|power|precisvertice|precon|prev|ps|ptmerge|qfe|qforder|qft|qfV|ratio|rawvector|refe|reffacelow|reffacemid|reffaceup|refnum|reft|reftet|reftri|region|regionlist|removeduplicate|renumv|renumt|rescaling|ridgeangle|ridgeangledetection|rmledges|rmInternalEdges|save|sigma|sizeofvolume|smoothing|solver|sparams|split|splitin2|splitpbedge|stop|strategy|swap|switch|sym|t|tgv|thetamax|tol|tolpivot|tolpivotsym|transfo|U2Vc|value|varrow|vector|veps|viso|wait|width|withsurfacemesh|WindowIndex|which|zbound"},"identifier"),n="\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|u{[0-9a-fA-F]{1,6}}|[0-2][0-7]{0,2}|3[0-7][0-7]?|[4-7][0-7]?|.)";this.$rules={no_regex:[i.getStartRule("doc-start"),l("no_regex"),{token:"string",regex:"'(?=.)",next:"qstring"},{token:"string",regex:'"(?=.)',next:"qqstring"},{token:"constant.numeric",regex:/0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\b/},{token:"constant.numeric",regex:/(?:\d\d*(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+\b)?/},{token:["storage.type","punctuation.operator","support.function","punctuation.operator","entity.name.function","text","keyword.operator"],regex:"("+o+")(\\.)(prototype)(\\.)("+o+")(\\s*)(=)",next:"function_arguments"},{token:["storage.type","punctuation.operator","entity.name.function","text","keyword.operator","text","storage.type","text","paren.lparen"],regex:"("+o+")(\\.)("+o+")(\\s*)(=)(\\s*)(function)(\\s*)(\\()",next:"function_arguments"},{token:["entity.name.function","text","keyword.operator","text","storage.type","text","paren.lparen"],regex:"("+o+")(\\s*)(=)(\\s*)(function)(\\s*)(\\()",next:"function_arguments"},{token:["storage.type","punctuation.operator","entity.name.function","text","keyword.operator","text","storage.type","text","entity.name.function","text","paren.lparen"],regex:"("+o+")(\\.)("+o+")(\\s*)(=)(\\s*)(function)(\\s+)(\\w+)(\\s*)(\\()",next:"function_arguments"},{token:["storage.type","text","entity.name.function","text","paren.lparen"],regex:"(function)(\\s+)("+o+")(\\s*)(\\()",next:"function_arguments"},{token:["entity.name.function","text","punctuation.operator","text","storage.type","text","paren.lparen"],regex:"("+o+")(\\s*)(:)(\\s*)(function)(\\s*)(\\()",next:"function_arguments"},{token:["text","text","storage.type","text","paren.lparen"],regex:"(:)(\\s*)(function)(\\s*)(\\()",next:"function_arguments"},{token:"keyword",regex:"from(?=\\s*('|\"))"},{token:"keyword",regex:"(?:case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void)\\b",next:"start"},{token:["support.constant"],regex:/that\b/},{token:t,regex:o},{token:"punctuation.operator",regex:/[.](?![.])/,next:"property"},{token:"storage.type",regex:/=>/,next:"start"},{token:"keyword.operator",regex:/--|\+\+|\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\|\||\?:|[!$%&*+\-~\/^]=?/,next:"start"},{token:"punctuation.operator",regex:/[?:,;.]/,next:"start"},{token:"paren.lparen",regex:/[\[({]/,next:"start"},{token:"paren.rparen",regex:/[\])}]/},{token:"comment",regex:/^#!.*$/}],property:[{token:"text",regex:"\\s+"},{token:["storage.type","punctuation.operator","entity.name.function","text","keyword.operator","text","storage.type","text","entity.name.function","text","paren.lparen"],regex:"("+o+")(\\.)("+o+")(\\s*)(=)(\\s*)(function)(?:(\\s+)(\\w+))?(\\s*)(\\()",next:"function_arguments"},{token:"punctuation.operator",regex:/[.](?![.])/},{token:"identifier",regex:o},{regex:"",token:"empty",next:"no_regex"}],start:[i.getStartRule("doc-start"),l("start"),{token:"string.regexp",regex:"\\/",next:"regex"},{token:"text",regex:"\\s+|^$",next:"start"},{token:"empty",regex:"",next:"no_regex"}],regex:[{token:"regexp.keyword.operator",regex:"\\\\(?:u[\\da-fA-F]{4}|x[\\da-fA-F]{2}|.)"},{token:"string.regexp",regex:"/[sxngimy]*",next:"no_regex"},{token:"invalid",regex:/\{\d+\b,?\d*\}[+*]|[+*$^?][+*]|[$^][?]|\?{3,}/},{token:"constant.language.escape",regex:/\(\?[:=!]|\)|\{\d+\b,?\d*\}|[+*]\?|[()$^+*?.]/},{token:"constant.language.delimiter",regex:/\|/},{token:"constant.language.escape",regex:/\[\^?/,next:"regex_character_class"},{token:"empty",regex:"$",next:"no_regex"},{defaultToken:"string.regexp"}],regex_character_class:[{token:"regexp.charclass.keyword.operator",regex:"\\\\(?:u[\\da-fA-F]{4}|x[\\da-fA-F]{2}|.)"},{token:"constant.language.escape",regex:"]",next:"regex"},{token:"constant.language.escape",regex:"-"},{token:"empty",regex:"$",next:"no_regex"},{defaultToken:"string.regexp.charachterclass"}],function_arguments:[{token:"variable.parameter",regex:o},{token:"punctuation.operator",regex:"[, ]+"},{token:"punctuation.operator",regex:"$"},{token:"empty",regex:"",next:"no_regex"}],qqstring:[{token:"constant.language.escape",regex:n},{token:"string",regex:"\\\\$",consumeLineEnd:!0},{token:"string",regex:'"|$',next:"no_regex"},{defaultToken:"string"}],qstring:[{token:"constant.language.escape",regex:n},{token:"string",regex:"\\\\$",consumeLineEnd:!0},{token:"string",regex:"'|$",next:"no_regex"},{defaultToken:"string"}]},this.embedRules(i,"doc-",[i.getEndRule("no_regex")]),this.normalizeRules()};function l(e){return[{token:"comment",regex:/\/\*/,next:[i.getTagRule(),{token:"comment",regex:"\\*\\/",next:e||"pop"},{defaultToken:"comment",caseInsensitive:!0}]},{token:"comment",regex:"\\/\\/",next:[i.getTagRule(),{token:"comment",regex:"$|^",next:e||"pop"},{defaultToken:"comment",caseInsensitive:!0}]}]}a.inherits(s,r),t.FreefemHighlightRules=s}),ace.define("ace/mode/matching_brace_outdent",["require","exports","module","ace/range"],function(e,t,n){let Range=e("../range").Range,a=function(){};(function(){this.checkOutdent=function(e,t){return!!/^\s+$/.test(e)&&/^\s*\}/.test(t)},this.autoOutdent=function(e,t){let n=e.getLine(t),a=n.match(/^(\s*\})/);if(!a)return 0;let i=a[1].length,r=e.findMatchingBracket({row:t,column:i});if(!r||r.row==t)return 0;let o=this.$getIndent(e.getLine(r.row));e.replace(new Range(t,0,t,i-1),o)},this.$getIndent=function(e){return e.match(/^\s*/)[0]}}).call(a.prototype),t.MatchingBraceOutdent=a}),ace.define("ace/mode/folding/cstyle",["require","exports","module","ace/lib/oop","ace/range","ace/mode/folding/fold_mode"],function(e,t,n){let a=e("../../lib/oop"),Range=e("../../range").Range,i=e("./fold_mode").FoldMode,r=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\|[^|]*?$/,"|"+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\|[^|]*?$/,"|"+e.end)))};a.inherits(r,i),(function(){this.foldingStartMarker=/([\{\[\(])[^\}\]\)]*$|^\s*(\/\*)/,this.foldingStopMarker=/^[^\[\{\(]*([\}\]\)])|^[\s\*]*(\*\/)/,this.singleLineBlockCommentRe=/^\s*(\/\*).*\*\/\s*$/,this.tripleStarBlockCommentRe=/^\s*(\/\*\*\*).*\*\/\s*$/,this.startRegionRe=/^\s*(\/\*|\/\/)#?region\b/,this._getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,n){let a=e.getLine(n);if(this.singleLineBlockCommentRe.test(a)&&!this.startRegionRe.test(a)&&!this.tripleStarBlockCommentRe.test(a))return"";let i=this._getFoldWidgetBase(e,t,n);return!i&&this.startRegionRe.test(a)?"start":i},this.getFoldWidgetRange=function(e,t,n,a){let i=e.getLine(n);if(this.startRegionRe.test(i))return this.getCommentRegionBlock(e,i,n);let r=i.match(this.foldingStartMarker);if(r){let i=r.index;if(r[1])return this.openingBracketBlock(e,r[1],n,i);let o=e.getCommentFoldRange(n,i+r[0].length,1);return o&&!o.isMultiLine()&&(a?o=this.getSectionRange(e,n):"all"!=t&&(o=null)),o}if("markbegin"!==t&&(r=i.match(this.foldingStopMarker))){let t=r.index+r[0].length;return r[1]?this.closingBracketBlock(e,r[1],n,t):e.getCommentFoldRange(n,t,-1)}},this.getSectionRange=function(e,t){let n=e.getLine(t),a=n.search(/\S/),i=t,r=n.length,o=t+=1,s=e.getLength();for(;++t<s;){n=e.getLine(t);let r=n.search(/\S/);if(-1===r)continue;if(a>r)break;let s=this.getFoldWidgetRange(e,"all",t);if(s){if(s.start.row<=i)break;if(s.isMultiLine())t=s.end.row;else if(a==r)break}o=t}return new Range(i,r,o,e.getLine(o).length)},this.getCommentRegionBlock=function(e,t,n){let a=t.search(/\s*$/),i=e.getLength(),r=n,o=/^\s*(?:\/\*|\/\/|--)#?(end)?region\b/,s=1;for(;++n<i;){t=e.getLine(n);let a=o.exec(t);if(a&&(a[1]?s--:s++,!s))break}let l=n;if(l>r)return new Range(r,a,l,t.length)}}).call(r.prototype)}),ace.define("ace/mode/javascript",["require","exports","module","ace/lib/oop","ace/mode/text","ace/mode/javascript_highlight_rules","ace/mode/matching_brace_outdent","ace/worker/worker_client","ace/mode/behaviour/cstyle","ace/mode/folding/cstyle"],function(e,t,n){let a=e("../lib/oop"),i=e("./text").Mode,r=e("./javascript_highlight_rules").JavaScriptHighlightRules,o=e("./matching_brace_outdent").MatchingBraceOutdent,s=e("../worker/worker_client").WorkerClient,l=e("./behaviour/cstyle").CstyleBehaviour,p=e("./folding/cstyle").FoldMode,c=function(){this.HighlightRules=r,this.$outdent=new o,this.$behaviour=new l,this.foldingRules=new p};a.inherits(c,i),(function(){this.lineCommentStart="//",this.blockComment={start:"/*",end:"*/"},this.$quotes={'"':'"',"'":"'","`":"`"},this.getNextLineIndent=function(e,t,n){let a=this.$getIndent(t),i=this.getTokenizer().getLineTokens(t,e),r=i.tokens,o=i.state;if(r.length&&"comment"==r[r.length-1].type)return a;if("start"==e||"no_regex"==e){let e=t.match(/^.*(?:\bcase\b.*:|[\{\(\[])\s*$/);e&&(a+=n)}else if("doc-start"==e){if("start"==o||"no_regex"==o)return"";let e=t.match(/^\s*(\/?)\*/);e&&(e[1]&&(a+=" "),a+="* ")}return a},this.checkOutdent=function(e,t,n){return this.$outdent.checkOutdent(t,n)},this.autoOutdent=function(e,t,n){this.$outdent.autoOutdent(t,n)},this.createWorker=function(e){let t=new s(["ace"],"ace/mode/javascript_worker","JavaScriptWorker");return t.attachToDocument(e.getDocument()),t.on("annotate",function(t){e.setAnnotations(t.data)}),t.on("terminate",function(){e.clearAnnotations()}),t},this.$id="ace/mode/javascript",this.snippetFileId="ace/snippets/javascript"}).call(c.prototype),t.Mode=c}),ace.define("ace/mode/freefem",["require","exports","module","ace/lib/oop","ace/mode/text","ace/mode/freefem_highlight_rules","ace/mode/matching_brace_outdent","ace/worker/worker_client","ace/mode/behaviour/cstyle","ace/mode/folding/cstyle"],function(e,t,n){let a=e("../lib/oop"),i=e("./text").Mode,r=e("./freefem_highlight_rules").FreefemHighlightRules,o=e("./matching_brace_outdent").MatchingBraceOutdent;e("../worker/worker_client").WorkerClient;let s=e("./behaviour/cstyle").CstyleBehaviour,l=e("./folding/cstyle").FoldMode,p=function(){this.HighlightRules=r,this.$outdent=new o,this.$behaviour=new s,this.foldingRules=new l};a.inherits(p,i),(function(){this.lineCommentStart="//",this.blockComment={start:"/*",end:"*/"},this.$quotes={'"':'"',"'":"'","`":"`"},this.getNextLineIndent=function(e,t,n){let a=this.$getIndent(t),i=this.getTokenizer().getLineTokens(t,e),r=i.tokens,o=i.state;if(r.length&&"comment"==r[r.length-1].type)return a;if("start"==e||"no_regex"==e){let e=t.match(/^.*(?:\bcase\b.*:|[\{\(\[])\s*$/);e&&(a+=n)}else if("doc-start"==e){if("start"==o||"no_regex"==o)return"";let e=t.match(/^\s*(\/?)\*/);e&&(e[1]&&(a+=" "),a+="* ")}return a},this.checkOutdent=function(e,t,n){return this.$outdent.checkOutdent(t,n)},this.autoOutdent=function(e,t,n){this.$outdent.autoOutdent(t,n)},this.$id="ace/mode/freefem",this.snippetFileId="ace/snippets/freefem"}).call(p.prototype),t.Mode=p}),ace.define("ace/mode/freefem-ejs",["require","exports","module","ace/lib/oop","ace/mode/freefem_highlight_rules","ace/mode/javascript_highlight_rules","ace/lib/oop","ace/mode/javascript","ace/mode/freefem"],function(e,t,n){let a=e("../lib/oop"),i=e("./javascript_highlight_rules").JavaScriptHighlightRules,r=e("./freefem_highlight_rules").FreefemHighlightRules,o=function(e,t){for(let n in r.call(this),e||(e="(?:<%|<\\?|{{)"),t||(t="(?:%>|\\?>|}})"),this.$rules)this.$rules[n].unshift({token:"markup.list.meta.tag",regex:e+"(?![>}])[-=]?",push:"ejs-start"});this.embedRules(new i({jsx:!1}).getRules(),"ejs-",[{token:"markup.list.meta.tag",regex:"-?"+t,next:"pop"},{token:"comment",regex:"//.*?"+t,next:"pop"}]),this.normalizeRules()};a.inherits(o,r),t.EjsHighlightRules=o;let s=e("./javascript").Mode,l=e("./freefem").Mode,p=function(){l.call(this),this.HighlightRules=o,this.createModeDelegates({"js-":s,"ejs-":s})};a.inherits(p,l),(function(){this.$id="ace/mode/ejs"}).call(p.prototype),t.Mode=p}),ace.require(["ace/mode/freefem-ejs"],function(e){"object"==typeof module&&"object"==typeof exports&&module&&(module.exports=e)});var p=n(43367),c=n(65292),u=JSON.parse('[{"caption":"abs","snippet":"abs(${1:value})"},{"caption":"acos","snippet":"acos(${1:value})"},{"caption":"acosh","snippet":"acosh(${1:value})"},{"caption":"adaptmesh","snippet":"adaptmesh(${1:Th}, ${2:metric}, ${3:nbvx})"},{"caption":"adj","snippet":"adj(${1:matrix})"},{"caption":"affinecg","snippet":"affinecg(${1:A}, ${2:b}, ${3:x0}, ${4:eps}, ${5:itermax})"},{"caption":"affinegmres","snippet":"affinegmres(${1:A}, ${2:b}, ${3:x0}, ${4:eps}, ${5:itermax})"},{"caption":"arg","snippet":"arg(${1:complex_value})"},{"caption":"asin","snippet":"asin(${1:value})"},{"caption":"asinh","snippet":"asinh(${1:value})"},{"caption":"assert","snippet":"assert(${1:condition}, ${2:message})"},{"caption":"atan","snippet":"atan(${1:value})"},{"caption":"atan2","snippet":"atan2(${1:y}, ${2:x})"},{"caption":"atanh","snippet":"atanh(${1:value})"},{"caption":"atoi","snippet":"atoi(${1:str})"},{"caption":"atof","snippet":"atof(${1:str})"},{"caption":"bfgs","snippet":"bfgs(${1:x0}, ${2:eps}, ${3:itermax})"},{"caption":"buildmesh","snippet":"buildmesh(${1:boundary})"},{"caption":"ceil","snippet":"ceil(${1:value})"},{"caption":"change","snippet":"change(${1:F}, ${2:f}, ${3:v})"},{"caption":"checkmovemesh","snippet":"checkmovemesh(${1:Th})"},{"caption":"chi","snippet":"chi(${1:value})"},{"caption":"clock","snippet":"clock()"},{"caption":"complexeigenvalue","snippet":"complexeigenvalue(${1:A}, ${2:B}, ${3:lambdare}, ${4:lambdaim}, ${5:xre}, ${6:xim}, ${7:opts})"},{"caption":"conj","snippet":"conj(${1:complex_value})"},{"caption":"convect","snippet":"convect(${1:u}, ${2:timestep}, ${3:x}, ${4:xnew})"},{"caption":"copysign","snippet":"copysign(${1:x}, ${2:y})"},{"caption":"cos","snippet":"cos(${1:value})"},{"caption":"cosh","snippet":"cosh(${1:value})"},{"caption":"diffnp","snippet":"diffnp(${1:F})"},{"caption":"diffpos","snippet":"diffpos(${1:F})"},{"caption":"dist","snippet":"dist(${1:x}, ${2:y})"},{"caption":"dumptable","snippet":"dumptable(${1:tab})"},{"caption":"dx","snippet":"dx(${1:u})"},{"caption":"dxx","snippet":"dxx(${1:u})"},{"caption":"dxy","snippet":"dxy(${1:u})"},{"caption":"dxz","snippet":"dxz(${1:u})"},{"caption":"dy","snippet":"dy(${1:u})"},{"caption":"dyx","snippet":"dyx(${1:u})"},{"caption":"dyy","snippet":"dyy(${1:u})"},{"caption":"dyz","snippet":"dyz(${1:u})"},{"caption":"dz","snippet":"dz(${1:u})"},{"caption":"dzx","snippet":"dzx(${1:u})"},{"caption":"dzy","snippet":"dzy(${1:u})"},{"caption":"dzz","snippet":"dzz(${1:u})"},{"caption":"eigenvalue","snippet":"eigenvalue(${1:A}, ${2:lambda}, ${3:x}, ${4:opts})"},{"caption":"emptymesh","snippet":"emptymesh(${1:Th})"},{"caption":"erf","snippet":"erf(${1:value})"},{"caption":"erfc","snippet":"erfc(${1:value})"},{"caption":"exec","snippet":"exec(${1:command})"},{"caption":"exit","snippet":"exit(${1:status})"},{"caption":"exp","snippet":"exp(${1:value})"},{"caption":"fdim","snippet":"fdim(${1:x}, ${2:y})"},{"caption":"floor","snippet":"floor(${1:value})"},{"caption":"fmax","snippet":"fmax(${1:x}, ${2:y})"},{"caption":"fmin","snippet":"fmin(${1:x}, ${2:y})"},{"caption":"fmod","snippet":"fmod(${1:x}, ${2:y})"},{"caption":"imag","snippet":"imag(${1:complex_value})"},{"caption":"int1d","snippet":"int1d(${1:Th}, ${2:expr})"},{"caption":"int2d","snippet":"int2d(${1:Th}, ${2:expr})"},{"caption":"int3d","snippet":"int3d(${1:Th}, ${2:expr})"},{"caption":"intN","snippet":"intN(${1:Th}, ${2:expr})"},{"caption":"intalledges","snippet":"intalledges(${1:Th}, ${2:expr})"},{"caption":"intallfaces","snippet":"intallfaces(${1:Th}, ${2:expr})"},{"caption":"interpolate","snippet":"interpolate(${1:Vh}, ${2:expr})"},{"caption":"invdiff","snippet":"invdiff(${1:F}, ${2:x})"},{"caption":"invdiffnp","snippet":"invdiffnp(${1:F})"},{"caption":"invdiffpos","snippet":"invdiffpos(${1:F})"},{"caption":"isinf","snippet":"isinf(${1:value})"},{"caption":"isnan","snippet":"isnan(${1:value})"},{"caption":"isnormal","snippet":"isnormal(${1:value})"},{"caption":"j0","snippet":"j0(${1:value})"},{"caption":"j1","snippet":"j1(${1:value})"},{"caption":"jn","snippet":"jn(${1:n}, ${2:value})"},{"caption":"jump","snippet":"jump(${1:u})"},{"caption":"linearcg","snippet":"linearcg(${1:A}, ${2:b}, ${3:x0}, ${4:eps}, ${5:itermax})"},{"caption":"lineargmres","snippet":"lineargmres(${1:A}, ${2:b}, ${3:x0}, ${4:eps}, ${5:itermax})"},{"caption":"lgamma","snippet":"lgamma(${1:value})"},{"caption":"log","snippet":"log(${1:value})"},{"caption":"log10","snippet":"log10(${1:value})"},{"caption":"lrint","snippet":"lrint(${1:value})"},{"caption":"lround","snippet":"lround(${1:value})"},{"caption":"ltime","snippet":"ltime(${1:Th}, ${2:opts})"},{"caption":"max","snippet":"max(${1:a}, ${2:b})"},{"caption":"min","snippet":"min(${1:a}, ${2:b})"},{"caption":"movemesh","snippet":"movemesh(${1:Th}, ${2:u})"},{"caption":"nan","snippet":"nan()"},{"caption":"nlcg","snippet":"nlcg(${1:x0}, ${2:eps}, ${3:itermax})"},{"caption":"on","snippet":"on(${1:label}, ${2:expr})"},{"caption":"plot","snippet":"plot(${1:Th}, ${2:opts})"},{"caption":"polar","snippet":"polar(${1:r}, ${2:theta})"},{"caption":"pow","snippet":"pow(${1:base}, ${2:exponent})"},{"caption":"projection","snippet":"projection(${1:Vh}, ${2:expr})"},{"caption":"randinit","snippet":"randinit(${1:seed})"},{"caption":"randint31","snippet":"randint31()"},{"caption":"randint32","snippet":"randint32()"},{"caption":"randreal1","snippet":"randreal1()"},{"caption":"randreal2","snippet":"randreal2()"},{"caption":"randreal3","snippet":"randreal3()"},{"caption":"randres53","snippet":"randres53()"},{"caption":"readmesh","snippet":"readmesh(${1:filename})"},{"caption":"readmesh3","snippet":"readmesh3(${1:filename})"},{"caption":"real","snippet":"real(${1:complex_value})"},{"caption":"rint","snippet":"rint(${1:value})"},{"caption":"round","snippet":"round(${1:value})"},{"caption":"savemesh","snippet":"savemesh(${1:Th}, ${2:filename})"},{"caption":"set","snippet":"set(${1:F}, ${2:value})"},{"caption":"sign","snippet":"sign(${1:value})"},{"caption":"signbit","snippet":"signbit(${1:value})"},{"caption":"sin","snippet":"sin(${1:value})"},{"caption":"sinh","snippet":"sinh(${1:value})"},{"caption":"sort","snippet":"sort(${1:array})"},{"caption":"splitmesh","snippet":"splitmesh(${1:Th}, ${2:nbproc})"},{"caption":"sqrt","snippet":"sqrt(${1:value})"},{"caption":"square","snippet":"square(${1:value})"},{"caption":"storagetotal","snippet":"storagetotal()"},{"caption":"storageused","snippet":"storageused()"},{"caption":"strtod","snippet":"strtod(${1:str})"},{"caption":"strtol","snippet":"strtol(${1:str})"},{"caption":"swap","snippet":"swap(${1:a}, ${2:b})"},{"caption":"system","snippet":"system(${1:command})"},{"caption":"tan","snippet":"tan(${1:value})"},{"caption":"tanh","snippet":"tanh(${1:value})"},{"caption":"tgamma","snippet":"tgamma(${1:value})"},{"caption":"time","snippet":"time()"},{"caption":"trace","snippet":"trace(${1:A})"},{"caption":"trunc","snippet":"trunc(${1:value})"},{"caption":"y0","snippet":"y0(${1:value})"},{"caption":"y1","snippet":"y1(${1:value})"},{"caption":"yn","snippet":"yn(${1:n}, ${2:value})"}]'),m=JSON.parse('{"Z":{"abs":{"definition":"Return the absolute value.","example":"real a = abs(b);\\n","params":["b (int, real, complex, fespace function, real[int] or real[int, int])"],"output":["a (int, real, real[int] or real[int, int])"]},"acos":{"definition":"\\\\(\\\\arccos\\\\) function.","example":"real theta = acos(x);\\n","params":["x (real, real[int] or real[int, int])"],"output":["theta (real, real[int] or real[int, int])"]},"acosh":{"definition":"Parameter:","example":"real theta = acosh(x);\\n","params":["x (real)"],"output":["theta (real)"]},"adaptmesh":{"definition":"Mesh adaptation function.","example":"mesh Thnew = adaptmesh(Th, [fx, fy], hmin=HMin, hmax=HMax, err=Err, errg=ErrG, nbvx=NbVx, nbsmooth=NbSmooth, nbjacoby=NbJacoby, ratio=Ratio, omega=Omega, iso=Iso, abserror=AbsError, cutoff=CutOff, verbosity=Verbosity, inquire=Inquire, splitpbedge=SplitPbEdge, maxsubdiv=MaxSubdiv, rescaling=Rescaling, keepbackvertices=KeepBackVertices, IsMetric=isMetric, power=Power, thetamax=ThetaMax, splitin2=SplitIn2, metric=Metric, nomeshgeneration=NoMeshGeneration, periodic=Periodic);\\n","params":["Th (mesh) Mesh to refine","[fx, fy] (func or fespace function), scalar or vectorial Function to follow for the mesh adaptation","hmin= (real) Minimum edge size","hmax= (real) Maximum edge size","err= (real) Error level (P1 interpolation)","errg= (real) Relative geometrical error","nbvx= (int) Maximum number of vertices","nbsmooth= (int) Number of smoothing iterations","nbjacoby= (int) Number of iterations for the smoothing procedure","ratio= (real) Ratio of the triangles","omega= (real) Relaxation parameter for the smoothing procedure","iso= (bool) Isotropic adaptation (if true)","abserror= (bool) Error (if true) - Relative error (if false)","cutoff= (real) Lower limit of the relative error evaluation","verbosity= (real) Verbosity level","inquire= (bool) If true, inquire graphically","splitpbedge= (bool) If true, split all internal edges in half","maxsubdiv= (int) Bound the maximum subdivisions","rescaling= (bool) Rescale the function in [0, 1]","keepbackvertices= (bool) If true, try to keep vertices of the original mesh","IsMetric= (bool) If true, the metric is defined explicitly","power= (int) Exponent of the Hessian","thetamax= (int) Minimum corner angle (in degree)","splitin2= (bool) Split all triangles into 4 sub-triangles if true","metric= ([real[int], real[int], real[int]]) Array of 3 real arrays defining the metric","nomeshgeneration= (bool) If true, the mesh is not generated","periodic= (real[int, int]) Build an adapted periodic mesh"],"output":["Thnew (mesh or mesh3)"]},"adj":{"definition":"Adjacent triangle of the triangle \\\\(k\\\\) by the edge \\\\(e\\\\)","example":"int T = Th[k].adj(e);\\n","params":["e (int) Edge number"],"output":["T (int) Triangle number"]},"affinecg":{"definition":"Affine conjugate gradient solver","example":"int Conv = AffineCG(A, x, precon=Precon, nbiter=NbIter, eps=Eps, veps=VEps, stop=Stop);\\n","params":["A (matrix) Matrix of the problem \\\\(Ax=b\\\\)","x (real[int]) Solution vector","precon= (real[int]) Preconditionning function","nbiter= (int) Maximum number of iterations","eps= (real)","veps= (real) Same as eps, but return -eps","stop= (func) Convergence criterion as a function"],"output":["Conv (int) 0: converged - !0: not converged"]},"affinegmres":{"definition":"Affine GMRES solver","example":"","params":[],"output":[]},"arg":{"definition":"Return the argument of a complex number.","example":"real a = arg(c);\\n","params":["c (complex)"],"output":["r (real)"]},"asin":{"definition":"\\\\(\\\\arcsin\\\\) function.","example":"real theta = asin(x);\\n","params":["x (real, real[int] or real[int, int])"],"output":["theta (real, real[int] or real[int, int])"]},"asinh":{"definition":"Parameter:","example":"real theta = asinh(x);\\n","params":["x (real)"],"output":["theta (real)"]},"assert":{"definition":"Verify if a condition is true (same as C), if not the program stops.","example":"assert(x==0)\\n","params":["Boolean condition"],"output":["None"]},"atan":{"definition":"\\\\(\\\\arctan\\\\) function.","example":"real theta = atan(x);\\n","params":["x (real)"],"output":["theta (real)"]},"atan2":{"definition":"\\\\(\\\\displaystyle{\\\\arctan\\\\left(\\\\frac{y}{x}\\\\right)}\\\\) function, returning the correct sign for \\\\(\\\\theta\\\\).","example":"real theta = atan2(y, x)\\n","params":["x (real)"],"output":["theta (real)"]},"atanh":{"definition":"Parameter:","example":"real theta = atanh(x);\\n","params":["x (real)"],"output":["theta (real)"]},"atoi":{"definition":"Convert a string to an interger.","example":"int a = atoi(s);\\n","params":["s (string)"],"output":["a (int)"]},"atof":{"definition":"Convert a string to a real.","example":"real a = atof(s);\\n","params":["s (string)"],"output":["a (real)"]},"bfgs":{"definition":"Todo","example":"","params":[],"output":[]},"buildmesh":{"definition":"Build a 2D mesh using border elements.","example":"mesh Th = buildmesh(b1(nn) + b2(nn) + b3(nn) + b4(nn),[points=Points], ][nbvx=Nbvx], [fixedborder=FixedBorder]);\\n","params":["b1, b2, b3, b4 (border)","points (real[int, int]) [Optional]","nbvx= (int) [Optional]","fixedborder= (bool) [Optional]"],"output":["Th (mesh) Resulting mesh"]},"ceil":{"definition":"Round fractions up of \\\\(x\\\\).","example":"int c = ceil(x);\\n","params":["x (real)"],"output":["c (int)"]},"change":{"definition":"Change a property of a mesh.","example":"int[int] L = [0, 1];\\nThnew = change(Th, label=L);\\n","params":["Th (mesh) Original mesh","label= L (int[int]) Pair of old and new label","region= R (int[int]) Pair of old and new region","flabel= l (func int) Function of int given the new label","fregion= r (func int) Function of int given the new region"],"output":["Thnew (mesh) Mesh with changed\\nparameters"]},"checkmovemesh":{"definition":"Check a movemesh without mesh generation.","example":"real minT = checkmovemesh(Th, [Dx, Dy]);\\n","params":["minT (real) Minimum triangle area"],"output":[]},"chi":{"definition":"Characteristic function of a mesh.","example":"int IsInMesh = chi(Th)(x, y);\\n","params":["Th (mesh or mesh3)","x (real) Position \\\\(x\\\\)","y (real) Position \\\\(y\\\\)"],"output":["IsInMesh (int) 1 if \\\\((x,y)\\\\in\\\\) Th 0 if\\n\\\\((x,y)\\\\not\\\\in\\\\) Th"]},"clock":{"definition":"Get the clock in second.","example":"real t = clock();\\n","params":["None"],"output":["t (real) Current CPU time"]},"complexeigenvalue":{"definition":"Same as EigenValue for complex problems.","example":"","params":[],"output":[]},"conj":{"definition":"Caculate the conjuguate of a complex number.","example":"complex C1 = 1 + 1i;\\ncomplex C2 = conj(C1);\\n","params":["C1 (complex) Complex number"],"output":["C2 (complex) Conjuguate of C1"]},"convect":{"definition":"Characteristics Galerkin method.","example":"real cgm = convect([Ux, Uy], dt, c);\\nreal cgm = convect([Ux, Uy, Uz], dt, c);\\n","params":["ux (fespace function) Velocity: \\\\(x\\\\) component","uy (fespace function) Velocity: \\\\(y\\\\) component","uz (fespace function) 3D only","dt (real) Time step","c (fespace function) Function to convect"],"output":["cgm (real) Result"]},"copysign":{"definition":"C++ copysign function.","example":"real s = copysign(a, b);\\n","params":[],"output":[]},"cos":{"definition":"\\\\(\\\\cos\\\\) function.","example":"real x = cos(theta);\\n","params":["theta (real or complex)"],"output":["x (real or complex)"]},"cosh":{"definition":"\\\\(\\\\cosh\\\\) function.","example":"real x = cosh(theta);\\n","params":["theta (real)"],"output":["x (real)"]},"diffnp":{"definition":"Arithmetic useful function.","example":"diffnp(a, b) = (a<0)&(0<b) ? (b-a) : 0;\\n","params":[],"output":[]},"diffpos":{"definition":"Arithmetic useful function.","example":"diffpos(a, b) = max(b-a, 0);\\n","params":[],"output":[]},"dist":{"definition":"Arithmetic useful function.","example":"dist(a, b) = sqrt(a^2 + b^2);\\ndist(a, b, c) = sqrt(a^2 + b^2 + c^2);\\n","params":[],"output":[]},"dumptable":{"definition":"Show all types, operators and functions in FreeFEM.","example":"dumptable(out);\\n","params":["out (ostream) cout of ofstream file."],"output":["None"]},"dx":{"definition":"\\\\(x\\\\) derivative.","example":"Uh up = dx(u);\\n","params":["u (fespace function)"],"output":["up (fespace function)"]},"dxx":{"definition":"\\\\(x\\\\) double derivative.","example":"Uh upp = dxx(u);\\n","params":["u (fespace function)"],"output":["upp (fespace function)"]},"dxy":{"definition":"\\\\(xy\\\\) derivative.","example":"Uh upp = dxy(u);\\n","params":["u (fespace function)"],"output":["upp (fespace function)"]},"dxz":{"definition":"\\\\(xz\\\\) derivative.","example":"Uh upp = dxz(u);\\n","params":["u (fespace function)"],"output":["upp (fespace function)"]},"dy":{"definition":"\\\\(y\\\\) derivative.","example":"Uh up = dy(u);\\n","params":["u (fespace function)"],"output":["upp (fespace function)"]},"dyx":{"definition":"\\\\(yx\\\\) derivative.","example":"Uh upp = dyx(u);\\n","params":["u (fespace function)"],"output":["upp (fespace function)"]},"dyy":{"definition":"\\\\(y\\\\) double derivative.","example":"Uh upp = dyy(u);\\n","params":["u (fespace function)"],"output":["upp (fespace function)"]},"dyz":{"definition":"\\\\(yz\\\\) derivative.","example":"Uh upp = dyz(u);\\n","params":["u (fespace function)"],"output":["upp (fespace function)"]},"dz":{"definition":"\\\\(z\\\\) derivative.","example":"Uh up = dz(u);\\n","params":["u (fespace function)"],"output":["upp (fespace function)"]},"dzx":{"definition":"\\\\(zx\\\\) derivative.","example":"Uh upp = dzx(u);\\n","params":["u (fespace function)"],"output":["upp (fespace function)"]},"dzy":{"definition":"\\\\(zy\\\\) derivative.","example":"Uh upp = dzy(u);\\n","params":["u (fespace function)"],"output":["upp (fespace function)"]},"dzz":{"definition":"\\\\(z\\\\) double derivative.","example":"Uh upp = dzz(u);\\n","params":["u (fespace function)"],"output":["upp (fespace function)"]},"eigenvalue":{"definition":"Compute the generalized eigenvalue of \\\\(Au=\\\\lambda Bu\\\\).\\nThe shifted-inverse method is used by default with sigma=\\\\(\\\\sigma\\\\), the shift of the method.\\nThe function EigenValue can be used for either matrices or functions returning a matrix vector product.\\nThe use of the matrix version is shown below.","example":"int k = EigenValue(A,B,nev= , sigma= );\\n","params":["A, B: matrices of same size","nev=n: number of desired eigenvalues given by an integer n","sym=: the problem is symmetric or not","tol=: the relative accuracy to which eigenvalues are to be determined","value=: an array to store the real part of the eigenvalues","ivalue=: an array to store the imaginary part of the eigenvalues","vector=: a Finite Element function array to store the eigenvectors","sigma=: the shift value","Other parameters are available for more advanced use: see the ARPACK documentation."],"output":[]},"emptymesh":{"definition":"Build an empty mesh.","example":"mesh eTh = emptymesh(Th, ssd);\\n","params":["Th (mesh) Mesh to empty","ssd (int[int]) Pseudo subregion label"],"output":["eTh (mesh) Empty mesh"]},"erf":{"definition":"The error function:","example":"real err = erf(x);\\n","params":["x (real)"],"output":["err (real)"]},"erfc":{"definition":"Complementary of the error function:","example":"real errc = erfc(x);\\n","params":["x (real)"],"output":["err (real)"]},"exec":{"definition":"Execute an external command.","example":"int v = exec(command);\\n","params":["command (string) Command to execute"],"output":["v (int) Value returned by the command"]},"exit":{"definition":"Exit function, equivalent to return.","example":"exit(N);\\n","params":["N (int) Return value"],"output":["None"]},"exp":{"definition":"Exponential function.","example":"real a = exp(b);\\n","params":["b (real or complex)"],"output":["a (real or complex)"]},"fdim":{"definition":"Positive difference (cmath function).","example":"real fd = fdim(a, b);\\n","params":["a (real)","b (real)"],"output":["fd (real) If \\\\(x > y\\\\), return \\\\(x-y\\\\)If \\\\(x \\\\leq y\\\\), return \\\\(0\\\\)"]},"floor":{"definition":"Floor function.","example":"real a = floor(b);\\n","params":["b (real)"],"output":["a (real)"]},"fmax":{"definition":"Maximum (cmath function).","example":"real Max = fmax(a, b);\\n","params":["a (real)","b (real)"],"output":["Max (real)"]},"fmin":{"definition":"Minimum (cmath function).","example":"real Min = fmin(a, b);\\n","params":["a (real)","b (real)"],"output":["Min (real)"]},"fmod":{"definition":"Remainder of \\\\(a/b\\\\) (cmath function).","example":"real Mod = fmod(a, b);\\n","params":["a (real)","b (real)"],"output":["Mod (real)"]},"imag":{"definition":"Imaginary part of a complex number.","example":"complex c = 1. + 1i;\\nreal Im = imag(c);\\n","params":[],"output":[]},"int1d":{"definition":"1D integral.","example":"int1d(Th, [Label], [qfe=Qfe], [qforder=Qforder])(\\n    ...\\n)\\n","params":["Th (mesh) Mesh where the integral is calculated","Label (int) [Optional]","qfe= (quadrature formula) [Optional]  (qf3E by default)","qforder= (quadrature formula) [Optional]"],"output":["Depending on the situation: In a problem, solve or varf definition: Non relevant."]},"int2d":{"definition":"2D integral.","example":"int2d(Th, [Region], [qft=Qft], [qforder=Qforder])(\\n    ...\\n)\\n","params":["Th (mesh,  mesh3 ,  meshS`or :freefem:`meshL) Mesh where the integral is calculated","Region (int) [Optional] Label of the 2D region (2D simulation or Surface simulation) Default: all regions of the mesh","Label (int) [Optional] Label of the 2D border (3D simulation) Default: all borders of the mesh","qft= (quadrature formula) [Optional]  (qf5T by default)","qforder= (quadrature formula) [Optional]"],"output":["Depending on the situation: In a problem, solve or varf definition: Non relevant. Outside: real (example: real s = int2d(Th, 1)(1.);)."]},"int3d":{"definition":"3D integral.","example":"int3d(Th, [Region], [qfV=QfV], [qforder=Qforder])(\\n    ...\\n)\\n","params":["Th (mesh3) Mesh where the integral is calculated","Region (int) [Optional]","qfV= (quadrature formula) [Optional]  (qf5V by default)","qforder= (quadrature formula) [Optional]"],"output":["Depending on the situation: In a problem, solve or varf definition: Non relevant. Outside: real (example: real v = int3d(Th, 1)(1.);)."]},"intN":{"definition":"Macros for int2d / int3d","example":"See doc on freefem for more details","docReference":"int2d"},"intalledges":{"definition":"Integral on all edges.","example":"intalledges(Th, [Region])(\\n    ...\\n)\\n","params":["Th (mesh) Mesh where the integral is calculated","Region (int) [Optional]"],"output":["Non relevant"]},"intallfaces":{"definition":"Intergal on all faces.","example":"","params":[],"output":[]},"interpolate":{"definition":"Interpolation operator from a finite element space to another.","example":"matrix I = interpolate(Wh, Vh, [inside=Inside], [t=T], [op=Op], [U2Vc=U2VC]);\\n","params":["Wh (fespace) Target finite element space","Vh (fespace) Original finite element space","inside= (bool) If true, create a zero extension outside the Vh domain","t= (bool) If true, return the transposed matrix","op= (int) 0: interpolate the function (default value) 1: interpolate \\\\(\\\\partial_x\\\\) 2: interpolate \\\\(\\\\partial_y\\\\) 3: interpolate \\\\(\\\\partial_z\\\\)","U2Vc= (int[int]) Array of the same size of Wh describing which component of Vhis interpolated in Wh"],"output":["I (matrix) Interpolation matrix operator"]},"invdiff":{"definition":"Arithmetic useful function.","example":"invdiff(a, b) = (abs(a-b) < 10^(-30)) ? (a-b) : 1/(a-b)\\ninvdiff(a, b, e) = (abs(a-b) < e) ? (a-b) : 1/(a-b)\\n","params":[],"output":[]},"invdiffnp":{"definition":"Arithmetic useful function.","example":"invdiffnp(a, b) = (a<0)&(0<b) ? 1/(b-a) : 0\\n","params":[],"output":[]},"invdiffpos":{"definition":"Arithmetic useful function.","example":"invdiffpos(a, b) = (a<b) ? 1./(b-a) : 0\\n","params":[],"output":[]},"isinf":{"definition":"The C++ isInf function.","example":"bool b = isInf(a);\\n","params":[],"output":[]},"isnan":{"definition":"The C++ isNan function.","example":"bool b = isNaN(a);\\n","params":[],"output":[]},"isnormal":{"definition":"The C++ isNormal function.","example":"","params":[],"output":[]},"j0":{"definition":"Bessel function of first kind, order 0.","example":"real b = j0(x);\\n","params":["x (real)"],"output":["b (real)"]},"j1":{"definition":"Bessel function of first kind, order 1.","example":"real b = j1(x);\\n","params":["x (real)"],"output":["b (real)"]},"jn":{"definition":"Bessel function of first kind, order n.","example":"real b = jn(n, x);\\n","params":["n (int)","x (real)"],"output":["b (real)"]},"jump":{"definition":"Jump function across an edge.","example":"intalledges(\\n    ... jump(c) ...\\n)\\n","params":["c (fespace function) Discontinuous function"],"output":["Non relevant"]},"linearcg":{"definition":"Linear CG solver","example":"","params":[],"output":[]},"lineargmres":{"definition":"Linear GMRES solver","example":"","params":[],"output":[]},"lgamma":{"definition":"Natural logarithm of the absolute value of the \\\\(\\\\Gamma\\\\) function of \\\\(x\\\\).","example":"real lg = lgamma(x);\\n","params":["x (real)"],"output":["lg (real)"]},"log":{"definition":"Natural logarithm.","example":"real l = log(x);\\n","params":["x (real or complex)"],"output":["l (real or complex)"]},"log10":{"definition":"Common logarithm.","example":"real l = log10(x);\\n","params":["x (real)"],"output":["l (real)"]},"lrint":{"definition":"Integer value nearest to \\\\(x\\\\).","example":"int l = lrint(a);\\n","params":["a (real)"],"output":["l (int)"]},"lround":{"definition":"Round a value, and return an integer value.","example":"int l = lround(a);\\n","params":["a (real)"],"output":["l (int)"]},"ltime":{"definition":"Return the current time since the Epcoh.","example":"int t = ltime();\\n","params":["None"],"output":["t (int)"]},"max":{"definition":"Maximum value of two, three or four values.","example":"real m = max(a, b);\\nreal m = max(a, b, c);\\nreal m = max(a, b, c, d);\\n","params":["a (int or real)","b (int or real)","c (int or real) [Optional]","d (int or real) [Optional]"],"output":["b (int or real)"]},"min":{"definition":"Minimum value of two, three or four values.","example":"real m = min(a, b);\\nreal m = min(a, b, c);\\nreal m = min(a, b, c, d);\\n","params":["a (int or real)","b (int or real)","c (int or real) [Optional]","d (int or real) [Optional]"],"output":["b (int or real)"]},"movemesh":{"definition":"Move a mesh.","example":"mesh MovedTh = movemesh(Th, [Dx, Dy]);\\nmesh3 MovedTh = movemesh(Th, [Dx, Dy, Dz], [region=Region], [label=Label], [facemerge=FaceMerge], [ptmerge=PtMerge], [orientation=Orientation]);\\n","params":["Th (mesh of mesh3) Mesh to move","Dx (fespace function) Displacement along \\\\(x\\\\)","Dy (fespace function) Displacement along \\\\(y\\\\)","Dz (fespace function) 3D only","region= (int) [Optional] 3D only","label= (int[int]) [Optional] 3D only","facemerge= (int) [Optional] 3D only","ptmerge= (real) [Optional] 3D only","orientation= (int) [Optional] 3D only"],"output":["MovedTh (mesh or mesh3) Moved mesh"]},"nan":{"definition":"C++ nan function.","example":"real n = NaN([String]);\\n","params":["String (string) Default: \\"\\""],"output":[]},"nlcg":{"definition":"Non-linear conjugate gradient.","example":"","params":[],"output":[]},"on":{"definition":"Dirichlet condition function.","example":"problem (u, v)\\n    ...\\n    + on(Label, u=uD)\\n    ...\\n","params":["Label (int or border in 2D)","uD (fespace function, func or real or int)"],"output":["Non relevant"]},"plot":{"definition":"Plot meshes and results.","example":"plot([Th], [u], [[Ux, Uy, Uz]], [wait=Wait], [ps=PS], [coef=Coef], [fill=Fill], cmm=[Cmm], [value=Value], [aspectratio=AspectRatio], [bb=Bb], [nbiso=NbIso], [nbarrow=NbArrow], [viso=VIso], [varrow=VArrow], [bw=Bw], [grey=Grey], [hsv=Hsv], [boundary=Boundary], [dim=Dim], [prev=Prev], [WindowIndex=WI]);\\n","params":["Th (mesh or mesh3) Mesh to display","u (fespace function) Scalar fespace function to display","[Ux, Uy] / [Ux, Uy, Uz] (fespace function array) Vectorial fespace function to display","[Ux, Uy] ([real[int], real[int]]) Couple a real array to display a curve","wait= (bool) If true, wait before continue","ps= (string) Name of the file to save the plot (.ps or .eps format)","coef= (real) Arrow size","fill= (bool) If true, fill color between isovalue (usable with scalar fespace function only)","cmm= (string) Text comment in the graphic window","value= (bool) If true, show the value scale","aspectratio= (bool) If true, preserve the aspect ratio","bb= ([real[int], real[int]]) Specify a bounding box using two corner points","nbiso= (int) Number of isovalues","nbarrow= (int) Number of colors of arrows values","viso= (real[int]) Specify an array of isovalues","varrow= (real[int]) Specify an array of arrows values color","bw= (bool) If true, the plot is in black and white","grey= (bool) If true, the plot is in grey scale","hsv= (real[int]) Array of \\\\(3\\\\times n\\\\) values defining HSV color model \\\\([h_1, s_1, v_1, ..., h_n, s_n, v_n]\\\\)","boundary= (bool) If true, display the boundary of the domain","dim= (int) Set the dimension of the plot: 2 or 3","prev= (bool) Use the graphic state of the previous state","WindowIndex= (int) Specify window index for multiple windows graphics"],"output":["None"]},"polar":{"definition":"Polar coordinates.","example":"complex p = polar(a, b);\\n","params":["a (real)","b (real)"],"output":["p (complex)"]},"pow":{"definition":"Power function.","example":"real p = pow(a, b);\\n","params":["a (real)","b (real)"],"output":["p (real)"]},"projection":{"definition":"Arithmetic useful function.","example":"real p = projection(a, b, x);\\n","params":["a (real)","b (real)","x (real)"],"output":["p (real)"]},"randinit":{"definition":"Initialize the state vector by using a seed.","example":"randinit(seed);\\n","params":["seed (int)"],"output":["None"]},"randint31":{"definition":"Generate unsigned int (31 bits) random number.","example":"int r = randint31();\\n","params":["None"],"output":["r (int)"]},"randint32":{"definition":"Generate unsigned int (32 bits) random number.","example":"int r = randint32();\\n","params":["None"],"output":["r (int)"]},"randreal1":{"definition":"Generate uniform real in \\\\([0, 1]\\\\) (32 bits).","example":"real r = randreal1();\\n","params":["None"],"output":["r (real)"]},"randreal2":{"definition":"Generate uniform real in \\\\([0, 1)\\\\) (32 bits).","example":"real r = randreal2();\\n","params":["None"],"output":["r (real)"]},"randreal3":{"definition":"Generate uniform real in \\\\((0, 1)\\\\) (32 bits).","example":"real r = randreal3();\\n","params":["None"],"output":["r (real)"]},"randres53":{"definition":"Generate uniform real in \\\\([0, 1)\\\\) (53 bits).","example":"real r = randres53();\\n","params":["None"],"output":["r (real)"]},"readmesh":{"definition":"Read a 2D mesh file at different formats (see Mesh Generation).","example":"mesh Th = readmesh(MeshFileName);\\n","params":["MeshFileName (string)"],"output":["Th (mesh)"]},"readmesh3":{"definition":"Read a 3D mesh file at different formats (see Mesh Generation).","example":"mesh3 Th = readmesh3(MeshFileName);\\n","params":["MeshFileName (string)"],"output":["Th (mesh3)"]},"real":{"definition":"Return the real part of a complex number.","example":"real r = real(c);\\n","params":["c (complex)"],"output":["r (real)"]},"rint":{"definition":"Integer value nearest to \\\\(x\\\\) (real value).","example":"real r = rint(a);\\n","params":["a (real)"],"output":["r (real)"]},"round":{"definition":"Round a value (real value).","example":"real r = round(a);\\n","params":["a (real)"],"output":["r (real)"]},"savemesh":{"definition":"Save a 2D or 3D mesh in different formats (see Mesh Generation 2D and Mesh Generation 3D).","example":"savemesh(Th, MeshFileName);\\n","params":["Th (mesh or mesh3)","MeshFileName (string)"],"output":["None"]},"set":{"definition":"Set a property to a matrix. See matrix.","example":"","params":[],"output":[]},"sign":{"definition":"Sign of a value.","example":"int s = sign(a);\\n","params":["a (real or int)"],"output":["s (int)"]},"signbit":{"definition":"C++ signbit function","example":"int s = signbit(a);\\n","params":[],"output":[]},"sin":{"definition":"\\\\(\\\\sin\\\\) function.","example":"real x = sin(theta);\\n","params":["theta (real or complex)"],"output":["x (real or complex)"]},"sinh":{"definition":"\\\\(\\\\sinh\\\\) function.","example":"real x = sinh(theta);\\n","params":["theta (real)"],"output":["x (real)"]},"sort":{"definition":"Sort two array in parallel","example":"sort(A, B);\\n","params":["A (real[int])","B (int[int])"],"output":["None"]},"splitmesh":{"definition":"Split mesh triangles according to a function.","example":"Th = splitmesh(Th0, f);\\n","params":["Th0 (mesh)","f (func or fespace function)"],"output":["Th (mesh)"]},"sqrt":{"definition":"Square root","example":"real s = sqrt(a);\\n","params":["a (real)"],"output":["s (real)"]},"square":{"definition":"Square of a number.","example":"real S = square(a);\\n","params":["a (real)"],"output":["S (real)"]},"storagetotal":{"definition":"","example":"int total = storagetotal();\\n","params":[],"output":[]},"storageused":{"definition":"","example":"int used = storageused();\\n","params":[],"output":[]},"strtod":{"definition":"C++ strtod function","example":"string text = \\"10.5\\";\\nreal number = strtod(text);\\n","params":["text (string)"],"output":["number (real)"]},"strtol":{"definition":"C++ strtol function","example":"string text = \\"10\\";\\nint number = strtol(text);\\n\\nint base = 16;\\nint number = strtol(text, base);\\n","params":["text (string)","base (int) Base [Optional]"],"output":["number (int)"]},"swap":{"definition":"Swap values.","example":"swap(a, b);\\n","params":["a (real)","b (real)"],"output":["None"]},"system":{"definition":"Execute a system command.","example":"int Res = system(Command);\\n","params":["Command (string) System command"],"output":["Res (int) Value returned by the system command"]},"tan":{"definition":"\\\\(\\\\tan\\\\) function.","example":"real x = tan(theta);\\n","params":["theta (real)"],"output":["x (real)"]},"tanh":{"definition":"\\\\(\\\\tanh\\\\) function.","example":"real x = tanh(theta);\\n","params":["theta (real)"],"output":["x (real)"]},"tgamma":{"definition":"Calculate the \\\\(\\\\Gamma\\\\) function of \\\\(x\\\\).","example":"real tg = tgamma(x);\\n","params":["x (real)"],"output":["tg (real)"]},"time":{"definition":"Return the current time (C++ function).","example":"real t = time();\\n","params":["None"],"output":["t (real)"]},"trace":{"definition":"Matrix trace","example":"real tr = trace([[1, 2], [3, 4]]);\\n","params":["Matrix"],"output":["Trace of the matrix (real)"]},"trunc":{"definition":"Split triangle of a mesh.","example":"mesh Th = trunc(Th0, R, [split=Split], [label=Label]);\\n","params":["Th0 (mesh)","R (bool or int) Split triangles where R is true or different from 0","split= (int) [Optional]","label= (int) [Optional]"],"output":["Th (mesh)"]},"y0":{"definition":"Bessel function of second kind, order 0.","example":"real B = y0(x);\\n","params":["x (real)"],"output":["b (real)"]},"y1":{"definition":"Bessel function of second kind, order 1.","example":"real B = y1(x);\\n","params":["x (real)"],"output":["b (real)"]},"yn":{"definition":"Bessel function of second kind, order n.","example":"real B = yn(n, x);\\n","params":["n (int)","x (real)"],"output":["b (real)"]}},"d":{"int":{"definition":"Integer value (equivalent to long in C++).","example":"int i = 0;\\n"},"bool":{"definition":"Boolean value.","example":"bool b = true;\\n"},"real":{"definition":"Real value (equivalent to double in C++).","example":"real r = 0.;\\n"},"complex":{"definition":"Complex value (equivalent to two double or complex<double> in C++).","example":"complex c = 0. + 1i;\\n"},"string":{"definition":"String value.","example":"string s = \\"this is a string\\";\\n"},"mesh-design":{"definition":"Border type.","example":"border b(t=0., 1.){x=cos(2.*pi*t); y=sin(2.*pi*t);}\\n"},"border":{"definition":"Border type.","example":"border b(t=0., 1.){x=cos(2.*pi*t); y=sin(2.*pi*t);}\\n"},"mesh":{"definition":"2D Mesh type (see Mesh Generation).","example":"mesh Th;\\n"},"mesh3":{"definition":"3D mesh type (see Mesh Generation).","example":"mesh3 Th;\\n"},"finite-element-space-design":{"definition":"Finite element space type (see Finite Element).","example":"fespace Uh(Th, P1);\\nfespace UPh(Th, [P2, P2, P1]);\\n"},"fespace":{"definition":"Finite element space type (see Finite Element).","example":"fespace Uh(Th, P1);\\nfespace UPh(Th, [P2, P2, P1]);\\n"},"macro-design":{"definition":"Macro type.","example":"macro vU() [Ux, Uy] //\\nmacro grad(u) [dx(u), dy(u)] //\\n"},"macro":{"definition":"Macro type.","example":"macro vU() [Ux, Uy] //\\nmacro grad(u) [dx(u), dy(u)] //\\n"},"newmacro-endmacro":{"definition":"Warning","example":"NewMacro grad(u) [dx(u), dy(u)] EndMacro\\n"},"ifmacro":{"definition":"Check if a macro exists and check its value.","example":"IFMACRO(AA) //check if macro AA exists\\n...\\nENDIFMACRO\\n\\nIFMACRO(AA, tt) //check if amcro exists and is equall to tt\\n...\\nENDIFMACRO\\n"},"endifmacro":{"definition":"","example":""},"functions-design":{"definition":"Function type.","example":"func f = x^2 + y^2;\\n"},"func":{"definition":"Function type.","example":"func f = x^2 + y^2;\\n"},"elementary-functions":{"definition":"Class of basic functions (polynomials, exponential, logarithmic, trigonometric, circular) and the functions obtained from those by the four arithmetic operations","example":""},"random-functions":{"definition":"FreeFEM includes the Mersenne Twister random number generator.\\nIt is a very fast and accurate random number generator of period \\\\(2^{219937}-1\\\\).","example":""},"fe-functions":{"definition":"Finite element functions are also constructed like elementary functions by an arithmetic formula involving elementary functions.","example":"func f = x^2*(1+y)^3 + y^2;\\nmesh Th = square(20, 20, [-2+4*x, -2+4*y]); // ]-2, 2[^2\\nfespace Vh(Th, P1);\\nVh fh=f; //fh is the projection of f to Vh (real value)\\nfunc zf = (x^2*(1+y)^3 + y^2)*exp(x + 1i*y);\\nVh<complex> zh = zf; //zh is the projection of zf to complex value Vh space\\n"},"problem-design":{"definition":"Problem type.","example":"problem Laplacian (u, uh) = ...\\n"},"problem":{"definition":"Problem type.","example":"problem Laplacian (u, uh) = ...\\n"},"solve":{"definition":"Solve type.","example":""},"varf":{"definition":"Variational form type.","example":"varf vLaplacian (u, uh) = ...\\n"},"array":{"definition":"An array stores multiple objects, and there are 2 kinds of arrays:","example":"int n = 5;\\nreal[int] Ai(n);\\nfor (int i = 0; i < n; i++)\\n    Ai[i] = i;\\ncout << Ai << endl;\\n"},"array-index":{"definition":"Array index can be int or string:","example":"real[int] Ai = [1, 1, 0, 0];\\nreal[string] As = [1, 1, 0, 0];\\n"},"array-size":{"definition":"The size of an array is obtained using the keyword n:","example":"int ArraySize = Ai.n;\\n"},"array-sort":{"definition":"To sort an array:","example":"Ai.sort;\\n"},"double-array":{"definition":"A double array (matrix) can be defined using two indexes:","example":"real[int, int] Aii = [[1, 1], [0, 0]];\\n"},"array-of-fe-functions":{"definition":"It is also possible to make an array of FE functions, with the same syntax, and we can treat them as vector valued function if we need them.","example":"1int n = 100; //size of the array.\\n 2Vh[int] wh(n); //real scalar case\\n 3Wh[int] [uh,vh](n); //real vectorial case\\n 4Vh<complex>[int] cwh(n); //complex scalar case\\n 5Wh<complex>[int] [cuh, cvh](n); //complex vectorial case\\n 6[cuh[2], cvh[2]] = [x, y]; //set interpolation of index 2\\n 7\\n 8// Array of Array\\n 9real [int][int] V(10);\\nmatrix[int] B(10);\\nreal [int, int][int] A(10);\\n"},"map-arrays":{"definition":"It is just a map of the standard template library so no operations on vector are allowed, except the selection of an item.","example":"real[string] map; //a dynamic array\\n\\nmap[\\"1\\"] = 2.0;\\nmap[2] = 3.0; //2 is automatically cast to the string \\"2\\"\\n\\ncout << \\"map[\\\\\\"1\\\\\\"] = \\" << map[\\"1\\"] << endl;\\ncout << \\"map[2] = \\" << map[2] << endl;\\n"},"matrix":{"definition":"Defines a sparse matrix.","example":"matrix A = [[1, 2, 3],\\n            [4, 5, 6],\\n            [7, 8, 9]];\\n"},"matrix-size":{"definition":"The size of a matrix is obtain using:","example":"int NRows = A.n;\\nint NColumns = A.m;\\n"},"matrix-resize":{"definition":"To resize a matrix, use:","example":"A.resize(n, m);\\n"},"matrix-diagonal":{"definition":"The diagonal of the matrix is obtained using:","example":"real[int] Aii = A.diag;\\n"},"matrix-renumbering":{"definition":"","example":"int[int] I(15), J(15);\\nmatrix B = A;\\nB = A(I, J);\\nB = A(I^-1, J^-1);\\n"},"complex-matrix":{"definition":"Use .im and .re to get the imaginary and real part of a complex matrix, respectively:","example":"matrix<complex> C = ...\\nmatrix R = C.re;\\nmatrix I = C.im;\\n"},"dot-product-outer-product":{"definition":"The dot product of two matrices is realized using:","example":"real d = A\' * B;\\n"},"matrix-inversion":{"definition":"See Matrix inversion example.","example":""}}}'),f=n(41664),d=n.n(f),g=n(70302),x=n(74048),h=n(35304),b=n.n(h),y=n(22679),v=n.n(y),k=e=>{var t,n;let{x:o,y:s,token:l}=e,p=null===(t=document.querySelector("body"))||void 0===t?void 0:t.offsetWidth,c=null===(n=document.querySelector("body"))||void 0===n?void 0:n.offsetHeight,u=(0,i.useMemo)(()=>{let e={left:o-256,top:"unset",bottom:"unset",maxWidth:"unset",maxHeight:"unset"};return p&&(e.maxWidth=p-o-50),c&&(s<c/2?(e.maxHeight=c-s-50,e.top=s+16):(e.maxHeight=s-128-50,e.bottom=c-s)),e},[p,c,o,s]);return l?(0,a.jsx)(g.Z,{title:(0,a.jsxs)(a.Fragment,{children:["Function: ",l.name]}),extra:(0,a.jsx)(d(),{href:"https://doc.freefem.org/references/functions.html#"+(l.docReference?l.docReference:l.name),target:"_blank",children:"Go to FreeFEM documentation"}),className:v().tooltip,style:u,children:(0,a.jsxs)(x.default,{direction:"vertical",children:[(0,a.jsxs)("div",{children:[(0,a.jsx)(r.Z.Text,{className:b().textWhite,strong:!0,children:"Definition:"})," ",(0,a.jsxs)(r.Z.Text,{className:b().textWhite,children:[l.definition," "]})]}),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.Z.Text,{className:b().textWhite,strong:!0,children:"Example:"}),l.example.split("\n").map(e=>{if(e)return(0,a.jsx)(r.Z.Text,{className:b().textWhite,code:!0,children:e},e)})]}),l.params&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.Z.Text,{className:b().textWhite,strong:!0,children:"Params:"}),l.params.map(e=>(0,a.jsxs)(r.Z.Text,{className:b().textWhite,code:!0,children:["- ",e,(0,a.jsx)("br",{})]},e))]}),l.output&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.Z.Text,{className:b().textWhite,strong:!0,children:"Output:"}),l.output.map(e=>(0,a.jsxs)(r.Z.Text,{className:b().textWhite,code:!0,children:["- ",e,(0,a.jsx)("br",{})]},e))]})]})}):null},$=()=>{let e=(0,i.useRef)(),t=(0,i.useRef)(),n=(0,i.useRef)(),f=(0,i.useRef)(),[d,g]=(0,i.useState)({x:0,y:0}),[x,h]=(0,i.useState)(),{template:b,templateCursor:y,templateHighlight:$,dispatch:w}=(0,i.useContext)(p.rU),T=(0,i.useCallback)(e=>{w((0,c.zX)(null!=e?e:""))},[w]),_=(0,i.useCallback)(t=>{if(!e.current)return;let a=e.current,i=a.editor.renderer.pixelToScreenCoordinates(t.clientX,t.clientY),{left:r}=a.editor.container.getBoundingClientRect(),o=a.editor.session.getWordRange(i.row,i.column).start,s=a.editor.renderer.textToScreenCoordinates(o.row,o.column),l=a.editor.session.getTokenAt(i.row,i.column);f.current&&n.current===(null==l?void 0:l.value)||(f.current&&(clearTimeout(f.current),h(void 0)),n.current=null==l?void 0:l.value,f.current=setTimeout(()=>{if(!l)return;let e="support.function"===l.type?m.Z[l.value]:m.d[l.value];e&&(g({x:s.pageX+r,y:s.pageY}),h({...e,name:l.value}))},500))},[]),R=(0,i.useCallback)(e=>{t.current||w((0,c.GW)({row:e.cursor.row,column:e.cursor.column}))},[w]),A=(0,i.useCallback)(t=>{let{begin:n,end:a}=t;if(!e.current)return;let i=e.current.editor,r=[];for(let e=n;e<=a;e++){let t=i.session.addMarker(new s.Range(e,0,e,1/0),"ace_pasted_line","fullLine");r.push({id:t})}setTimeout(()=>{r.forEach(e=>i.session.removeMarker(e.id))},2500)},[]),C=(0,i.useCallback)(t=>{if(!e.current)return;let n=e.current.editor,{row:a}=n.getCursorPosition(),i=t.clipboardData,r=i.getData("Text"),o=r.split("\n").length;A({begin:a-(o-1),end:a})},[A]);return(0,i.useEffect)(()=>{if(!e.current)return;let t=e.current;t.editor.container.classList.add("pasted_line_container"),t.editor.on("mousemove",_)},[_]),(0,i.useEffect)(()=>{(0,l.setCompleters)([{getCompletions:(e,t,n,a,i)=>{i(null,u)}}])},[]),(0,i.useEffect)(()=>{if(!e.current||!y)return;t.current=!0;let n=e.current.editor;n.moveCursorTo(y.row,y.column),setTimeout(()=>t.current=!1,500)},[y]),(0,i.useEffect)(()=>{$&&A($)},[$,A]),(0,i.useEffect)(()=>{var t;let n=null===(t=e.current)||void 0===t?void 0:t.editor;return n&&n.container.addEventListener("paste",C),()=>{n&&n.container.removeEventListener("paste",C)}},[C]),(0,a.jsxs)("div",{className:v().codeBlock,children:[(0,a.jsx)(r.Z.Title,{level:3,children:"FreeFEM template"}),(0,a.jsx)(o.ZP,{ref:e,className:"ace_editor",width:"100%",height:"calc(100% - 32px)",fontSize:16,theme:"one_dark",mode:"freefem-ejs",name:"freefem_editor",value:null==b?void 0:b.replace(/\t/g,"    "),editorProps:{$blockScrolling:!0,$showPrintMargin:!1},onCursorChange:R,onChange:T,showPrintMargin:!1,style:v()}),(0,a.jsx)(k,{x:d.x,y:d.y,token:x})]})}}}]);