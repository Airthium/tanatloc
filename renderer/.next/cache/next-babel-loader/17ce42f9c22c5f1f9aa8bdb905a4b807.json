{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport default {\n  login: function () {\n    var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return new Promise(function (resolve) {\n                setTimeout(resolve, 2000);\n              });\n\n            case 2:\n              return _context.abrupt(\"return\", {\n                authorized: true,\n                id: 'id'\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function login() {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }()\n};","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/src/lib/user/index.js"],"names":["login","Promise","resolve","setTimeout","authorized","id"],"mappings":";;AAAA,eAAe;AACbA,EAAAA,KAAK;AAAA,0EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACC,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC7BC,gBAAAA,UAAU,CAACD,OAAD,EAAU,IAAV,CAAV;AACD,eAFK,CADD;;AAAA;AAAA,+CAIE;AACLE,gBAAAA,UAAU,EAAE,IADP;AAELC,gBAAAA,EAAE,EAAE;AAFC,eAJF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADQ,CAAf","sourcesContent":["export default {\n  login: async () => {\n    await new Promise((resolve) => {\n      setTimeout(resolve, 2000)\n    })\n    return {\n      authorized: true,\n      id: 'id'\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}