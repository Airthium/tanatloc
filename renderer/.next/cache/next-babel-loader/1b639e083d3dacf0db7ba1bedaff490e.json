{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport isElectron from 'is-electron';\nimport user from '../../../src/lib/user';\nimport call from '../call';\nexport default /*#__PURE__*/(function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var username, password;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            username = _ref.username, password = _ref.password;\n\n            if (!isElectron()) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 4;\n            return user.login(username, password);\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n            _context.next = 9;\n            return call('api/user/login', {\n              method: 'POST',\n              body: JSON.stringify({\n                username: username,\n                password: password\n              })\n            });\n\n          case 9:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n})();","map":null,"metadata":{},"sourceType":"module"}