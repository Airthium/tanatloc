{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/pages/login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport login from '../src/lib/api/user/login';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login as reduxLogin } from '../store/auth/action';\nconst errors = {\n  BAD_CREDENTIALS: 'Bad credentials. Please check your username and password'\n}; // Login page\n\nexport default (() => {\n  // State\n  const {\n    0: checking,\n    1: setChecking\n  } = useState(false); // Router\n\n  const router = useRouter(); // Redux\n\n  const dispatch = useDispatch(); // Check user\n\n  const {\n    user\n  } = useSelector(store => store.auth);\n\n  if (false && user.id) {\n    // Go to dashboard\n    router.push('/dashboard');\n  } // On login\n\n\n  const onLogin = async values => {\n    // State\n    setChecking(true); // Check\n\n    const check = await login(values); // Authorized or not\n\n    if (check.authorized) {\n      dispatch(reduxLogin({\n        username: values.username,\n        id: check.id\n      }));\n      router.push('/dashboard');\n    } else {\n      _message.error(errors.BAD_CREDENTIALS);\n\n      setChecking(false);\n    }\n  }; // Render\n\n\n  return __jsx(_Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(_Card, {\n    className: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"banner.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), __jsx(_Form, {\n    initialValues: {\n      remember: true\n    },\n    onFinish: onLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(_Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Please fill your Username!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(_Input, {\n    placeholder: \"username\",\n    autoComplete: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })), __jsx(_Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please fill your Password!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, __jsx(_Input.Password, {\n    placeholder: \"password\",\n    autoComplete: \"current-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })), __jsx(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(_Form.Item, {\n    name: \"remember\",\n    valuePropName: \"checked\",\n    noStyle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, __jsx(_Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"remember me\")), __jsx(\"a\", {\n    className: \"Login-forgot\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"forgot password\")), __jsx(_Form.Item, {\n    className: \"Login-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(_Button, {\n    type: \"primary\",\n    loading: checking,\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"Log in\"), __jsx(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"or register now!\"))))));\n});","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/pages/login.js"],"names":["useRouter","useState","login","useDispatch","useSelector","reduxLogin","errors","BAD_CREDENTIALS","checking","setChecking","router","dispatch","user","store","auth","id","push","onLogin","values","check","authorized","username","error","remember","required","message"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport { useState } from 'react'\nimport {\n  message,\n  Button,\n  Card,\n  Checkbox,\n  Form,\n  Input,\n  Layout,\n  Space\n} from 'antd'\n\nimport login from '../src/lib/api/user/login'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login as reduxLogin } from '../store/auth/action'\n\nconst errors = {\n  BAD_CREDENTIALS: 'Bad credentials. Please check your username and password'\n}\n\n// Login page\nexport default () => {\n  // State\n  const [checking, setChecking] = useState(false)\n\n  // Router\n  const router = useRouter()\n\n  // Redux\n  const dispatch = useDispatch()\n\n  // Check user\n  const { user } = useSelector((store) => store.auth)\n  if (typeof window !== 'undefined' && user.id) {\n    // Go to dashboard\n    router.push('/dashboard')\n  }\n\n  // On login\n  const onLogin = async (values) => {\n    // State\n    setChecking(true)\n\n    // Check\n    const check = await login(values)\n\n    // Authorized or not\n    if (check.authorized) {\n      dispatch(\n        reduxLogin({\n          username: values.username,\n          id: check.id\n        })\n      )\n      router.push('/dashboard')\n    } else {\n      message.error(errors.BAD_CREDENTIALS)\n      setChecking(false)\n    }\n  }\n\n  // Render\n  return (\n    <Layout>\n      <Card className=\"Login\">\n        <Space direction=\"vertical\" size=\"large\">\n          <img src=\"banner.png\" />\n          <Form initialValues={{ remember: true }} onFinish={onLogin}>\n            <Form.Item\n              name=\"username\"\n              rules={[\n                { required: true, message: 'Please fill your Username!' }\n              ]}\n            >\n              <Input placeholder=\"username\" autoComplete=\"username\" />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { required: true, message: 'Please fill your Password!' }\n              ]}\n            >\n              <Input.Password\n                placeholder=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Form.Item>\n            <Form.Item>\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                <Checkbox>remember me</Checkbox>\n              </Form.Item>\n\n              <a className=\"Login-forgot\" href=\"\">\n                forgot password\n              </a>\n            </Form.Item>\n            <Form.Item className=\"Login-submit\">\n              <Button type=\"primary\" loading={checking} htmlType=\"submit\">\n                Log in\n              </Button>\n              <a href=\"\">or register now!</a>\n            </Form.Item>\n          </Form>\n        </Space>\n      </Card>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}