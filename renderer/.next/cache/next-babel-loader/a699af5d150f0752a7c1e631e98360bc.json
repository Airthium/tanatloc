{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/pages/dashboard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport { AppstoreTwoTone, LogoutOutlined, QuestionCircleTwoTone, SettingTwoTone } from '@ant-design/icons';\nimport ProjectList from '../components/project/list';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout as reduxLogout } from '../store/auth/action';\nconst menuItems = {\n  projects: {\n    label: 'My Projects',\n    key: '1'\n  },\n  account: {\n    label: 'Account Settings',\n    key: '2'\n  },\n  help: {\n    label: 'I Need Help',\n    key: '3'\n  },\n  logout: {\n    label: 'Logout',\n    key: '4'\n  }\n}; // TODO\n\nconst Account = () => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  }, \"Account\");\n}; // TODO\n\n\nconst Help = () => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, \"Help\");\n};\n\nexport default (() => {\n  // State\n  const {\n    0: collapsed,\n    1: setCollapsed\n  } = useState(false);\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(menuItems.projects.key); // Router\n\n  const router = useRouter(); // Redux\n\n  const dispatch = useDispatch(); // Props\n\n  const {\n    user\n  } = useSelector(store => store.auth);\n  console.log(user);\n\n  if (false && !user.id) {\n    // Go to login\n    router.push('/login');\n  } // Collpase\n\n\n  const onCollapse = collapsed => {\n    setCollapsed(collapsed);\n  };\n\n  const onSelect = ({\n    key\n  }) => {\n    if (key === '0') return;\n    if (key === menuItems.logout.key) logout();else setCurrent(key);\n  };\n\n  const logout = () => {\n    dispatch(reduxLogout());\n    router.push('/');\n  };\n\n  return __jsx(_Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(_Layout.Sider, {\n    theme: \"light\",\n    collapsible: true,\n    collapsed: collapsed,\n    onCollapse: onCollapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"logo.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), __jsx(_Menu, {\n    theme: \"light\",\n    defaultSelectedKeys: ['projects'],\n    onSelect: onSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(_Menu.Item, {\n    key: '0',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Hello \", user.username), __jsx(_Menu.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), __jsx(_Menu.Item, {\n    key: menuItems.projects.key,\n    icon: __jsx(AppstoreTwoTone, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 57\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, menuItems.projects.label), __jsx(_Menu.Item, {\n    key: menuItems.account.key,\n    icon: __jsx(SettingTwoTone, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, menuItems.account.label), __jsx(_Menu.Item, {\n    key: menuItems.help.key,\n    icon: __jsx(QuestionCircleTwoTone, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 53\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, menuItems.help.label), __jsx(_Menu.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), __jsx(_Menu.Item, {\n    key: menuItems.logout.key,\n    danger: true,\n    icon: __jsx(LogoutOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, menuItems.logout.label))), __jsx(_Layout, {\n    className: \"bg-yellow no-scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, current === menuItems.projects.key && __jsx(ProjectList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 48\n    }\n  }), current === menuItems.account.key && __jsx(Account, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 47\n    }\n  }), current === menuItems.help.key && __jsx(Help, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 44\n    }\n  })));\n});","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/pages/dashboard.js"],"names":["useRouter","useState","AppstoreTwoTone","LogoutOutlined","QuestionCircleTwoTone","SettingTwoTone","ProjectList","useDispatch","useSelector","logout","reduxLogout","menuItems","projects","label","key","account","help","Account","Help","collapsed","setCollapsed","current","setCurrent","router","dispatch","user","store","auth","console","log","id","push","onCollapse","onSelect","username"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport { useState } from 'react'\nimport { Layout, Menu } from 'antd'\nimport {\n  AppstoreTwoTone,\n  LogoutOutlined,\n  QuestionCircleTwoTone,\n  SettingTwoTone\n} from '@ant-design/icons'\nimport ProjectList from '../components/project/list'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout as reduxLogout } from '../store/auth/action'\n\nconst menuItems = {\n  projects: {\n    label: 'My Projects',\n    key: '1'\n  },\n  account: {\n    label: 'Account Settings',\n    key: '2'\n  },\n  help: {\n    label: 'I Need Help',\n    key: '3'\n  },\n  logout: {\n    label: 'Logout',\n    key: '4'\n  }\n}\n\n// TODO\nconst Account = () => {\n  return <div>Account</div>\n}\n\n// TODO\nconst Help = () => {\n  return <div>Help</div>\n}\n\nexport default () => {\n  // State\n  const [collapsed, setCollapsed] = useState(false)\n  const [current, setCurrent] = useState(menuItems.projects.key)\n\n  // Router\n  const router = useRouter()\n\n  // Redux\n  const dispatch = useDispatch()\n\n  // Props\n  const { user } = useSelector((store) => store.auth)\n  console.log(user)\n  if (typeof window !== 'undefined' && !user.id) {\n    // Go to login\n    router.push('/login')\n  }\n\n  // Collpase\n  const onCollapse = (collapsed) => {\n    setCollapsed(collapsed)\n  }\n\n  const onSelect = ({ key }) => {\n    if (key === '0') return\n\n    if (key === menuItems.logout.key) logout()\n    else setCurrent(key)\n  }\n\n  const logout = () => {\n    dispatch(reduxLogout())\n    router.push('/')\n  }\n\n  return (\n    <Layout>\n      <Layout.Sider\n        theme=\"light\"\n        collapsible\n        collapsed={collapsed}\n        onCollapse={onCollapse}\n      >\n        <div className=\"logo\">\n          <img src=\"logo.svg\" />\n        </div>\n\n        <Menu\n          theme=\"light\"\n          defaultSelectedKeys={['projects']}\n          onSelect={onSelect}\n        >\n          <Menu.Item key={'0'}>Hello {user.username}</Menu.Item>\n          <Menu.Divider />\n          <Menu.Item key={menuItems.projects.key} icon={<AppstoreTwoTone />}>\n            {menuItems.projects.label}\n          </Menu.Item>\n          <Menu.Item key={menuItems.account.key} icon={<SettingTwoTone />}>\n            {menuItems.account.label}\n          </Menu.Item>\n          <Menu.Item key={menuItems.help.key} icon={<QuestionCircleTwoTone />}>\n            {menuItems.help.label}\n          </Menu.Item>\n          <Menu.Divider />\n          <Menu.Item\n            key={menuItems.logout.key}\n            danger={true}\n            icon={<LogoutOutlined />}\n          >\n            {menuItems.logout.label}\n          </Menu.Item>\n        </Menu>\n      </Layout.Sider>\n\n      <Layout className=\"bg-yellow no-scroll\">\n        {current === menuItems.projects.key && <ProjectList />}\n        {current === menuItems.account.key && <Account />}\n        {current === menuItems.help.key && <Help />}\n      </Layout>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}