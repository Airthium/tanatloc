{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _Row from \"antd/lib/row\";\nimport _Input from \"antd/lib/input\";\nimport _Col from \"antd/lib/col\";\nimport _Space from \"antd/lib/space\";\nimport _Upload from \"antd/lib/upload\";\nimport _Button from \"antd/lib/button\";\nimport _Avatar from \"antd/lib/avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _notification from \"antd/lib/notification\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/account/information/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { UploadOutlined, UserOutlined } from '@ant-design/icons';\nimport { Error } from '../../assets/notification';\nimport UserAPI from '../../../../src/api/user';\nimport AvatarAPI from '../../../../src/api/avatar';\n/**\n * Errors account/information\n * @memberof module:renderer/components/account\n */\n\nconst errors = {\n  updateError: 'Unable to update informations',\n  badFormat: 'Supported format: jpg, png',\n  badSize: 'Image must be smaller than 5MB'\n};\n/**\n * Information\n * @memberof module:renderer/components/account\n */\n\nconst Information = () => {\n  // State\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: uploading,\n    1: setUploading\n  } = useState(false); // Form\n\n  const [form] = _Form.useForm(); // Data\n\n\n  const [user, {\n    mutateUser\n  }] = UserAPI.useUser(); // Layout\n\n  const avatarLayout = {\n    wrapperCol: {\n      offset: 0,\n      span: 4\n    }\n  };\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 8\n    }\n  };\n  const buttonLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 8\n    }\n  };\n  /**\n   * On finish\n   * @param {Object} data Data\n   */\n\n  const onFinish = async data => {\n    setLoading(true);\n\n    try {\n      const toUpdate = []; // TODO disable for now\n      // if (data.username !== user.email)\n      //   toUpdate.push({ key: 'email', value: data.username })\n\n      if (data.firstname !== user.firstname) toUpdate.push({\n        key: 'firstname',\n        value: data.firstname\n      });\n      if (data.lastname !== user.lastname) toUpdate.push({\n        key: 'lastname',\n        value: data.lastname\n      });\n      if (data.email !== user.email) toUpdate.push({\n        key: 'email',\n        value: data.email\n      }); // Update\n\n      await UserAPI.update(toUpdate); // Mutate user\n\n      mutateUser({\n        user: _objectSpread(_objectSpread({}, user), {}, {\n          firstname: data.firstname,\n          lastname: data.lastname,\n          email: data.email\n        })\n      });\n    } catch (err) {\n      Error(errors.updateError, err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  /**\n   * On cancel\n   */\n\n\n  const onCancel = () => {\n    form.resetFields();\n  };\n  /**\n   * Before upload\n   * @param {File} file File\n   */\n\n\n  const beforeUpload = file => {\n    const goodFormat = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!goodFormat) _notification.error({\n      message: errors.badFormat\n    });\n    const goodSize = file.size / 1024 / 1024 < 5;\n    if (!goodSize) _notification.error({\n      message: errors.badSize\n    });\n    return goodFormat && goodSize;\n  };\n  /**\n   * On avatar change\n   * @param {Object} info Info\n   */\n\n\n  const onChange = async info => {\n    if (info.file.status === 'uploading') {\n      setUploading(true);\n    }\n\n    if (info.file.status === 'done') {\n      try {\n        // Read image\n        const img = await getBase64(info.file.originFileObj); // Add avatar\n\n        await AvatarAPI.add({\n          name: info.file.name,\n          uid: info.file.uid,\n          data: img\n        }); // Mutate user\n\n        mutateUser({\n          user: _objectSpread(_objectSpread({}, user), {}, {\n            avatar: img\n          })\n        });\n      } catch (err) {\n        Error(err.message, err);\n      } finally {\n        setUploading(false);\n      }\n    }\n  };\n  /**\n   * Read base64 image\n   * @param {File} file File\n   */\n\n\n  const getBase64 = async file => {\n    const reader = new FileReader();\n    const img = await new Promise(resolve => {\n      reader.addEventListener('load', () => {\n        resolve(reader.result);\n      });\n      reader.readAsDataURL(file);\n    });\n    return img;\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Card, {\n    title: \"Contact Details\",\n    className: \"Vertical-gutter\",\n    children: /*#__PURE__*/_jsxDEV(_Form, _objectSpread(_objectSpread({}, layout), {}, {\n      form: form,\n      initialValues: {\n        firstname: user.firstname,\n        lastname: user.lastname,\n        email: user.email\n      },\n      onFinish: onFinish,\n      name: \"personalForm\",\n      children: /*#__PURE__*/_jsxDEV(_Row, {\n        children: [/*#__PURE__*/_jsxDEV(_Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsxDEV(_Form.Item, _objectSpread(_objectSpread({}, avatarLayout), {}, {\n            children: /*#__PURE__*/_jsxDEV(_Space, {\n              direction: \"vertical\",\n              className: \"Account-avatar\",\n              children: [/*#__PURE__*/_jsxDEV(_Avatar, {\n                size: 128,\n                src: user.avatar && Buffer.from(user.avatar).toString(),\n                icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(_Upload, {\n                accept: '.jpg,.png',\n                showUploadList: false,\n                beforeUpload: beforeUpload,\n                onChange: onChange,\n                children: /*#__PURE__*/_jsxDEV(_Button, {\n                  size: \"small\",\n                  icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 27\n                  }, this),\n                  loading: uploading,\n                  children: \"Upload new\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Col, {\n          span: 20,\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            label: \"First name\",\n            name: \"firstname\",\n            children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            label: \"Last name\",\n            name: \"lastname\",\n            children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, _objectSpread(_objectSpread({}, buttonLayout), {}, {\n            style: {\n              marginBottom: 'unset'\n            },\n            children: /*#__PURE__*/_jsxDEV(_Space, {\n              children: [/*#__PURE__*/_jsxDEV(_Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                loading: loading,\n                children: \"Apply changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(_Button, {\n                type: \"text\",\n                onClick: onCancel,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Information;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/account/information/index.js"],"names":["useState","UploadOutlined","UserOutlined","Error","UserAPI","AvatarAPI","errors","updateError","badFormat","badSize","Information","loading","setLoading","uploading","setUploading","form","useForm","user","mutateUser","useUser","avatarLayout","wrapperCol","offset","span","layout","labelCol","buttonLayout","onFinish","data","toUpdate","firstname","push","key","value","lastname","email","update","err","onCancel","resetFields","beforeUpload","file","goodFormat","type","error","message","goodSize","size","onChange","info","status","img","getBase64","originFileObj","add","name","uid","avatar","reader","FileReader","Promise","resolve","addEventListener","result","readAsDataURL","Buffer","from","toString","marginBottom"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport {\n  notification,\n  Avatar,\n  Button,\n  Form,\n  Input,\n  Space,\n  Upload,\n  Card,\n  Row,\n  Col\n} from 'antd'\nimport { UploadOutlined, UserOutlined } from '@ant-design/icons'\n\nimport { Error } from '../../assets/notification'\n\nimport UserAPI from '../../../../src/api/user'\nimport AvatarAPI from '../../../../src/api/avatar'\n\n/**\n * Errors account/information\n * @memberof module:renderer/components/account\n */\nconst errors = {\n  updateError: 'Unable to update informations',\n  badFormat: 'Supported format: jpg, png',\n  badSize: 'Image must be smaller than 5MB'\n}\n\n/**\n * Information\n * @memberof module:renderer/components/account\n */\nconst Information = () => {\n  // State\n  const [loading, setLoading] = useState(false)\n  const [uploading, setUploading] = useState(false)\n\n  // Form\n  const [form] = Form.useForm()\n\n  // Data\n  const [user, { mutateUser }] = UserAPI.useUser()\n\n  // Layout\n  const avatarLayout = {\n    wrapperCol: { offset: 0, span: 4 }\n  }\n  const layout = {\n    labelCol: { span: 5 },\n    wrapperCol: { span: 8 }\n  }\n  const buttonLayout = {\n    wrapperCol: { offset: 5, span: 8 }\n  }\n\n  /**\n   * On finish\n   * @param {Object} data Data\n   */\n  const onFinish = async (data) => {\n    setLoading(true)\n\n    try {\n      const toUpdate = []\n      // TODO disable for now\n      // if (data.username !== user.email)\n      //   toUpdate.push({ key: 'email', value: data.username })\n      if (data.firstname !== user.firstname)\n        toUpdate.push({ key: 'firstname', value: data.firstname })\n      if (data.lastname !== user.lastname)\n        toUpdate.push({ key: 'lastname', value: data.lastname })\n      if (data.email !== user.email)\n        toUpdate.push({ key: 'email', value: data.email })\n\n      // Update\n      await UserAPI.update(toUpdate)\n\n      // Mutate user\n      mutateUser({\n        user: {\n          ...user,\n          firstname: data.firstname,\n          lastname: data.lastname,\n          email: data.email\n        }\n      })\n    } catch (err) {\n      Error(errors.updateError, err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  /**\n   * On cancel\n   */\n  const onCancel = () => {\n    form.resetFields()\n  }\n\n  /**\n   * Before upload\n   * @param {File} file File\n   */\n  const beforeUpload = (file) => {\n    const goodFormat = file.type === 'image/jpeg' || file.type === 'image/png'\n    if (!goodFormat) notification.error({ message: errors.badFormat })\n\n    const goodSize = file.size / 1024 / 1024 < 5\n    if (!goodSize) notification.error({ message: errors.badSize })\n\n    return goodFormat && goodSize\n  }\n\n  /**\n   * On avatar change\n   * @param {Object} info Info\n   */\n  const onChange = async (info) => {\n    if (info.file.status === 'uploading') {\n      setUploading(true)\n    }\n\n    if (info.file.status === 'done') {\n      try {\n        // Read image\n        const img = await getBase64(info.file.originFileObj)\n\n        // Add avatar\n        await AvatarAPI.add({\n          name: info.file.name,\n          uid: info.file.uid,\n          data: img\n        })\n\n        // Mutate user\n        mutateUser({\n          user: {\n            ...user,\n            avatar: img\n          }\n        })\n      } catch (err) {\n        Error(err.message, err)\n      } finally {\n        setUploading(false)\n      }\n    }\n  }\n\n  /**\n   * Read base64 image\n   * @param {File} file File\n   */\n  const getBase64 = async (file) => {\n    const reader = new FileReader()\n    const img = await new Promise((resolve) => {\n      reader.addEventListener('load', () => {\n        resolve(reader.result)\n      })\n      reader.readAsDataURL(file)\n    })\n    return img\n  }\n\n  /**\n   * Render\n   */\n  return (\n    <Card title=\"Contact Details\" className=\"Vertical-gutter\">\n      <Form\n        {...layout}\n        form={form}\n        initialValues={{\n          firstname: user.firstname,\n          lastname: user.lastname,\n          email: user.email\n        }}\n        onFinish={onFinish}\n        name=\"personalForm\"\n      >\n        <Row>\n          <Col span={4}>\n            <Form.Item {...avatarLayout}>\n              <Space direction=\"vertical\" className=\"Account-avatar\">\n                <Avatar\n                  size={128}\n                  src={user.avatar && Buffer.from(user.avatar).toString()}\n                  icon={<UserOutlined />}\n                />\n                <Upload\n                  accept={'.jpg,.png'}\n                  showUploadList={false}\n                  beforeUpload={beforeUpload}\n                  onChange={onChange}\n                >\n                  <Button\n                    size=\"small\"\n                    icon={<UploadOutlined />}\n                    loading={uploading}\n                  >\n                    Upload new\n                  </Button>\n                </Upload>\n              </Space>\n            </Form.Item>\n          </Col>\n          <Col span={20}>\n            <Form.Item label=\"Email\" name=\"email\">\n              <Input />\n            </Form.Item>\n            {/* TODO : Disabled for now (add username in dB)\n            <Form.Item label=\"User name\" name=\"username\">\n              <Input disabled={true} />\n            </Form.Item>\n            */}\n            <Form.Item label=\"First name\" name=\"firstname\">\n              <Input />\n            </Form.Item>\n            <Form.Item label=\"Last name\" name=\"lastname\">\n              <Input />\n            </Form.Item>\n            <Form.Item {...buttonLayout} style={{ marginBottom: 'unset' }}>\n              <Space>\n                <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                  Apply changes\n                </Button>\n                <Button type=\"text\" onClick={onCancel}>\n                  Cancel\n                </Button>\n              </Space>\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Card>\n  )\n}\n\nexport default Information\n"]},"metadata":{},"sourceType":"module"}