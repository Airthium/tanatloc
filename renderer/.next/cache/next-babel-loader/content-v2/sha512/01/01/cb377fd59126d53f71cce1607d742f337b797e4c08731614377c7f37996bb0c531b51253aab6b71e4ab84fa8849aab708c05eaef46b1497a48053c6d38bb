{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/account/hpc/plugin.js\";\nimport { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { Error } from '../../assets/notification';\nimport PluginForm from './pluginForm';\nimport List from './list';\nimport PluginAPI from '../../../../src/api/plugin';\n/**\n * Errors hpc/plugin\n */\n\nconst errors = {\n  updateError: 'Unable to update plugins'\n};\n/**\n * Plugin\n * @param {Object} props Props\n */\n\nconst Plugin = ({\n  plugin\n}) => {\n  // State\n  const {\n    0: add,\n    1: setAdd\n  } = useState(false); // Data\n\n  const [, {\n    addOnePlugin\n  }] = PluginAPI.usePlugins();\n  /**\n   * On finish\n   * @param {Object} values Values\n   */\n\n  const onFinish = async values => {\n    try {\n      // Set values\n      Object.keys(values).forEach(key => {\n        plugin.configuration[key].value = values[key];\n      }); // Remove logo\n\n      plugin.logo && delete plugin.logo; // Remove renderer\n\n      plugin.renderer && delete plugin.renderer; // Set uuid\n\n      plugin.uuid = uuid(); // API\n\n      await PluginAPI.add(plugin); // Mutate\n\n      addOnePlugin(plugin); // Finish\n\n      setAdd(false);\n    } catch (err) {\n      Error(errors.updateError, err);\n    }\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [add ? /*#__PURE__*/_jsxDEV(PluginForm, {\n      plugin: plugin,\n      onFinish: onFinish,\n      onCancel: () => setAdd(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"primary\",\n      onClick: () => setAdd(true),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      plugin: plugin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Plugin;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/account/hpc/plugin.js"],"names":["useState","v4","uuid","Error","PluginForm","List","PluginAPI","errors","updateError","Plugin","plugin","add","setAdd","addOnePlugin","usePlugins","onFinish","values","Object","keys","forEach","key","configuration","value","logo","renderer","err"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,SAASC,KAAT,QAAsB,2BAAtB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE;AADA,CAAf;AAIA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC7B;AACA,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBZ,QAAQ,CAAC,KAAD,CAA9B,CAF6B,CAI7B;;AACA,QAAM,GAAG;AAAEa,IAAAA;AAAF,GAAH,IAAuBP,SAAS,CAACQ,UAAV,EAA7B;AAEA;AACF;AACA;AACA;;AACE,QAAMC,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AACjC,QAAI;AACF;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA6BC,GAAD,IAAS;AACnCV,QAAAA,MAAM,CAACW,aAAP,CAAqBD,GAArB,EAA0BE,KAA1B,GAAkCN,MAAM,CAACI,GAAD,CAAxC;AACD,OAFD,EAFE,CAMF;;AACAV,MAAAA,MAAM,CAACa,IAAP,IAAe,OAAOb,MAAM,CAACa,IAA7B,CAPE,CASF;;AACAb,MAAAA,MAAM,CAACc,QAAP,IAAmB,OAAOd,MAAM,CAACc,QAAjC,CAVE,CAYF;;AACAd,MAAAA,MAAM,CAACR,IAAP,GAAcA,IAAI,EAAlB,CAbE,CAeF;;AACA,YAAMI,SAAS,CAACK,GAAV,CAAcD,MAAd,CAAN,CAhBE,CAkBF;;AACAG,MAAAA,YAAY,CAACH,MAAD,CAAZ,CAnBE,CAqBF;;AACAE,MAAAA,MAAM,CAAC,KAAD,CAAN;AACD,KAvBD,CAuBE,OAAOa,GAAP,EAAY;AACZtB,MAAAA,KAAK,CAACI,MAAM,CAACC,WAAR,EAAqBiB,GAArB,CAAL;AACD;AACF,GA3BD;AA6BA;AACF;AACA;;;AACE,sBACE;AAAA,eACGd,GAAG,gBACF,QAAC,UAAD;AACE,MAAA,MAAM,EAAED,MADV;AAEE,MAAA,QAAQ,EAAEK,QAFZ;AAGE,MAAA,QAAQ,EAAE,MAAMH,MAAM,CAAC,KAAD;AAHxB;AAAA;AAAA;AAAA;AAAA,YADE,gBAOF;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,MAAMA,MAAM,CAAC,IAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAYE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAgBD,CA3DD;;AA6DA,eAAeD,MAAf","sourcesContent":["import { useState } from 'react'\nimport { Button } from 'antd'\nimport { v4 as uuid } from 'uuid'\n\nimport { Error } from '../../assets/notification'\n\nimport PluginForm from './pluginForm'\nimport List from './list'\n\nimport PluginAPI from '../../../../src/api/plugin'\n\n/**\n * Errors hpc/plugin\n */\nconst errors = {\n  updateError: 'Unable to update plugins'\n}\n\n/**\n * Plugin\n * @param {Object} props Props\n */\nconst Plugin = ({ plugin }) => {\n  // State\n  const [add, setAdd] = useState(false)\n\n  // Data\n  const [, { addOnePlugin }] = PluginAPI.usePlugins()\n\n  /**\n   * On finish\n   * @param {Object} values Values\n   */\n  const onFinish = async (values) => {\n    try {\n      // Set values\n      Object.keys(values).forEach((key) => {\n        plugin.configuration[key].value = values[key]\n      })\n\n      // Remove logo\n      plugin.logo && delete plugin.logo\n\n      // Remove renderer\n      plugin.renderer && delete plugin.renderer\n\n      // Set uuid\n      plugin.uuid = uuid()\n\n      // API\n      await PluginAPI.add(plugin)\n\n      // Mutate\n      addOnePlugin(plugin)\n\n      // Finish\n      setAdd(false)\n    } catch (err) {\n      Error(errors.updateError, err)\n    }\n  }\n\n  /**\n   * Render\n   */\n  return (\n    <>\n      {add ? (\n        <PluginForm\n          plugin={plugin}\n          onFinish={onFinish}\n          onCancel={() => setAdd(false)}\n        />\n      ) : (\n        <Button type=\"primary\" onClick={() => setAdd(true)}>\n          Add\n        </Button>\n      )}\n      <List plugin={plugin} />\n    </>\n  )\n}\n\nexport default Plugin\n"]},"metadata":{},"sourceType":"module"}