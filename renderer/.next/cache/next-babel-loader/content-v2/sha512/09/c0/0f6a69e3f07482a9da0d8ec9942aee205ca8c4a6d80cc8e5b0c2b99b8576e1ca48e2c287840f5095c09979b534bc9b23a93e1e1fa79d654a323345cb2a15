{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** @module renderer/store/select */\nimport { selectActionTypes } from './action';\n/**\n * Select initial state\n */\n\nexport var selectInitialState = {\n  enabled: false,\n  type: null,\n  part: null,\n  highlighted: null,\n  selected: []\n};\n/**\n * Select reducer\n * @param {Object} state Redux state\n * @param {Object} action Action\n */\n\nvar reducer = function reducer(state, action) {\n  if (!state) state = selectInitialState;\n\n  switch (action.type) {\n    case selectActionTypes.ENABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        enabled: true\n      });\n\n    case selectActionTypes.DISABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        enabled: false,\n        highlighted: null,\n        selected: []\n      });\n\n    case selectActionTypes.CLEAR:\n      return selectInitialState;\n\n    case selectActionTypes.SETTYPE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        type: action.object\n      });\n\n    case selectActionTypes.SETPART:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        part: action.uuid\n      });\n\n    case selectActionTypes.HIGHLIGHT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        highlighted: action.uuid\n      });\n\n    case selectActionTypes.UNHIGHLIGHT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        highlighted: null\n      });\n\n    case selectActionTypes.SELECT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: [].concat(_toConsumableArray(state.selected), [action.uuid])\n      });\n\n    case selectActionTypes.UNSELECT:\n      var index = state.selected.findIndex(function (s) {\n        return s === action.uuid;\n      });\n\n      if (index !== -1) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          selected: [].concat(_toConsumableArray(state.selected.slice(0, index)), _toConsumableArray(state.selected.slice(index + 1)))\n        });\n      } else return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/store/select/reducer.js"],"names":["selectActionTypes","selectInitialState","enabled","type","part","highlighted","selected","reducer","state","action","ENABLE","DISABLE","CLEAR","SETTYPE","object","SETPART","uuid","HIGHLIGHT","UNHIGHLIGHT","SELECT","UNSELECT","index","findIndex","s","slice"],"mappings":";;;;;;;AAAA;AAEA,SAASA,iBAAT,QAAkC,UAAlC;AAEA;AACA;AACA;;AACA,OAAO,IAAMC,kBAAkB,GAAG;AAChCC,EAAAA,OAAO,EAAE,KADuB;AAEhCC,EAAAA,IAAI,EAAE,IAF0B;AAGhCC,EAAAA,IAAI,EAAE,IAH0B;AAIhCC,EAAAA,WAAW,EAAE,IAJmB;AAKhCC,EAAAA,QAAQ,EAAE;AALsB,CAA3B;AAQP;AACA;AACA;AACA;AACA;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,MAAI,CAACD,KAAL,EAAYA,KAAK,GAAGP,kBAAR;;AACZ,UAAQQ,MAAM,CAACN,IAAf;AACE,SAAKH,iBAAiB,CAACU,MAAvB;AACE,6CACKF,KADL;AAEEN,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKF,iBAAiB,CAACW,OAAvB;AACE,6CACKH,KADL;AAEEN,QAAAA,OAAO,EAAE,KAFX;AAGEG,QAAAA,WAAW,EAAE,IAHf;AAIEC,QAAAA,QAAQ,EAAE;AAJZ;;AAMF,SAAKN,iBAAiB,CAACY,KAAvB;AACE,aAAOX,kBAAP;;AACF,SAAKD,iBAAiB,CAACa,OAAvB;AACE,6CACKL,KADL;AAEEL,QAAAA,IAAI,EAAEM,MAAM,CAACK;AAFf;;AAIF,SAAKd,iBAAiB,CAACe,OAAvB;AACE,6CACKP,KADL;AAEEJ,QAAAA,IAAI,EAAEK,MAAM,CAACO;AAFf;;AAIF,SAAKhB,iBAAiB,CAACiB,SAAvB;AACE,6CACKT,KADL;AAEEH,QAAAA,WAAW,EAAEI,MAAM,CAACO;AAFtB;;AAIF,SAAKhB,iBAAiB,CAACkB,WAAvB;AACE,6CACKV,KADL;AAEEH,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAKL,iBAAiB,CAACmB,MAAvB;AACE,6CACKX,KADL;AAEEF,QAAAA,QAAQ,+BAAME,KAAK,CAACF,QAAZ,IAAsBG,MAAM,CAACO,IAA7B;AAFV;;AAIF,SAAKhB,iBAAiB,CAACoB,QAAvB;AACE,UAAMC,KAAK,GAAGb,KAAK,CAACF,QAAN,CAAegB,SAAf,CAAyB,UAACC,CAAD;AAAA,eAAOA,CAAC,KAAKd,MAAM,CAACO,IAApB;AAAA,OAAzB,CAAd;;AACA,UAAIK,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,+CACKb,KADL;AAEEF,UAAAA,QAAQ,+BACHE,KAAK,CAACF,QAAN,CAAekB,KAAf,CAAqB,CAArB,EAAwBH,KAAxB,CADG,sBAEHb,KAAK,CAACF,QAAN,CAAekB,KAAf,CAAqBH,KAAK,GAAG,CAA7B,CAFG;AAFV;AAOD,OARD,MAQO,OAAOb,KAAP;;AACT;AACE,aAAOA,KAAP;AApDJ;AAsDD,CAxDD;;AA0DA,eAAeD,OAAf","sourcesContent":["/** @module renderer/store/select */\n\nimport { selectActionTypes } from './action'\n\n/**\n * Select initial state\n */\nexport const selectInitialState = {\n  enabled: false,\n  type: null,\n  part: null,\n  highlighted: null,\n  selected: []\n}\n\n/**\n * Select reducer\n * @param {Object} state Redux state\n * @param {Object} action Action\n */\nconst reducer = (state, action) => {\n  if (!state) state = selectInitialState\n  switch (action.type) {\n    case selectActionTypes.ENABLE:\n      return {\n        ...state,\n        enabled: true\n      }\n    case selectActionTypes.DISABLE:\n      return {\n        ...state,\n        enabled: false,\n        highlighted: null,\n        selected: []\n      }\n    case selectActionTypes.CLEAR:\n      return selectInitialState\n    case selectActionTypes.SETTYPE:\n      return {\n        ...state,\n        type: action.object\n      }\n    case selectActionTypes.SETPART:\n      return {\n        ...state,\n        part: action.uuid\n      }\n    case selectActionTypes.HIGHLIGHT:\n      return {\n        ...state,\n        highlighted: action.uuid\n      }\n    case selectActionTypes.UNHIGHLIGHT:\n      return {\n        ...state,\n        highlighted: null\n      }\n    case selectActionTypes.SELECT:\n      return {\n        ...state,\n        selected: [...state.selected, action.uuid]\n      }\n    case selectActionTypes.UNSELECT:\n      const index = state.selected.findIndex((s) => s === action.uuid)\n      if (index !== -1) {\n        return {\n          ...state,\n          selected: [\n            ...state.selected.slice(0, index),\n            ...state.selected.slice(index + 1)\n          ]\n        }\n      } else return state\n    default:\n      return state\n  }\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}