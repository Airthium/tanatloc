{"ast":null,"code":"import _Layout from \"antd/lib/layout\";\nimport _Space from \"antd/lib/space\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _Typography from \"antd/lib/typography\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect } from 'react';\nimport { Error } from '../../../assets/notification';\nimport Delete from '../delete';\nimport SimulationAPI from '../../../../../src/api/simulation';\n/**\n * Errors simulation/about\n * @memberof module:renderer/components/project/simulation\n */\n\nconst errors = {\n  updateError: 'Unable to update the simulation'\n};\n/**\n * About\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\n\nconst About = ({\n  project,\n  simulation\n}) => {\n  // Data\n  const [, {\n    mutateOneSimulation\n  }] = SimulationAPI.useSimulations(project === null || project === void 0 ? void 0 : project.simulations);\n  /**\n   * Handle name\n   * @param {string} name Name\n   */\n\n  const handleName = async name => {\n    try {\n      // Update simulation\n      await SimulationAPI.update({\n        id: simulation.id\n      }, [{\n        key: 'name',\n        value: name\n      }]); // Mutate simulation\n\n      mutateOneSimulation(_objectSpread(_objectSpread({}, simulation), {}, {\n        name: name\n      }));\n    } catch (err) {\n      Error(errors.updateError, err);\n    }\n  }; // MathJax\n\n\n  useEffect(() => {\n    var _window$MathJax;\n\n    (_window$MathJax = window.MathJax) === null || _window$MathJax === void 0 ? void 0 : _window$MathJax.typeset();\n  }, [simulation === null || simulation === void 0 ? void 0 : simulation.scheme.description]);\n  return /*#__PURE__*/_jsx(_Layout, {\n    children: /*#__PURE__*/_jsx(_Layout.Content, {\n      children: /*#__PURE__*/_jsxs(_Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsx(_Typography.Title, {\n          level: 4,\n          editable: {\n            onChange: handleName,\n            maxLength: 50\n          },\n          children: simulation === null || simulation === void 0 ? void 0 : simulation.name\n        }), /*#__PURE__*/_jsxs(_Typography.Text, {\n          children: [/*#__PURE__*/_jsx(\"b\", {\n            children: \"Category:\"\n          }), \" \", simulation === null || simulation === void 0 ? void 0 : simulation.scheme.category]\n        }), /*#__PURE__*/_jsxs(_Typography.Text, {\n          children: [/*#__PURE__*/_jsx(\"b\", {\n            children: \"Algorihtm:\"\n          }), \" \", simulation === null || simulation === void 0 ? void 0 : simulation.scheme.algorithm]\n        }), /*#__PURE__*/_jsxs(_Typography.Text, {\n          children: [/*#__PURE__*/_jsx(\"b\", {\n            children: \"Code:\"\n          }), \" \", simulation === null || simulation === void 0 ? void 0 : simulation.scheme.code]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: simulation === null || simulation === void 0 ? void 0 : simulation.scheme.description\n          }\n        }), /*#__PURE__*/_jsx(Delete, {\n          project: project,\n          simulation: {\n            id: simulation === null || simulation === void 0 ? void 0 : simulation.id,\n            name: simulation === null || simulation === void 0 ? void 0 : simulation.name\n          }\n        })]\n      })\n    })\n  });\n};\n\nexport default About;","map":null,"metadata":{},"sourceType":"module"}