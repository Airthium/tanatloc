{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/delete/index.js\";\nimport { useState } from 'react';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { Error } from '../../../assets/notification';\nimport { DeleteDialog } from '../../../assets/dialog';\nimport SimulationAPI from '../../../../../src/api/simulation';\nimport ProjectAPI from '../../../../../src/api/project';\n/**\n * Errors simulation/delete\n * @memberof module:renderer/components/project/simulation\n */\n\nconst errors = {\n  delError: 'Unable to delete the simulation'\n};\n/**\n * Delete\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\n\nconst Delete = ({\n  project,\n  simulation\n}) => {\n  // State\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // Data\n\n  const [, {\n    delOneSimulation\n  }] = SimulationAPI.useSimulations(project === null || project === void 0 ? void 0 : project.simulations);\n  const [, {\n    mutateProject\n  }] = ProjectAPI.useProject(project === null || project === void 0 ? void 0 : project.id);\n\n  const toggleDialog = () => {\n    setVisible(!visible);\n  };\n\n  const handleDelete = async () => {\n    setLoading(true);\n\n    try {\n      // Delete\n      await SimulationAPI.del(project, simulation); // Mutate project\n\n      const index = project.simulations.findIndex(s => s.id === simulation.id);\n      project.simulations = [...project.simulations.slice(0, index), ...project.simulations.slice(index + 1)];\n      mutateProject(project); // Mutate simulations\n\n      delOneSimulation({\n        id: simulation.id\n      });\n      toggleDialog();\n    } catch (err) {\n      Error(errors.delError, err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      type: \"danger\",\n      icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 35\n      }, this),\n      onClick: toggleDialog,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteDialog, {\n      visible: visible,\n      onCancel: toggleDialog,\n      onOk: handleDelete,\n      loading: loading,\n      children: [\"Delete \", simulation.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Delete;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/delete/index.js"],"names":["useState","DeleteOutlined","Error","DeleteDialog","SimulationAPI","ProjectAPI","errors","delError","Delete","project","simulation","visible","setVisible","loading","setLoading","delOneSimulation","useSimulations","simulations","mutateProject","useProject","id","toggleDialog","handleDelete","del","index","findIndex","s","slice","err","name"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,SAASC,KAAT,QAAsB,8BAAtB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAEA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AADG,CAAf;AAIA;AACA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA6B;AAC1C;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,KAAD,CAAtC,CAH0C,CAK1C;;AACA,QAAM,GAAG;AAAEe,IAAAA;AAAF,GAAH,IAA2BX,aAAa,CAACY,cAAd,CAC/BP,OAD+B,aAC/BA,OAD+B,uBAC/BA,OAAO,CAAEQ,WADsB,CAAjC;AAGA,QAAM,GAAG;AAAEC,IAAAA;AAAF,GAAH,IAAwBb,UAAU,CAACc,UAAX,CAAsBV,OAAtB,aAAsBA,OAAtB,uBAAsBA,OAAO,CAAEW,EAA/B,CAA9B;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzBT,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,QAAMW,YAAY,GAAG,YAAY;AAC/BR,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF;AACA,YAAMV,aAAa,CAACmB,GAAd,CAAkBd,OAAlB,EAA2BC,UAA3B,CAAN,CAFE,CAIF;;AACA,YAAMc,KAAK,GAAGf,OAAO,CAACQ,WAAR,CAAoBQ,SAApB,CAA+BC,CAAD,IAAOA,CAAC,CAACN,EAAF,KAASV,UAAU,CAACU,EAAzD,CAAd;AACAX,MAAAA,OAAO,CAACQ,WAAR,GAAsB,CACpB,GAAGR,OAAO,CAACQ,WAAR,CAAoBU,KAApB,CAA0B,CAA1B,EAA6BH,KAA7B,CADiB,EAEpB,GAAGf,OAAO,CAACQ,WAAR,CAAoBU,KAApB,CAA0BH,KAAK,GAAG,CAAlC,CAFiB,CAAtB;AAIAN,MAAAA,aAAa,CAACT,OAAD,CAAb,CAVE,CAYF;;AACAM,MAAAA,gBAAgB,CAAC;AAAEK,QAAAA,EAAE,EAAEV,UAAU,CAACU;AAAjB,OAAD,CAAhB;AAEAC,MAAAA,YAAY;AACb,KAhBD,CAgBE,OAAOO,GAAP,EAAY;AACZ1B,MAAAA,KAAK,CAACI,MAAM,CAACC,QAAR,EAAkBqB,GAAlB,CAAL;AACD,KAlBD,SAkBU;AACRd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAvBD;;AAyBA,sBACE;AAAA,4BACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAA5B;AAAgD,MAAA,OAAO,EAAEO,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,YAAD;AACE,MAAA,OAAO,EAAEV,OADX;AAEE,MAAA,QAAQ,EAAEU,YAFZ;AAGE,MAAA,IAAI,EAAEC,YAHR;AAIE,MAAA,OAAO,EAAET,OAJX;AAAA,4BAMUH,UAAU,CAACmB,IANrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAeD,CAvDD;;AAyDA,eAAerB,MAAf","sourcesContent":["import { useState } from 'react'\nimport { Button } from 'antd'\nimport { DeleteOutlined } from '@ant-design/icons'\n\nimport { Error } from '../../../assets/notification'\nimport { DeleteDialog } from '../../../assets/dialog'\n\nimport SimulationAPI from '../../../../../src/api/simulation'\nimport ProjectAPI from '../../../../../src/api/project'\n\n/**\n * Errors simulation/delete\n * @memberof module:renderer/components/project/simulation\n */\nconst errors = {\n  delError: 'Unable to delete the simulation'\n}\n\n/**\n * Delete\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\nconst Delete = ({ project, simulation }) => {\n  // State\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  // Data\n  const [, { delOneSimulation }] = SimulationAPI.useSimulations(\n    project?.simulations\n  )\n  const [, { mutateProject }] = ProjectAPI.useProject(project?.id)\n\n  const toggleDialog = () => {\n    setVisible(!visible)\n  }\n\n  const handleDelete = async () => {\n    setLoading(true)\n    try {\n      // Delete\n      await SimulationAPI.del(project, simulation)\n\n      // Mutate project\n      const index = project.simulations.findIndex((s) => s.id === simulation.id)\n      project.simulations = [\n        ...project.simulations.slice(0, index),\n        ...project.simulations.slice(index + 1)\n      ]\n      mutateProject(project)\n\n      // Mutate simulations\n      delOneSimulation({ id: simulation.id })\n\n      toggleDialog()\n    } catch (err) {\n      Error(errors.delError, err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <>\n      <Button type=\"danger\" icon={<DeleteOutlined />} onClick={toggleDialog}>\n        Delete\n      </Button>\n      <DeleteDialog\n        visible={visible}\n        onCancel={toggleDialog}\n        onOk={handleDelete}\n        loading={loading}\n      >\n        Delete {simulation.name}\n      </DeleteDialog>\n    </>\n  )\n}\n\nexport default Delete\n"]},"metadata":{},"sourceType":"module"}