{"ast":null,"code":"import _Space from \"antd/lib/space\";\nimport _Table from \"antd/lib/table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _Empty from \"antd/lib/empty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/list/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRouter } from 'next/router';\nimport { Error } from '../../assets/notification';\nimport Data from '../data';\nimport Delete from '../delete';\nimport ProjectAPI from '../../../../src/api/project';\n/**\n * Errors project/list\n * @memberof module:renderer/components/project\n */\n\nvar errors = {\n  updateError: 'Unable to update the project'\n};\n/**\n * Projects' list\n * @memberof module:renderer/components/project\n * @param {Object} props Props\n */\n\nvar ProjectList = function ProjectList(_ref) {\n  _s();\n\n  var workspace = _ref.workspace,\n      filter = _ref.filter;\n  // Router\n  var router = useRouter(); // Load projects\n\n  var _ProjectAPI$useProjec = ProjectAPI.useProjects(workspace === null || workspace === void 0 ? void 0 : workspace.projects),\n      _ProjectAPI$useProjec2 = _slicedToArray(_ProjectAPI$useProjec, 2),\n      projects = _ProjectAPI$useProjec2[0],\n      mutateOneProject = _ProjectAPI$useProjec2[1].mutateOneProject; // Data\n\n\n  var data = projects.map(function (project) {\n    return Data(project, filter, function (title) {\n      return setTitle(project, title);\n    });\n  }).filter(function (d) {\n    return d;\n  }); // Open project\n\n  var openProject = function openProject(project) {\n    router.push({\n      pathname: '/project',\n      query: {\n        workspaceId: workspace.id,\n        projectId: project.id\n      }\n    });\n  };\n  /**\n   * Set title\n   * @param {string} project Project { id }\n   * @param {string} title Title\n   */\n\n\n  var setTitle = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(project, title) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return ProjectAPI.update({\n                id: project.id\n              }, [{\n                key: 'title',\n                value: title\n              }]);\n\n            case 3:\n              // Mutate project\n              mutateOneProject(_objectSpread(_objectSpread({}, project), {}, {\n                title: title\n              }));\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              Error(errors.updateError, _context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function setTitle(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Table, {\n    pagination: false,\n    dataSource: data,\n    bordered: true,\n    size: \"small\",\n    scroll: {\n      y: 'calc(100vh - 232px)'\n    },\n    locale: {\n      emptyText: /*#__PURE__*/_jsxDEV(_Empty, {\n        image: _Empty.PRESENTED_IMAGE_SIMPLE,\n        description: \"No projects yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, _this)\n    },\n    children: [/*#__PURE__*/_jsxDEV(_Table.Column, {\n      title: \"\",\n      dataIndex: \"snapshot\",\n      onCell: function onCell(project) {\n        return {\n          onClick: function onClick() {\n            return openProject(project);\n          }\n        };\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Table.Column, {\n      title: \"Project Name\",\n      dataIndex: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Table.Column, {\n      title: \"Status\",\n      dataIndex: \"tags\",\n      align: \"center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Table.Column, {\n      title: \"Administrators\",\n      dataIndex: \"owners\",\n      align: \"center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Table.Column, {\n      title: \"Actions\",\n      align: \"center\",\n      render: function render(value) {\n        return /*#__PURE__*/_jsxDEV(_Space, {\n          size: \"middle\",\n          children: /*#__PURE__*/_jsxDEV(Delete, {\n            workspace: workspace,\n            project: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ProjectList, \"d1VstSE4KouKz3uWpVCqzNlva6s=\", false, function () {\n  return [useRouter, ProjectAPI.useProjects];\n});\n\n_c = ProjectList;\nexport default ProjectList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/list/index.js"],"names":["useRouter","Error","Data","Delete","ProjectAPI","errors","updateError","ProjectList","workspace","filter","router","useProjects","projects","mutateOneProject","data","map","project","title","setTitle","d","openProject","push","pathname","query","workspaceId","id","projectId","update","key","value","y","emptyText","PRESENTED_IMAGE_SIMPLE","onClick"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport { Space, Table, Empty } from 'antd'\n\nimport { Error } from '../../assets/notification'\n\nimport Data from '../data'\nimport Delete from '../delete'\n\nimport ProjectAPI from '../../../../src/api/project'\n\n/**\n * Errors project/list\n * @memberof module:renderer/components/project\n */\nconst errors = {\n  updateError: 'Unable to update the project'\n}\n\n/**\n * Projects' list\n * @memberof module:renderer/components/project\n * @param {Object} props Props\n */\nconst ProjectList = ({ workspace, filter }) => {\n  // Router\n  const router = useRouter()\n\n  // Load projects\n  const [projects, { mutateOneProject }] = ProjectAPI.useProjects(\n    workspace?.projects\n  )\n\n  // Data\n  const data = projects\n    .map((project) => {\n      return Data(project, filter, (title) => setTitle(project, title))\n    })\n    .filter((d) => d)\n\n  // Open project\n  const openProject = (project) => {\n    router.push({\n      pathname: '/project',\n      query: { workspaceId: workspace.id, projectId: project.id }\n    })\n  }\n\n  /**\n   * Set title\n   * @param {string} project Project { id }\n   * @param {string} title Title\n   */\n  const setTitle = async (project, title) => {\n    try {\n      // Update\n      await ProjectAPI.update({ id: project.id }, [\n        {\n          key: 'title',\n          value: title\n        }\n      ])\n\n      // Mutate project\n      mutateOneProject({\n        ...project,\n        title: title\n      })\n    } catch (err) {\n      Error(errors.updateError, err)\n    }\n  }\n\n  /**\n   * Render\n   */\n  return (\n    <Table\n      pagination={false}\n      dataSource={data}\n      bordered={true}\n      size=\"small\"\n      scroll={{ y: 'calc(100vh - 232px)' }}\n      locale={{\n        emptyText: (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description=\"No projects yet.\"\n          />\n        )\n      }}\n    >\n      <Table.Column\n        title=\"\"\n        dataIndex=\"snapshot\"\n        onCell={(project) => {\n          return {\n            onClick: () => openProject(project)\n          }\n        }}\n      />\n      <Table.Column title=\"Project Name\" dataIndex=\"title\" />\n      <Table.Column title=\"Status\" dataIndex=\"tags\" align=\"center\" />\n      <Table.Column title=\"Administrators\" dataIndex=\"owners\" align=\"center\" />\n      {/* <Table.Column title=\"Shared With\" dataIndex=\"users\" align=\"center\" /> */}\n      <Table.Column\n        title=\"Actions\"\n        align=\"center\"\n        render={(value) => (\n          <Space size=\"middle\">\n            {/* <Button key=\"share\" icon={<ShareAltOutlined />}>\n              Share\n            </Button> */}\n            <Delete workspace={workspace} project={value} />\n          </Space>\n        )}\n      />\n    </Table>\n  )\n}\n\nexport default ProjectList\n"]},"metadata":{},"sourceType":"module"}