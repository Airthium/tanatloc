{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Modal from \"antd/lib/modal\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport _Radio from \"antd/lib/radio\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Table from \"antd/lib/table\";\nimport _Space from \"antd/lib/space\";\nimport _Typography from \"antd/lib/typography\";\nimport _Avatar from \"antd/lib/avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/plugin/rescale/renderer/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { SelectOutlined } from '@ant-design/icons';\n\nconst Rescale = ({\n  data\n}) => {\n  // State\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: step,\n    1: setStep\n  } = useState(1);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState();\n  const {\n    0: lowPriority,\n    1: setLowPriority\n  } = useState(true);\n  const {\n    0: numberOfCores,\n    1: setNumberOfCores\n  } = useState(); // Data\n\n  data.coreTypes.forEach(d => {\n    d.key = d.name;\n  });\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(_Space, {\n      children: /*#__PURE__*/_jsxDEV(_Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(_Space, {\n          children: [/*#__PURE__*/_jsxDEV(_Avatar, {\n            style: {\n              marginRight: '-20px',\n              background: 'linear-gradient(to right,' + record.color + ', rgba(255, 255, 255, 0))',\n              opacity: 0.5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(_Typography.Text, {\n            strong: true,\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), record.processorInfo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Cores',\n    dataIndex: 'cores',\n    key: 'cores',\n    render: cores => cores.join(', ')\n  }, {\n    title: 'Memory',\n    dataIndex: 'memory',\n    key: 'memory',\n    render: text => text / 1000 + ' Go'\n  }, {\n    title: 'Pro Price',\n    dataIndex: 'price',\n    key: 'price'\n  }, {\n    title: 'Price',\n    dataIndex: 'lowPriorityPrice',\n    key: 'lowPriorityPrice'\n  }];\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setSelected(selectedRows[0]);\n    }\n  };\n\n  const onOk = () => {\n    if (step === 1) {\n      setNumberOfCores(selected.cores[0]);\n      setStep(step + 1);\n    }\n  };\n\n  console.log(selected);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Modal, {\n      title: \"Rescale plugin\",\n      visible: visible,\n      onCancel: () => setVisible(false),\n      okText: \"Next\",\n      okButtonProps: {\n        disabled: step === 1 && !selected\n      },\n      onOk: onOk,\n      width: \"unset\",\n      children: [step === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n          strong: true,\n          children: \"Select a coretype:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Table, {\n          dataSource: data.coreTypes,\n          columns: columns,\n          rowSelection: _objectSpread({\n            type: 'radio'\n          }, rowSelection)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), step === 2 && /*#__PURE__*/_jsxDEV(_Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(_Radio.Group, {\n          onChange: e => setLowPriority(e.target.value),\n          value: lowPriority,\n          children: [/*#__PURE__*/_jsxDEV(_Radio, {\n            value: false,\n            children: \"On-Demand Pro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(_Radio, {\n            value: true,\n            children: \"On-Demand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Typography.Text, {\n          strong: true,\n          children: \"Number of cores:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_InputNumber, {\n          value: selected.cores[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Space, {\n      children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n        children: [\"More information on\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.rescale.com/infrastructure/\",\n          target: \"_blank\",\n          children: \"Rescale website\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        onClick: () => setVisible(true),\n        icon: /*#__PURE__*/_jsxDEV(SelectOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Rescale;\n{\n  /* <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space> */\n}","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/plugin/rescale/renderer/index.js"],"names":["useState","SelectOutlined","Rescale","data","visible","setVisible","step","setStep","selected","setSelected","lowPriority","setLowPriority","numberOfCores","setNumberOfCores","coreTypes","forEach","d","key","name","columns","title","dataIndex","render","text","record","marginRight","background","color","opacity","processorInfo","cores","join","rowSelection","onChange","selectedRowKeys","selectedRows","onOk","console","log","disabled","type","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport {\n  Avatar,\n  Button,\n  InputNumber,\n  Modal,\n  Radio,\n  Space,\n  Table,\n  Typography\n} from 'antd'\nimport { SelectOutlined } from '@ant-design/icons'\n\nconst Rescale = ({ data }) => {\n  // State\n  const [visible, setVisible] = useState(false)\n  const [step, setStep] = useState(1)\n  const [selected, setSelected] = useState()\n  const [lowPriority, setLowPriority] = useState(true)\n  const [numberOfCores, setNumberOfCores] = useState()\n\n  // Data\n  data.coreTypes.forEach((d) => {\n    d.key = d.name\n  })\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text, record) => (\n        <Space>\n          <Space direction=\"vertical\">\n            <Space>\n              <Avatar\n                style={{\n                  marginRight: '-20px',\n                  background:\n                    'linear-gradient(to right,' +\n                    record.color +\n                    ', rgba(255, 255, 255, 0))',\n                  opacity: 0.5\n                }}\n              />\n              <Typography.Text strong={true}>{text}</Typography.Text>\n            </Space>\n            {record.processorInfo}\n          </Space>\n        </Space>\n      )\n    },\n    {\n      title: 'Cores',\n      dataIndex: 'cores',\n      key: 'cores',\n      render: (cores) => cores.join(', ')\n    },\n    {\n      title: 'Memory',\n      dataIndex: 'memory',\n      key: 'memory',\n      render: (text) => text / 1000 + ' Go'\n    },\n    {\n      title: 'Pro Price',\n      dataIndex: 'price',\n      key: 'price'\n    },\n    {\n      title: 'Price',\n      dataIndex: 'lowPriorityPrice',\n      key: 'lowPriorityPrice'\n    }\n  ]\n\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setSelected(selectedRows[0])\n    }\n  }\n\n  const onOk = () => {\n    if (step === 1) {\n      setNumberOfCores(selected.cores[0])\n      setStep(step + 1)\n    }\n  }\n\n  console.log(selected)\n\n  return (\n    <>\n      <Modal\n        title=\"Rescale plugin\"\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        okText=\"Next\"\n        okButtonProps={{\n          disabled: step === 1 && !selected\n        }}\n        onOk={onOk}\n        width=\"unset\"\n      >\n        {step === 1 && (\n          <>\n            <Typography.Text strong={true}>Select a coretype:</Typography.Text>\n            <Table\n              dataSource={data.coreTypes}\n              columns={columns}\n              rowSelection={{\n                type: 'radio',\n                ...rowSelection\n              }}\n            />\n          </>\n        )}\n        {step === 2 && (\n          <Space direction=\"vertical\">\n            <Radio.Group\n              onChange={(e) => setLowPriority(e.target.value)}\n              value={lowPriority}\n            >\n              <Radio value={false}>On-Demand Pro</Radio>\n              <Radio value={true}>On-Demand</Radio>\n            </Radio.Group>\n            <Typography.Text strong={true}>Number of cores:</Typography.Text>\n            <InputNumber value={selected.cores[0]} />\n          </Space>\n        )}\n      </Modal>\n      <Space>\n        <Typography.Text>\n          More information on{' '}\n          <a href=\"https://www.rescale.com/infrastructure/\" target=\"_blank\">\n            Rescale website\n          </a>\n          .\n        </Typography.Text>\n        <Button onClick={() => setVisible(true)} icon={<SelectOutlined />} />\n      </Space>\n    </>\n  )\n}\n\nexport default Rescale\n\n{\n  /* <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space> */\n}\n"]},"metadata":{},"sourceType":"module"}