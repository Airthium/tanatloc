{"ast":null,"code":"import _Layout from \"antd/lib/layout\";\nimport _Typography from \"antd/lib/typography\";\nimport _Menu from \"antd/lib/menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** @module renderer/components/project */\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport { ArrowLeftOutlined, CalculatorOutlined, CheckCircleOutlined, CloseCircleOutlined, ExclamationCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Error } from '../assets/notification';\nimport NotAuthorized from '../notauthorized';\nimport View from './view';\nimport Simulation from './simulation';\nimport UserAPI from '../../../src/api/user';\nimport ProjectAPI from '../../../src/api/project';\nimport SimulationAPI from '../../../src/api/simulation';\n/**\n * Menu keys\n */\n\nconst menuKeys = {\n  dashboard: 'dashboard',\n  newSimulation: 'new-simulation',\n  simulation: 'simulation'\n};\n/**\n * Errors\n */\n\nconst errors = {\n  updateError: 'Unable to update the project',\n  addError: 'Unable to add a simulation'\n};\n/**\n * Project\n */\n\nconst Project = () => {\n  // Router\n  const router = useRouter();\n  const {\n    workspaceId,\n    projectId\n  } = router.query; // State\n\n  const {\n    0: selectorVisible,\n    1: setSelectorVisible\n  } = useState(false);\n  const {\n    0: currentSimulation,\n    1: setCurrentSimulation\n  } = useState();\n  const {\n    0: currentType,\n    1: setCurrentType\n  } = useState();\n  const {\n    0: partSummary,\n    1: setPartSummary\n  } = useState(); // Data\n\n  const [user, {\n    loadingUser\n  }] = UserAPI.useUser();\n  const [project, {\n    mutateProject\n  }] = ProjectAPI.useProject(projectId || '');\n  const [simulations, {\n    addOneSimulation\n  }] = SimulationAPI.useSimulations(project.simulations); // Not logged -> go to login page\n\n  useEffect(() => {\n    if (!loadingUser && !user) router.replace('/login');\n  }, [user, loadingUser]); // Modified simulation\n\n  useEffect(() => {\n    const simulation = simulations.find(s => s.id === (currentSimulation === null || currentSimulation === void 0 ? void 0 : currentSimulation.id));\n    if (JSON.stringify(simulation) !== JSON.stringify(currentSimulation)) setCurrentSimulation(simulation);\n  }, [simulations]);\n  /**\n   * Handle title\n   * @param {srting} title Title\n   */\n\n  const handleTitle = async title => {\n    try {\n      // Update\n      await ProjectAPI.update({\n        id: project.id\n      }, [{\n        key: 'title',\n        value: title\n      }]); // Mutate\n\n      mutateProject(_objectSpread(_objectSpread({}, project), {}, {\n        title\n      }));\n    } catch (err) {\n      Error(errors.updateError, err);\n    }\n  };\n  /**\n   * On menu click\n   * @param {Object} data Data { key }\n   */\n\n\n  const onMenuClick = ({\n    key\n  }) => {\n    if (key === menuKeys.dashboard) handleDashboard();else if (key === menuKeys.newSimulation) addSimulation();else if (key.includes(menuKeys.simulation)) selectSimulation(key);\n  };\n  /**\n   * Handle dashboard\n   */\n\n\n  const handleDashboard = () => {\n    router.push({\n      pathname: '/dashboard',\n      query: {\n        workspaceId\n      }\n    });\n  };\n  /**\n   * Add simulation\n   */\n\n\n  const addSimulation = () => {\n    setSelectorVisible(true);\n  };\n  /**\n   * On selector ok\n   * @param {Object} scheme Simulation scheme\n   */\n\n\n  const onSelectorOk = async scheme => {\n    try {\n      // Add in dB\n      const simulation = await SimulationAPI.add({\n        id: project.id\n      }, {\n        name: scheme.algorithm,\n        scheme\n      }); // Mutate\n\n      addOneSimulation(simulation);\n      mutateProject(_objectSpread(_objectSpread({}, project), {}, {\n        simulations: [...(project.simulations || []), simulation]\n      })); // Close selector\n\n      setSelectorVisible(false);\n    } catch (err) {\n      Error(errors.addError, err);\n    }\n  };\n  /**\n   * On selector cancel\n   */\n\n\n  const onSelectorCancel = () => {\n    setSelectorVisible(false);\n  };\n  /**\n   * On simulation select\n   * @param {string} key Key\n   */\n\n\n  const selectSimulation = key => {\n    setCurrentType();\n    const descriptor = key.split('&');\n    const simulationId = descriptor[1];\n    const type = descriptor[2];\n    const simulation = simulations.find(s => s.id === simulationId);\n    setCurrentSimulation(simulation);\n    setCurrentType(type);\n  };\n  /**\n   * On simulation close\n   */\n\n\n  const onSimulationClose = () => {\n    setCurrentSimulation();\n    setCurrentType();\n  }; // Simulations render build\n\n\n  const simulationsRender = simulations.map(s => {\n    var _s$scheme;\n\n    const categories = [];\n    const configuration = (s === null || s === void 0 ? void 0 : (_s$scheme = s.scheme) === null || _s$scheme === void 0 ? void 0 : _s$scheme.configuration) || {};\n    Object.keys(configuration).forEach(key => {\n      var _child$subMenus;\n\n      if (key === 'part') return;\n      const child = configuration[key];\n\n      if (!((_child$subMenus = child.subMenus) !== null && _child$subMenus !== void 0 && _child$subMenus.length)) {\n        categories[child.index] = /*#__PURE__*/_jsxDEV(_Menu.Item, {\n          icon: child.error ? /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {\n            style: {\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this) : child.done ? /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n            style: {\n              color: 'green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {\n            style: {\n              color: 'orange'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this),\n          children: child.title\n        }, menuKeys.simulation + '&' + s.id + '&' + key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this);\n      } else {\n        const subMenus = child.subMenus.map((subMenu, index) => {\n          return /*#__PURE__*/_jsxDEV(_Menu.Item, {\n            children: subMenu.title\n          }, menuKeys.simulation + '&' + s.id + '&' + key + '&' + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this);\n        });\n        categories[child.index] = /*#__PURE__*/_jsxDEV(_Menu.SubMenu, {\n          icon: child.done ? /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n            style: {\n              color: 'green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {\n            style: {\n              color: 'orange'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this),\n          title: child.title,\n          onTitleClick: onMenuClick,\n          children: subMenus\n        }, menuKeys.simulation + '&' + s.id + '&' + key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(_Menu.SubMenu, {\n      icon: /*#__PURE__*/_jsxDEV(CalculatorOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }, this),\n      title: s.name,\n      children: [/*#__PURE__*/_jsxDEV(_Menu.Item, {\n        icon: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n          style: {\n            color: 'green'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }, this),\n        children: \"About\"\n      }, menuKeys.simulation + '&' + s.id + '&about', false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), categories]\n    }, menuKeys.simulation + s.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this);\n  });\n  /**\n   * Render\n   */\n\n  return project === 'Unauthorized' ? /*#__PURE__*/_jsxDEV(NotAuthorized, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Layout, {\n    hasSider: true,\n    children: [/*#__PURE__*/_jsxDEV(_Layout.Sider, {\n      theme: \"light\",\n      className: \"Project-sider\",\n      children: [/*#__PURE__*/_jsxDEV(_Menu, {\n        onClick: onMenuClick,\n        children: /*#__PURE__*/_jsxDEV(_Menu.Item, {\n          icon: /*#__PURE__*/_jsxDEV(ArrowLeftOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 53\n          }, this),\n          children: \"Dashboard\"\n        }, menuKeys.dashboard, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Typography.Title, {\n        className: \"Project-title\",\n        level: 4,\n        editable: {\n          onChange: handleTitle,\n          maxLength: 50\n        },\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Menu, {\n        mode: \"inline\",\n        onClick: onMenuClick,\n        children: [/*#__PURE__*/_jsxDEV(_Menu.Item, {\n          icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 57\n          }, this),\n          children: \"New simulation\"\n        }, menuKeys.newSimulation, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), simulationsRender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Layout.Content, {\n      className: \"no-scroll relative\",\n      children: [/*#__PURE__*/_jsxDEV(Simulation.Selector, {\n        visible: selectorVisible,\n        onOk: onSelectorOk,\n        onCancel: onSelectorCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Simulation, {\n        project: {\n          id: project.id,\n          simulations: project.simulations\n        },\n        simulation: currentSimulation,\n        type: currentType,\n        part: partSummary,\n        onClose: onSimulationClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        simulation: currentSimulation,\n        setPartSummary: setPartSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Project;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/index.js"],"names":["useRouter","useEffect","useState","ArrowLeftOutlined","CalculatorOutlined","CheckCircleOutlined","CloseCircleOutlined","ExclamationCircleOutlined","PlusOutlined","Error","NotAuthorized","View","Simulation","UserAPI","ProjectAPI","SimulationAPI","menuKeys","dashboard","newSimulation","simulation","errors","updateError","addError","Project","router","workspaceId","projectId","query","selectorVisible","setSelectorVisible","currentSimulation","setCurrentSimulation","currentType","setCurrentType","partSummary","setPartSummary","user","loadingUser","useUser","project","mutateProject","useProject","simulations","addOneSimulation","useSimulations","replace","find","s","id","JSON","stringify","handleTitle","title","update","key","value","err","onMenuClick","handleDashboard","addSimulation","includes","selectSimulation","push","pathname","onSelectorOk","scheme","add","name","algorithm","onSelectorCancel","descriptor","split","simulationId","type","onSimulationClose","simulationsRender","map","categories","configuration","Object","keys","forEach","child","subMenus","length","index","error","color","done","subMenu","onChange","maxLength"],"mappings":"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","sourcesContent":["/** @module renderer/components/project */\n\nimport { useRouter } from 'next/router'\nimport { useEffect, useState } from 'react'\nimport { Layout, Menu, Typography } from 'antd'\nimport {\n  ArrowLeftOutlined,\n  CalculatorOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  ExclamationCircleOutlined,\n  PlusOutlined\n} from '@ant-design/icons'\n\nimport { Error } from '../assets/notification'\n\nimport NotAuthorized from '../notauthorized'\nimport View from './view'\nimport Simulation from './simulation'\n\nimport UserAPI from '../../../src/api/user'\nimport ProjectAPI from '../../../src/api/project'\nimport SimulationAPI from '../../../src/api/simulation'\n\n/**\n * Menu keys\n */\nconst menuKeys = {\n  dashboard: 'dashboard',\n  newSimulation: 'new-simulation',\n  simulation: 'simulation'\n}\n\n/**\n * Errors\n */\nconst errors = {\n  updateError: 'Unable to update the project',\n  addError: 'Unable to add a simulation'\n}\n\n/**\n * Project\n */\nconst Project = () => {\n  // Router\n  const router = useRouter()\n  const { workspaceId, projectId } = router.query\n\n  // State\n  const [selectorVisible, setSelectorVisible] = useState(false)\n  const [currentSimulation, setCurrentSimulation] = useState()\n  const [currentType, setCurrentType] = useState()\n  const [partSummary, setPartSummary] = useState()\n\n  // Data\n  const [user, { loadingUser }] = UserAPI.useUser()\n  const [project, { mutateProject }] = ProjectAPI.useProject(projectId || '')\n  const [simulations, { addOneSimulation }] = SimulationAPI.useSimulations(\n    project.simulations\n  )\n\n  // Not logged -> go to login page\n  useEffect(() => {\n    if (!loadingUser && !user) router.replace('/login')\n  }, [user, loadingUser])\n\n  // Modified simulation\n  useEffect(() => {\n    const simulation = simulations.find((s) => s.id === currentSimulation?.id)\n    if (JSON.stringify(simulation) !== JSON.stringify(currentSimulation))\n      setCurrentSimulation(simulation)\n  }, [simulations])\n\n  /**\n   * Handle title\n   * @param {srting} title Title\n   */\n  const handleTitle = async (title) => {\n    try {\n      // Update\n      await ProjectAPI.update({ id: project.id }, [\n        { key: 'title', value: title }\n      ])\n\n      // Mutate\n      mutateProject({\n        ...project,\n        title\n      })\n    } catch (err) {\n      Error(errors.updateError, err)\n    }\n  }\n\n  /**\n   * On menu click\n   * @param {Object} data Data { key }\n   */\n  const onMenuClick = ({ key }) => {\n    if (key === menuKeys.dashboard) handleDashboard()\n    else if (key === menuKeys.newSimulation) addSimulation()\n    else if (key.includes(menuKeys.simulation)) selectSimulation(key)\n  }\n\n  /**\n   * Handle dashboard\n   */\n  const handleDashboard = () => {\n    router.push({\n      pathname: '/dashboard',\n      query: { workspaceId }\n    })\n  }\n\n  /**\n   * Add simulation\n   */\n  const addSimulation = () => {\n    setSelectorVisible(true)\n  }\n\n  /**\n   * On selector ok\n   * @param {Object} scheme Simulation scheme\n   */\n  const onSelectorOk = async (scheme) => {\n    try {\n      // Add in dB\n      const simulation = await SimulationAPI.add(\n        { id: project.id },\n        { name: scheme.algorithm, scheme }\n      )\n\n      // Mutate\n      addOneSimulation(simulation)\n      mutateProject({\n        ...project,\n        simulations: [...(project.simulations || []), simulation]\n      })\n\n      // Close selector\n      setSelectorVisible(false)\n    } catch (err) {\n      Error(errors.addError, err)\n    }\n  }\n\n  /**\n   * On selector cancel\n   */\n  const onSelectorCancel = () => {\n    setSelectorVisible(false)\n  }\n\n  /**\n   * On simulation select\n   * @param {string} key Key\n   */\n  const selectSimulation = (key) => {\n    setCurrentType()\n\n    const descriptor = key.split('&')\n    const simulationId = descriptor[1]\n    const type = descriptor[2]\n\n    const simulation = simulations.find((s) => s.id === simulationId)\n\n    setCurrentSimulation(simulation)\n    setCurrentType(type)\n  }\n\n  /**\n   * On simulation close\n   */\n  const onSimulationClose = () => {\n    setCurrentSimulation()\n    setCurrentType()\n  }\n\n  // Simulations render build\n  const simulationsRender = simulations.map((s) => {\n    const categories = []\n    const configuration = s?.scheme?.configuration || {}\n    Object.keys(configuration).forEach((key) => {\n      if (key === 'part') return\n      const child = configuration[key]\n      if (!child.subMenus?.length) {\n        categories[child.index] = (\n          <Menu.Item\n            key={menuKeys.simulation + '&' + s.id + '&' + key}\n            icon={\n              child.error ? (\n                <CloseCircleOutlined style={{ color: 'red' }} />\n              ) : child.done ? (\n                <CheckCircleOutlined style={{ color: 'green' }} />\n              ) : (\n                <ExclamationCircleOutlined style={{ color: 'orange' }} />\n              )\n            }\n          >\n            {child.title}\n          </Menu.Item>\n        )\n      } else {\n        const subMenus = child.subMenus.map((subMenu, index) => {\n          return (\n            <Menu.Item\n              key={menuKeys.simulation + '&' + s.id + '&' + key + '&' + index}\n            >\n              {subMenu.title}\n            </Menu.Item>\n          )\n        })\n        categories[child.index] = (\n          <Menu.SubMenu\n            key={menuKeys.simulation + '&' + s.id + '&' + key}\n            icon={\n              child.done ? (\n                <CheckCircleOutlined style={{ color: 'green' }} />\n              ) : (\n                <ExclamationCircleOutlined style={{ color: 'orange' }} />\n              )\n            }\n            title={child.title}\n            onTitleClick={onMenuClick}\n          >\n            {subMenus}\n          </Menu.SubMenu>\n        )\n      }\n    })\n    return (\n      <Menu.SubMenu\n        key={menuKeys.simulation + s.id}\n        icon={<CalculatorOutlined />}\n        title={s.name}\n      >\n        <Menu.Item\n          key={menuKeys.simulation + '&' + s.id + '&about'}\n          icon={<CheckCircleOutlined style={{ color: 'green' }} />}\n        >\n          About\n        </Menu.Item>\n        {categories}\n      </Menu.SubMenu>\n    )\n  })\n\n  /**\n   * Render\n   */\n  return project === 'Unauthorized' ? (\n    <NotAuthorized />\n  ) : (\n    <Layout hasSider={true}>\n      <Layout.Sider theme=\"light\" className=\"Project-sider\">\n        <Menu onClick={onMenuClick}>\n          <Menu.Item key={menuKeys.dashboard} icon={<ArrowLeftOutlined />}>\n            Dashboard\n          </Menu.Item>\n        </Menu>\n        <Typography.Title\n          className=\"Project-title\"\n          level={4}\n          editable={{\n            onChange: handleTitle,\n            maxLength: 50\n          }}\n        >\n          {project.title}\n        </Typography.Title>\n\n        <Menu mode=\"inline\" onClick={onMenuClick}>\n          <Menu.Item key={menuKeys.newSimulation} icon={<PlusOutlined />}>\n            New simulation\n          </Menu.Item>\n          {simulationsRender}\n        </Menu>\n      </Layout.Sider>\n      <Layout.Content className=\"no-scroll relative\">\n        <Simulation.Selector\n          visible={selectorVisible}\n          onOk={onSelectorOk}\n          onCancel={onSelectorCancel}\n        />\n        <Simulation\n          project={{ id: project.id, simulations: project.simulations }}\n          simulation={currentSimulation}\n          type={currentType}\n          part={partSummary}\n          onClose={onSimulationClose}\n        />\n        <View simulation={currentSimulation} setPartSummary={setPartSummary} />\n      </Layout.Content>\n    </Layout>\n  )\n}\n\nexport default Project\n"]},"metadata":{},"sourceType":"module"}