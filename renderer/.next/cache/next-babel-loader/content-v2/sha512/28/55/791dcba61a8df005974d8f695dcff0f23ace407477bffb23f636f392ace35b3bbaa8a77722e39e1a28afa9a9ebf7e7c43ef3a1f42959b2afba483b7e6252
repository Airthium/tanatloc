{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _Row from \"antd/lib/row\";\nimport _Input from \"antd/lib/input\";\nimport _Col from \"antd/lib/col\";\nimport _Space from \"antd/lib/space\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _Upload from \"antd/lib/upload\";\nimport _Button from \"antd/lib/button\";\nimport _Avatar from \"antd/lib/avatar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _notification from \"antd/lib/notification\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { UploadOutlined, UserOutlined } from '@ant-design/icons';\nimport { Error } from '../../assets/notification';\nimport UserAPI from '../../../../src/api/user';\nimport AvatarAPI from '../../../../src/api/avatar';\n/**\n * Errors account/information\n * @memberof module:renderer/components/account\n */\n\nvar errors = {\n  updateError: 'Unable to update informations',\n  badFormat: 'Supported format: jpg, png',\n  badSize: 'Image must be smaller than 5MB'\n};\n/**\n * Information\n * @memberof module:renderer/components/account\n */\n\nvar Information = function Information() {\n  // State\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      uploading = _useState2[0],\n      setUploading = _useState2[1]; // Form\n\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0]; // Data\n\n\n  var _UserAPI$useUser = UserAPI.useUser(),\n      _UserAPI$useUser2 = _slicedToArray(_UserAPI$useUser, 2),\n      user = _UserAPI$useUser2[0],\n      mutateUser = _UserAPI$useUser2[1].mutateUser; // Layout\n\n\n  var avatarLayout = {\n    wrapperCol: {\n      offset: 0,\n      span: 4\n    }\n  };\n  var layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 8\n    }\n  };\n  var buttonLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 8\n    }\n  };\n  /**\n   * On finish\n   * @param {Object} data Data\n   */\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var toUpdate;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              toUpdate = []; // TODO disable for now\n              // if (data.username !== user.email)\n              //   toUpdate.push({ key: 'email', value: data.username })\n\n              if (data.firstname !== user.firstname) toUpdate.push({\n                key: 'firstname',\n                value: data.firstname\n              });\n              if (data.lastname !== user.lastname) toUpdate.push({\n                key: 'lastname',\n                value: data.lastname\n              });\n              if (data.email !== user.email) toUpdate.push({\n                key: 'email',\n                value: data.email\n              }); // Update\n\n              _context.next = 8;\n              return UserAPI.update(toUpdate);\n\n            case 8:\n              // Mutate user\n              mutateUser({\n                user: _objectSpread(_objectSpread({}, user), {}, {\n                  firstname: data.firstname,\n                  lastname: data.lastname,\n                  email: data.email\n                })\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              Error(errors.updateError, _context.t0);\n\n            case 14:\n              _context.prev = 14;\n              setLoading(false);\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11, 14, 17]]);\n    }));\n\n    return function onFinish(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\n   * On cancel\n   */\n\n\n  var onCancel = function onCancel() {\n    form.resetFields();\n  };\n  /**\n   * Before upload\n   * @param {File} file File\n   */\n\n\n  var beforeUpload = function beforeUpload(file) {\n    var goodFormat = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!goodFormat) _notification.error({\n      message: errors.badFormat\n    });\n    var goodSize = file.size / 1024 / 1024 < 5;\n    if (!goodSize) _notification.error({\n      message: errors.badSize\n    });\n    return goodFormat && goodSize;\n  };\n  /**\n   * On avatar change\n   * @param {Object} info Info\n   */\n\n\n  var onChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(info) {\n      var img;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (info.file.status === 'uploading') {\n                setUploading(true);\n              }\n\n              if (!(info.file.status === 'done')) {\n                _context2.next = 17;\n                break;\n              }\n\n              _context2.prev = 2;\n              _context2.next = 5;\n              return getBase64(info.file.originFileObj);\n\n            case 5:\n              img = _context2.sent;\n              _context2.next = 8;\n              return AvatarAPI.add({\n                name: info.file.name,\n                uid: info.file.uid,\n                data: img\n              });\n\n            case 8:\n              // Mutate user\n              mutateUser({\n                user: _objectSpread(_objectSpread({}, user), {}, {\n                  avatar: img\n                })\n              });\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](2);\n              Error(_context2.t0.message, _context2.t0);\n\n            case 14:\n              _context2.prev = 14;\n              setUploading(false);\n              return _context2.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 11, 14, 17]]);\n    }));\n\n    return function onChange(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\n   * Read base64 image\n   * @param {File} file File\n   */\n\n\n  var getBase64 = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(file) {\n      var reader, img;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              reader = new FileReader();\n              _context3.next = 3;\n              return new Promise(function (resolve) {\n                reader.addEventListener('load', function () {\n                  resolve(reader.result);\n                });\n                reader.readAsDataURL(file);\n              });\n\n            case 3:\n              img = _context3.sent;\n              return _context3.abrupt(\"return\", img);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getBase64(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsx(_Card, {\n    title: \"Contact Details\",\n    className: \"Vertical-gutter\",\n    children: /*#__PURE__*/_jsx(_Form, _objectSpread(_objectSpread({}, layout), {}, {\n      form: form,\n      initialValues: {\n        firstname: user.firstname,\n        lastname: user.lastname,\n        email: user.email\n      },\n      onFinish: onFinish,\n      name: \"personalForm\",\n      children: /*#__PURE__*/_jsxs(_Row, {\n        children: [/*#__PURE__*/_jsx(_Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsx(_Form.Item, _objectSpread(_objectSpread({}, avatarLayout), {}, {\n            children: /*#__PURE__*/_jsxs(_Space, {\n              direction: \"vertical\",\n              className: \"Account-avatar\",\n              children: [/*#__PURE__*/_jsx(_Avatar, {\n                size: 128,\n                src: user.avatar && Buffer.from(user.avatar).toString(),\n                icon: /*#__PURE__*/_jsx(UserOutlined, {})\n              }), /*#__PURE__*/_jsx(_Upload, {\n                accept: '.jpg,.png',\n                showUploadList: false,\n                beforeUpload: beforeUpload,\n                onChange: onChange,\n                children: /*#__PURE__*/_jsx(_Button, {\n                  size: \"small\",\n                  icon: /*#__PURE__*/_jsx(UploadOutlined, {}),\n                  loading: uploading,\n                  children: \"Upload new\"\n                })\n              })]\n            })\n          }))\n        }), /*#__PURE__*/_jsxs(_Col, {\n          span: 20,\n          children: [/*#__PURE__*/_jsx(_Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            children: /*#__PURE__*/_jsx(_Input, {})\n          }), /*#__PURE__*/_jsx(_Form.Item, {\n            label: \"First name\",\n            name: \"firstname\",\n            children: /*#__PURE__*/_jsx(_Input, {})\n          }), /*#__PURE__*/_jsx(_Form.Item, {\n            label: \"Last name\",\n            name: \"lastname\",\n            children: /*#__PURE__*/_jsx(_Input, {})\n          }), /*#__PURE__*/_jsx(_Form.Item, _objectSpread(_objectSpread({}, buttonLayout), {}, {\n            style: {\n              marginBottom: 'unset'\n            },\n            children: /*#__PURE__*/_jsxs(_Space, {\n              children: [/*#__PURE__*/_jsx(_Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                loading: loading,\n                children: \"Apply changes\"\n              }), /*#__PURE__*/_jsx(_Button, {\n                type: \"text\",\n                onClick: onCancel,\n                children: \"Cancel\"\n              })]\n            })\n          }))]\n        })]\n      })\n    }))\n  });\n};\n\nexport default Information;","map":null,"metadata":{},"sourceType":"module"}