{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Modal from \"antd/lib/modal\";\nimport _Layout from \"antd/lib/layout\";\nimport _Menu from \"antd/lib/menu\";\nimport _List from \"antd/lib/list\";\nimport _Collapse from \"antd/lib/collapse\";\nimport _Space from \"antd/lib/space\";\nimport _Typography from \"antd/lib/typography\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/materials/database/index.js\";\nimport { useState } from 'react';\nimport { DatabaseOutlined, SelectOutlined } from '@ant-design/icons';\nconst dataBase = {\n  metal: {\n    label: 'Metal',\n    children: [{\n      label: 'Steel',\n      children: [{\n        label: \"Young's modulus\",\n        symbol: 'E',\n        value: 2.1e9\n      }, {\n        label: \"Poisson's ratio\",\n        symbol: 'Nu',\n        value: 0.3\n      }]\n    }]\n  }\n};\n/**\n * Material database\n */\n\nconst DataBase = ({\n  onSelect\n}) => {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState();\n  const {\n    0: current,\n    1: setCurrent\n  } = useState();\n\n  const onMenuClick = ({\n    key\n  }) => {\n    const materials = dataBase[key].children.map(material => {\n      return /*#__PURE__*/_jsxDEV(_List.Item, {\n        children: /*#__PURE__*/_jsxDEV(_Collapse, {\n          children: /*#__PURE__*/_jsxDEV(_Collapse.Panel, {\n            header: material.label,\n            extra: /*#__PURE__*/_jsxDEV(_Button, {\n              icon: /*#__PURE__*/_jsxDEV(SelectOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this),\n              onClick: () => onMaterialSelect(material)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(_Space, {\n              direction: \"vertical\",\n              children: material.children.map(value => {\n                return /*#__PURE__*/_jsxDEV(_Typography.Text, {\n                  children: [value.label, \": \", value.symbol, \" = \", value.value]\n                }, value.label, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, material.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    });\n    setCurrent( /*#__PURE__*/_jsxDEV(_List, {\n      itemLayout: \"vertical\",\n      children: materials\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this));\n  };\n\n  const onMaterialSelect = material => {\n    onSelect(material);\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      icon: /*#__PURE__*/_jsxDEV(DatabaseOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this),\n      onClick: () => setVisible(true),\n      children: \"Material database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n      visible: visible,\n      title: \"Material database\",\n      onCancel: () => setVisible(false),\n      okButtonProps: {\n        style: {\n          display: 'none'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(_Layout, {\n        children: [/*#__PURE__*/_jsxDEV(_Layout.Sider, {\n          theme: \"light\",\n          children: /*#__PURE__*/_jsxDEV(_Menu, {\n            mode: \"inline\",\n            onClick: onMenuClick,\n            children: Object.keys(dataBase).map(key => {\n              return /*#__PURE__*/_jsxDEV(_Menu.Item, {\n                children: dataBase[key].label\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Layout.Content, {\n          children: current\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default DataBase;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/materials/database/index.js"],"names":["useState","DatabaseOutlined","SelectOutlined","dataBase","metal","label","children","symbol","value","DataBase","onSelect","visible","setVisible","current","setCurrent","onMenuClick","key","materials","map","material","onMaterialSelect","style","display","Object","keys"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport {\n  Button,\n  Collapse,\n  Layout,\n  List,\n  Menu,\n  Modal,\n  Space,\n  Typography\n} from 'antd'\nimport { DatabaseOutlined, SelectOutlined } from '@ant-design/icons'\n\nconst dataBase = {\n  metal: {\n    label: 'Metal',\n    children: [\n      {\n        label: 'Steel',\n        children: [\n          {\n            label: \"Young's modulus\",\n            symbol: 'E',\n            value: 2.1e9\n          },\n          {\n            label: \"Poisson's ratio\",\n            symbol: 'Nu',\n            value: 0.3\n          }\n        ]\n      }\n    ]\n  }\n}\n\n/**\n * Material database\n */\nconst DataBase = ({ onSelect }) => {\n  const [visible, setVisible] = useState()\n  const [current, setCurrent] = useState()\n\n  const onMenuClick = ({ key }) => {\n    const materials = dataBase[key].children.map((material) => {\n      return (\n        <List.Item key={material.label}>\n          <Collapse>\n            <Collapse.Panel\n              header={material.label}\n              extra={\n                <Button\n                  icon={<SelectOutlined />}\n                  onClick={() => onMaterialSelect(material)}\n                />\n              }\n            >\n              <Space direction=\"vertical\">\n                {material.children.map((value) => {\n                  return (\n                    <Typography.Text key={value.label}>\n                      {value.label}: {value.symbol} = {value.value}\n                    </Typography.Text>\n                  )\n                })}\n              </Space>\n            </Collapse.Panel>\n          </Collapse>\n        </List.Item>\n      )\n    })\n\n    setCurrent(<List itemLayout=\"vertical\">{materials}</List>)\n  }\n\n  const onMaterialSelect = (material) => {\n    onSelect(material)\n    setVisible(false)\n  }\n\n  return (\n    <>\n      <Button icon={<DatabaseOutlined />} onClick={() => setVisible(true)}>\n        Material database\n      </Button>\n      <Modal\n        visible={visible}\n        title=\"Material database\"\n        onCancel={() => setVisible(false)}\n        okButtonProps={{ style: { display: 'none' } }}\n      >\n        <Layout>\n          <Layout.Sider theme=\"light\">\n            <Menu mode=\"inline\" onClick={onMenuClick}>\n              {Object.keys(dataBase).map((key) => {\n                return <Menu.Item key={key}>{dataBase[key].label}</Menu.Item>\n              })}\n            </Menu>\n          </Layout.Sider>\n          <Layout.Content>{current}</Layout.Content>\n        </Layout>\n      </Modal>\n    </>\n  )\n}\n\nexport default DataBase\n"]},"metadata":{},"sourceType":"module"}