{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Button from \"antd/lib/button\";\nimport _Modal from \"antd/lib/modal\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport _Radio from \"antd/lib/radio\";\nimport _Table from \"antd/lib/table\";\nimport _Space from \"antd/lib/space\";\nimport _Typography from \"antd/lib/typography\";\nimport _Avatar from \"antd/lib/avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/plugin/rescale/renderer/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { SelectOutlined } from '@ant-design/icons';\n\nvar Rescale = function Rescale(_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  // State\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(1),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var _useState3 = useState(),\n      selected = _useState3[0],\n      setSelected = _useState3[1];\n\n  var _useState4 = useState(true),\n      lowPriority = _useState4[0],\n      setLowPriority = _useState4[1];\n\n  var _useState5 = useState(),\n      coresError = _useState5[0],\n      setCoresError = _useState5[1];\n\n  var _useState6 = useState(),\n      numberOfCores = _useState6[0],\n      setNumberOfCores = _useState6[1]; // Data\n\n\n  data.coreTypes.forEach(function (d) {\n    d.key = d.name;\n  });\n  var columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: function render(text, record) {\n      return /*#__PURE__*/_jsxDEV(_Space, {\n        children: /*#__PURE__*/_jsxDEV(_Space, {\n          direction: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(_Space, {\n            children: [/*#__PURE__*/_jsxDEV(_Avatar, {\n              style: {\n                marginRight: '-20px',\n                background: 'linear-gradient(to right,' + record.color + ', rgba(255, 255, 255, 0))',\n                opacity: 0.5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(_Typography.Text, {\n              strong: true,\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, _this), record.processorInfo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this);\n    }\n  }, {\n    title: 'Cores',\n    dataIndex: 'cores',\n    key: 'cores',\n    render: function render(cores) {\n      return cores.join(', ');\n    }\n  }, {\n    title: 'Memory',\n    dataIndex: 'memory',\n    key: 'memory',\n    render: function render(text) {\n      return text / 1000 + ' Go';\n    }\n  }, {\n    title: 'Pro Price',\n    dataIndex: 'price',\n    key: 'price'\n  }, {\n    title: 'Price',\n    dataIndex: 'lowPriorityPrice',\n    key: 'lowPriorityPrice'\n  }];\n  /**\n   * On row change\n   * @param {string} selectedRowKeys key\n   * @param {Object} selectedRows Seleced\n   */\n\n  var onRowChange = function onRowChange(selectedRowKeys, selectedRows) {\n    setSelected(selectedRows[0]);\n  };\n  /**\n   * On ok\n   */\n\n\n  var onOk = function onOk() {\n    if (step === 1) {\n      setNumberOfCores(selected.cores[0]);\n      setStep(step + 1);\n    }\n  };\n  /**\n   * On cores change\n   * @param {number} value Value\n   */\n\n\n  var onCoresChange = function onCoresChange(value) {\n    if (!selected.cores.includes(value)) {\n      setCoresError(true);\n      setNumberOfCores(value);\n    } else {\n      setCoresError(false);\n      setNumberOfCores(value);\n    }\n  };\n\n  var onCoresStep = function onCoresStep(value, info) {\n    if (info.type === 'up') {\n      var sorted = selected.cores.filter(function (c) {\n        return c >= value;\n      });\n      if (sorted.length) onCoresChange(sorted[0]);else {\n        onCoresChange(numberOfCores + selected.cores[selected.cores.length - 1]);\n      }\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Modal, {\n      title: \"Rescale plugin\",\n      visible: visible,\n      onCancel: function onCancel() {\n        return setVisible(false);\n      },\n      okText: \"Next\",\n      okButtonProps: {\n        disabled: step === 1 && !selected\n      },\n      onOk: onOk,\n      width: step === 1 && 'auto',\n      children: [step === 1 && /*#__PURE__*/_jsxDEV(_Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n          strong: true,\n          children: \"Select a coretype:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(_Table, {\n          dataSource: data.coreTypes,\n          columns: columns,\n          rowSelection: {\n            type: 'radio',\n            onChange: onRowChange\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, _this), step === 2 && /*#__PURE__*/_jsxDEV(_Space, {\n        children: [/*#__PURE__*/_jsxDEV(_Space, {\n          direction: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(_Radio.Group, {\n            onChange: function onChange(e) {\n              return setLowPriority(e.target.value);\n            },\n            value: lowPriority,\n            children: [/*#__PURE__*/_jsxDEV(_Radio, {\n              value: false,\n              children: \"On-Demand Pro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(_Radio, {\n              value: true,\n              children: \"On-Demand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(_Typography.Text, {\n            strong: true,\n            children: \"Number of cores:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(_InputNumber, {\n            min: selected.cores[0],\n            max: 1000,\n            value: numberOfCores,\n            onChange: onCoresChange,\n            onStep: onCoresStep,\n            style: {\n              border: coresError && '1px solid red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(_Space, {\n          direction: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n            strong: true,\n            children: \"Informations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(_Typography.Text, {\n            children: [selected.name, \" Core (x\", numberOfCores, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(_Typography.Text, {\n            children: [\"Price:\", ' ', numberOfCores * (lowPriority ? selected.lowPriorityPrice : selected.price), ' ', \"/ hour\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Space, {\n      children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n        children: [\"More information on\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.rescale.com/infrastructure/\",\n          target: \"_blank\",\n          children: \"Rescale website\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, _this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n        onClick: function onClick() {\n          return setVisible(true);\n        },\n        icon: /*#__PURE__*/_jsxDEV(SelectOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 56\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Rescale, \"OM0rzrZVo6xT5ArjRLbtq7wBRtk=\");\n\n_c = Rescale;\nexport default Rescale;\n{\n  /* <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Rescale\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/plugin/rescale/renderer/index.js"],"names":["useState","SelectOutlined","Rescale","data","visible","setVisible","step","setStep","selected","setSelected","lowPriority","setLowPriority","coresError","setCoresError","numberOfCores","setNumberOfCores","coreTypes","forEach","d","key","name","columns","title","dataIndex","render","text","record","marginRight","background","color","opacity","processorInfo","cores","join","onRowChange","selectedRowKeys","selectedRows","onOk","onCoresChange","value","includes","onCoresStep","info","type","sorted","filter","c","length","disabled","onChange","e","target","border","lowPriorityPrice","price"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport {\n  Avatar,\n  Button,\n  InputNumber,\n  Modal,\n  Radio,\n  Space,\n  Table,\n  Typography\n} from 'antd'\nimport { SelectOutlined } from '@ant-design/icons'\n\nconst Rescale = ({ data }) => {\n  // State\n  const [visible, setVisible] = useState(false)\n  const [step, setStep] = useState(1)\n  const [selected, setSelected] = useState()\n  const [lowPriority, setLowPriority] = useState(true)\n  const [coresError, setCoresError] = useState()\n  const [numberOfCores, setNumberOfCores] = useState()\n\n  // Data\n  data.coreTypes.forEach((d) => {\n    d.key = d.name\n  })\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text, record) => (\n        <Space>\n          <Space direction=\"vertical\">\n            <Space>\n              <Avatar\n                style={{\n                  marginRight: '-20px',\n                  background:\n                    'linear-gradient(to right,' +\n                    record.color +\n                    ', rgba(255, 255, 255, 0))',\n                  opacity: 0.5\n                }}\n              />\n              <Typography.Text strong={true}>{text}</Typography.Text>\n            </Space>\n            {record.processorInfo}\n          </Space>\n        </Space>\n      )\n    },\n    {\n      title: 'Cores',\n      dataIndex: 'cores',\n      key: 'cores',\n      render: (cores) => cores.join(', ')\n    },\n    {\n      title: 'Memory',\n      dataIndex: 'memory',\n      key: 'memory',\n      render: (text) => text / 1000 + ' Go'\n    },\n    {\n      title: 'Pro Price',\n      dataIndex: 'price',\n      key: 'price'\n    },\n    {\n      title: 'Price',\n      dataIndex: 'lowPriorityPrice',\n      key: 'lowPriorityPrice'\n    }\n  ]\n\n  /**\n   * On row change\n   * @param {string} selectedRowKeys key\n   * @param {Object} selectedRows Seleced\n   */\n  const onRowChange = (selectedRowKeys, selectedRows) => {\n    setSelected(selectedRows[0])\n  }\n\n  /**\n   * On ok\n   */\n  const onOk = () => {\n    if (step === 1) {\n      setNumberOfCores(selected.cores[0])\n      setStep(step + 1)\n    }\n  }\n\n  /**\n   * On cores change\n   * @param {number} value Value\n   */\n  const onCoresChange = (value) => {\n    if (!selected.cores.includes(value)) {\n      setCoresError(true)\n      setNumberOfCores(value)\n    } else {\n      setCoresError(false)\n      setNumberOfCores(value)\n    }\n  }\n\n  const onCoresStep = (value, info) => {\n    if (info.type === 'up') {\n      const sorted = selected.cores.filter((c) => c >= value)\n\n      if (sorted.length) onCoresChange(sorted[0])\n      else {\n        onCoresChange(numberOfCores + selected.cores[selected.cores.length - 1])\n      }\n    } else {\n    }\n  }\n\n  return (\n    <>\n      <Modal\n        title=\"Rescale plugin\"\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        okText=\"Next\"\n        okButtonProps={{\n          disabled: step === 1 && !selected\n        }}\n        onOk={onOk}\n        width={step === 1 && 'auto'}\n      >\n        {step === 1 && (\n          <Space direction=\"vertical\">\n            <Typography.Text strong={true}>Select a coretype:</Typography.Text>\n            <Table\n              dataSource={data.coreTypes}\n              columns={columns}\n              rowSelection={{\n                type: 'radio',\n                onChange: onRowChange\n              }}\n            />\n          </Space>\n        )}\n        {step === 2 && (\n          <Space>\n            <Space direction=\"vertical\">\n              <Radio.Group\n                onChange={(e) => setLowPriority(e.target.value)}\n                value={lowPriority}\n              >\n                <Radio value={false}>On-Demand Pro</Radio>\n                <Radio value={true}>On-Demand</Radio>\n              </Radio.Group>\n              <Typography.Text strong={true}>Number of cores:</Typography.Text>\n              <InputNumber\n                min={selected.cores[0]}\n                max={1000}\n                value={numberOfCores}\n                onChange={onCoresChange}\n                onStep={onCoresStep}\n                style={{ border: coresError && '1px solid red' }}\n              />\n            </Space>\n            <Space direction=\"vertical\">\n              <Typography.Text strong={true}>Informations:</Typography.Text>\n              <Typography.Text>\n                {selected.name} Core (x{numberOfCores})\n              </Typography.Text>\n              <Typography.Text>\n                Price:{' '}\n                {numberOfCores *\n                  (lowPriority\n                    ? selected.lowPriorityPrice\n                    : selected.price)}{' '}\n                / hour\n              </Typography.Text>\n            </Space>\n          </Space>\n        )}\n      </Modal>\n      <Space>\n        <Typography.Text>\n          More information on{' '}\n          <a href=\"https://www.rescale.com/infrastructure/\" target=\"_blank\">\n            Rescale website\n          </a>\n          .\n        </Typography.Text>\n        <Button onClick={() => setVisible(true)} icon={<SelectOutlined />} />\n      </Space>\n    </>\n  )\n}\n\nexport default Rescale\n\n{\n  /* <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space> */\n}\n"]},"metadata":{},"sourceType":"module"}