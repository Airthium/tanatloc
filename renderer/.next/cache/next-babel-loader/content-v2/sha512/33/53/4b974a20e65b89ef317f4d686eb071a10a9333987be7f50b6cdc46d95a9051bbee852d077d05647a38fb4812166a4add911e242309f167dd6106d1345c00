{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _Row from \"antd/lib/row\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _Space from \"antd/lib/space\";\nimport _Button from \"antd/lib/button\";\nimport _Form from \"antd/lib/form\";\nimport _Input from \"antd/lib/input\";\nimport _Col from \"antd/lib/col\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _notification from \"antd/lib/notification\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { Error } from '../../assets/notification';\nimport UserAPI from '../../../../src/api/user';\n/**\n * Errors account/password\n * @memeberof module:renderer/components/account\n */\n\nvar errors = {\n  updateError: 'Unable to update the password',\n  mismatch: 'Password and confirmation mismatch',\n  invalid: 'Current password not valid'\n};\n/**\n * Password\n * @memeberof module:renderer/components/account\n */\n\nvar Password = function Password() {\n  // State\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1]; // Data\n\n\n  var _UserAPI$useUser = UserAPI.useUser(),\n      _UserAPI$useUser2 = _slicedToArray(_UserAPI$useUser, 1),\n      user = _UserAPI$useUser2[0]; // Layout\n\n\n  var layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 8\n    }\n  };\n  var buttonLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 8\n    }\n  };\n  /**\n   * On finish\n   * @param {Object} data Data\n   */\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var current;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return UserAPI.check({\n                username: user.email,\n                password: data.password\n              });\n\n            case 4:\n              current = _context.sent;\n\n              if (!current.valid) {\n                _context.next = 14;\n                break;\n              }\n\n              if (!(data.newPassword === data.passwordConfirm)) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 9;\n              return UserAPI.update([{\n                type: 'crypt',\n                key: 'password',\n                value: data.newPassword\n              }]);\n\n            case 9:\n              _context.next = 12;\n              break;\n\n            case 11:\n              _notification.error({\n                message: errors.mismatch\n              });\n\n            case 12:\n              _context.next = 15;\n              break;\n\n            case 14:\n              notificaton.error({\n                message: errors.invalid\n              });\n\n            case 15:\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](1);\n              Error(errors.updateError, _context.t0);\n\n            case 20:\n              _context.prev = 20;\n              setLoading(false);\n              return _context.finish(20);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 17, 20, 23]]);\n    }));\n\n    return function onFinish(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsx(_Card, {\n    title: \"Your Password\",\n    children: /*#__PURE__*/_jsxs(_Row, {\n      children: [/*#__PURE__*/_jsx(_Col, {\n        span: 4\n      }), /*#__PURE__*/_jsx(_Col, {\n        span: 20,\n        children: /*#__PURE__*/_jsxs(_Form, _objectSpread(_objectSpread({}, layout), {}, {\n          initialValues: {\n            password: '******',\n            newPassword: '******',\n            passwordConfirm: '******'\n          },\n          onFinish: onFinish,\n          name: \"passwordForm\",\n          children: [/*#__PURE__*/_jsx(_Form.Item, {\n            label: \"Current password\",\n            name: \"password\",\n            children: /*#__PURE__*/_jsx(_Input.Password, {})\n          }), /*#__PURE__*/_jsx(_Form.Item, {\n            label: \"New password\",\n            name: \"newPassword\",\n            children: /*#__PURE__*/_jsx(_Input.Password, {})\n          }), /*#__PURE__*/_jsx(_Form.Item, {\n            label: \"Password confirmation\",\n            name: \"passwordConfirm\",\n            children: /*#__PURE__*/_jsx(_Input.Password, {})\n          }), /*#__PURE__*/_jsx(_Form.Item, _objectSpread(_objectSpread({}, buttonLayout), {}, {\n            style: {\n              marginBottom: 'unset'\n            },\n            children: /*#__PURE__*/_jsx(_Space, {\n              children: /*#__PURE__*/_jsx(_Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                loading: loading,\n                children: \"Modify password\"\n              })\n            })\n          }))]\n        }))\n      })]\n    })\n  });\n};\n\nexport default Password;","map":null,"metadata":{},"sourceType":"module"}