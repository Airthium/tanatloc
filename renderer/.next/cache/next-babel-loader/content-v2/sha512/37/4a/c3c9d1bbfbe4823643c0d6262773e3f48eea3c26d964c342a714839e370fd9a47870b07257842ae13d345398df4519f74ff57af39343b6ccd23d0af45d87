{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Button from \"antd/lib/button\";\nimport _Modal from \"antd/lib/modal\";\nimport _Table from \"antd/lib/table\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _Space from \"antd/lib/space\";\nimport _Typography from \"antd/lib/typography\";\nimport _Avatar from \"antd/lib/avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/plugin/rescale/renderer/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { SelectOutlined } from '@ant-design/icons';\n\nvar Rescale = function Rescale(_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  // State\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(),\n      selected = _useState2[0],\n      setSelected = _useState2[1]; // Data\n\n\n  data.coreTypes.forEach(function (d) {\n    d.key = d.name;\n  });\n  var columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: function render(text, record) {\n      return /*#__PURE__*/_jsxDEV(_Space, {\n        children: /*#__PURE__*/_jsxDEV(_Space, {\n          direction: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(_Space, {\n            children: [/*#__PURE__*/_jsxDEV(_Avatar, {\n              style: {\n                marginRight: '-20px',\n                background: 'linear-gradient(to right,' + record.color + ', rgba(255, 255, 255, 0))',\n                opacity: 0.5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(_Typography.Text, {\n              strong: true,\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, _this), record.processorInfo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, _this);\n    }\n  }, {\n    title: 'Cores',\n    dataIndex: 'cores',\n    key: 'cores',\n    render: function render(cores) {\n      return cores.join(', ');\n    }\n  }, {\n    title: 'Pro Price',\n    dataIndex: 'price',\n    key: 'price'\n  }, {\n    title: 'Price',\n    dataIndex: 'lowPriorityPrice',\n    key: 'lowPriorityPrice'\n  }];\n  var rowSelection = {\n    onChange: function onChange(selectedRowKeys, selectedRows) {\n      console.log(selectedRows);\n      setSelected(selectedRows[0]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Modal, {\n      title: \"Rescale plugin\",\n      visible: visible,\n      onCancel: function onCancel() {\n        return setVisible(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n        strong: true,\n        children: \"Select a coretype:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(_Table, {\n        dataSource: data.coreTypes,\n        columns: columns,\n        rowSelection: _objectSpread({\n          type: 'radio'\n        }, rowSelection)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Space, {\n      children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n        children: [\"More information on\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.rescale.com/infrastructure/\",\n          target: \"_blank\",\n          children: \"Rescale website\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n        onClick: function onClick() {\n          return setVisible(true);\n        },\n        icon: /*#__PURE__*/_jsxDEV(SelectOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 56\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Rescale, \"b6EViuyQoxxAUwQGHbQp0zhyK1M=\");\n\n_c = Rescale;\nexport default Rescale;\n{\n  /* <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Rescale\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/plugin/rescale/renderer/index.js"],"names":["useState","SelectOutlined","Rescale","data","visible","setVisible","selected","setSelected","coreTypes","forEach","d","key","name","columns","title","dataIndex","render","text","record","marginRight","background","color","opacity","processorInfo","cores","join","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","type"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { Avatar, Button, Divider, Modal, Space, Table, Typography } from 'antd'\nimport { SelectOutlined } from '@ant-design/icons'\n\nconst Rescale = ({ data }) => {\n  // State\n  const [visible, setVisible] = useState(false)\n  const [selected, setSelected] = useState()\n\n  // Data\n  data.coreTypes.forEach((d) => {\n    d.key = d.name\n  })\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text, record) => (\n        <Space>\n          <Space direction=\"vertical\">\n            <Space>\n              <Avatar\n                style={{\n                  marginRight: '-20px',\n                  background:\n                    'linear-gradient(to right,' +\n                    record.color +\n                    ', rgba(255, 255, 255, 0))',\n                  opacity: 0.5\n                }}\n              />\n              <Typography.Text strong={true}>{text}</Typography.Text>\n            </Space>\n            {record.processorInfo}\n          </Space>\n        </Space>\n      )\n    },\n    {\n      title: 'Cores',\n      dataIndex: 'cores',\n      key: 'cores',\n      render: (cores) => cores.join(', ')\n    },\n    {\n      title: 'Pro Price',\n      dataIndex: 'price',\n      key: 'price'\n    },\n    {\n      title: 'Price',\n      dataIndex: 'lowPriorityPrice',\n      key: 'lowPriorityPrice'\n    }\n  ]\n\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      console.log(selectedRows)\n      setSelected(selectedRows[0])\n    }\n  }\n\n  return (\n    <>\n      <Modal\n        title=\"Rescale plugin\"\n        visible={visible}\n        onCancel={() => setVisible(false)}\n      >\n        <Typography.Text strong={true}>Select a coretype:</Typography.Text>\n        <Table\n          dataSource={data.coreTypes}\n          columns={columns}\n          rowSelection={{\n            type: 'radio',\n            ...rowSelection\n          }}\n        />\n      </Modal>\n      <Space>\n        <Typography.Text>\n          More information on{' '}\n          <a href=\"https://www.rescale.com/infrastructure/\" target=\"_blank\">\n            Rescale website\n          </a>\n          .\n        </Typography.Text>\n        <Button onClick={() => setVisible(true)} icon={<SelectOutlined />} />\n      </Space>\n    </>\n  )\n}\n\nexport default Rescale\n\n{\n  /* <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space> */\n}\n"]},"metadata":{},"sourceType":"module"}