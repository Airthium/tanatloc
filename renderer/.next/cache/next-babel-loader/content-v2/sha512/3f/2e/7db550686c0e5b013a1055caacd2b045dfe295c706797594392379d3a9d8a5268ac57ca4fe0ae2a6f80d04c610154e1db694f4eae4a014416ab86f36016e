{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/account/hpc/plugin.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { Error } from '../../assets/notification';\nimport PluginForm from './pluginForm';\nimport List from './list';\nimport PluginAPI from '../../../../src/api/plugin';\n/**\n * Errors hpc/plugin\n */\n\nvar errors = {\n  updateError: 'Unable to update plugins'\n};\n/**\n * Plugin\n * @param {Object} props Props\n */\n\nvar Plugin = function Plugin(_ref) {\n  _s();\n\n  var plugin = _ref.plugin;\n\n  // State\n  var _useState = useState(false),\n      add = _useState[0],\n      setAdd = _useState[1]; // Data\n\n\n  var _PluginAPI$usePlugins = PluginAPI.usePlugins(),\n      _PluginAPI$usePlugins2 = _slicedToArray(_PluginAPI$usePlugins, 2),\n      addOnePlugin = _PluginAPI$usePlugins2[1].addOnePlugin;\n  /**\n   * On finish\n   * @param {Object} values Values\n   */\n\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var newPlugin;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              // New plugin\n              newPlugin = _objectSpread({}, plugin); // Set values\n\n              Object.keys(values).forEach(function (key) {\n                newPlugin.configuration[key].value = values[key];\n              }); // Remove logo\n\n              newPlugin.logo && delete newPlugin.logo; // Remove renderer\n\n              newPlugin.renderer && delete newPlugin.renderer; // Set uuid\n\n              newPlugin.uuid = uuid(); // API\n\n              _context.next = 8;\n              return PluginAPI.add(newPlugin);\n\n            case 8:\n              // Mutate\n              addOnePlugin(newPlugin); // Finish\n\n              setAdd(false);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              Error(errors.updateError, _context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [add ? /*#__PURE__*/_jsxDEV(PluginForm, {\n      plugin: plugin,\n      onFinish: onFinish,\n      onCancel: function onCancel() {\n        return setAdd(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"primary\",\n      onClick: function onClick() {\n        return setAdd(true);\n      },\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(List, {\n      plugin: plugin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Plugin, \"xjSbpyoE6JhCMUYSvo5/etwi8l4=\", false, function () {\n  return [PluginAPI.usePlugins];\n});\n\n_c = Plugin;\nexport default Plugin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plugin\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/account/hpc/plugin.js"],"names":["useState","v4","uuid","Error","PluginForm","List","PluginAPI","errors","updateError","Plugin","plugin","add","setAdd","usePlugins","addOnePlugin","onFinish","values","newPlugin","Object","keys","forEach","key","configuration","value","logo","renderer"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,SAASC,KAAT,QAAsB,2BAAtB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA;AACA;AACA;;AACA,IAAMC,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE;AADA,CAAf;AAIA;AACA;AACA;AACA;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAC7B;AAD6B,kBAEPV,QAAQ,CAAC,KAAD,CAFD;AAAA,MAEtBW,GAFsB;AAAA,MAEjBC,MAFiB,iBAI7B;;;AAJ6B,8BAKAN,SAAS,CAACO,UAAV,EALA;AAAA;AAAA,MAKlBC,YALkB,6BAKlBA,YALkB;AAO7B;AACF;AACA;AACA;;;AACE,MAAMC,QAAQ;AAAA,yEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEb;AACMC,cAAAA,SAHO,qBAGUP,MAHV,GAKb;;AACAQ,cAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAACC,GAAD,EAAS;AACnCJ,gBAAAA,SAAS,CAACK,aAAV,CAAwBD,GAAxB,EAA6BE,KAA7B,GAAqCP,MAAM,CAACK,GAAD,CAA3C;AACD,eAFD,EANa,CAUb;;AACAJ,cAAAA,SAAS,CAACO,IAAV,IAAkB,OAAOP,SAAS,CAACO,IAAnC,CAXa,CAab;;AACAP,cAAAA,SAAS,CAACQ,QAAV,IAAsB,OAAOR,SAAS,CAACQ,QAAvC,CAda,CAgBb;;AACAR,cAAAA,SAAS,CAACf,IAAV,GAAiBA,IAAI,EAArB,CAjBa,CAmBb;;AAnBa;AAAA,qBAoBPI,SAAS,CAACK,GAAV,CAAcM,SAAd,CApBO;;AAAA;AAsBb;AACAH,cAAAA,YAAY,CAACG,SAAD,CAAZ,CAvBa,CAyBb;;AACAL,cAAAA,MAAM,CAAC,KAAD,CAAN;AA1Ba;AAAA;;AAAA;AAAA;AAAA;AA4BbT,cAAAA,KAAK,CAACI,MAAM,CAACC,WAAR,cAAL;;AA5Ba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARO,QAAQ;AAAA;AAAA;AAAA,KAAd;AAgCA;AACF;AACA;;;AACE,sBACE;AAAA,eACGJ,GAAG,gBACF,QAAC,UAAD;AACE,MAAA,MAAM,EAAED,MADV;AAEE,MAAA,QAAQ,EAAEK,QAFZ;AAGE,MAAA,QAAQ,EAAE;AAAA,eAAMH,MAAM,CAAC,KAAD,CAAZ;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA,aADE,gBAOF;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE;AAAA,eAAMA,MAAM,CAAC,IAAD,CAAZ;AAAA,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARJ,eAYE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,aAZF;AAAA,kBADF;AAgBD,CA9DD;;GAAMD,M;UAKyBH,SAAS,CAACO,U;;;KALnCJ,M;AAgEN,eAAeA,MAAf","sourcesContent":["import { useState } from 'react'\nimport { Button } from 'antd'\nimport { v4 as uuid } from 'uuid'\n\nimport { Error } from '../../assets/notification'\n\nimport PluginForm from './pluginForm'\nimport List from './list'\n\nimport PluginAPI from '../../../../src/api/plugin'\n\n/**\n * Errors hpc/plugin\n */\nconst errors = {\n  updateError: 'Unable to update plugins'\n}\n\n/**\n * Plugin\n * @param {Object} props Props\n */\nconst Plugin = ({ plugin }) => {\n  // State\n  const [add, setAdd] = useState(false)\n\n  // Data\n  const [, { addOnePlugin }] = PluginAPI.usePlugins()\n\n  /**\n   * On finish\n   * @param {Object} values Values\n   */\n  const onFinish = async (values) => {\n    try {\n      // New plugin\n      const newPlugin = { ...plugin }\n\n      // Set values\n      Object.keys(values).forEach((key) => {\n        newPlugin.configuration[key].value = values[key]\n      })\n\n      // Remove logo\n      newPlugin.logo && delete newPlugin.logo\n\n      // Remove renderer\n      newPlugin.renderer && delete newPlugin.renderer\n\n      // Set uuid\n      newPlugin.uuid = uuid()\n\n      // API\n      await PluginAPI.add(newPlugin)\n\n      // Mutate\n      addOnePlugin(newPlugin)\n\n      // Finish\n      setAdd(false)\n    } catch (err) {\n      Error(errors.updateError, err)\n    }\n  }\n\n  /**\n   * Render\n   */\n  return (\n    <>\n      {add ? (\n        <PluginForm\n          plugin={plugin}\n          onFinish={onFinish}\n          onCancel={() => setAdd(false)}\n        />\n      ) : (\n        <Button type=\"primary\" onClick={() => setAdd(true)}>\n          Add\n        </Button>\n      )}\n      <List plugin={plugin} />\n    </>\n  )\n}\n\nexport default Plugin\n"]},"metadata":{},"sourceType":"module"}