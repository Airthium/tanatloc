{"ast":null,"code":"import _Table from \"antd/lib/table\";\nimport _Typography from \"antd/lib/typography\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Avatar from \"antd/lib/avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/plugin/rescale/renderer/index.js\",\n    _this = this;\n\nvar Rescale = function Rescale(_ref) {\n  var data = _ref.data;\n  console.log(data.coreTypes);\n  var columns = [// {\n  //   title: '',\n  //   dataIndex: 'color',\n  //   key: 'color',\n  //   render: (color) => <Avatar style={{ backgroundColor: color }} />\n  // },\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: function render(text, record, index) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(_Avatar, {\n          style: {\n            marginRight: '10px',\n            backgroundColor: record.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, _this), text]\n      }, void 0, true);\n    }\n  }, {\n    title: 'Pro Price',\n    dataIndex: 'price',\n    key: 'price'\n  }, {\n    title: 'Price',\n    dataIndex: 'lowPriorityPrice',\n    key: 'lowPriorityPrice'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n      children: [\"More information on\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.rescale.com/infrastructure/\",\n        target: \"_blank\",\n        children: \"Rescale website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Table, {\n      dataSource: data.coreTypes,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Rescale;\nexport default Rescale;\n{\n  /* <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Rescale\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/plugin/rescale/renderer/index.js"],"names":["Rescale","data","console","log","coreTypes","columns","title","dataIndex","key","render","text","record","index","marginRight","backgroundColor","color"],"mappings":";;;;;;;;;AAEA,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,SAAjB;AAEA,MAAMC,OAAO,GAAG,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEC,IAAAA,GAAG,EAAE,MAHP;AAIEC,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf;AAAA,0BACN;AAAA,gCACE;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,WAAW,EAAE,MAAf;AAAuBC,YAAAA,eAAe,EAAEH,MAAM,CAACI;AAA/C;AADT;AAAA;AAAA;AAAA;AAAA,iBADF,EAIGL,IAJH;AAAA,sBADM;AAAA;AAJV,GAPc,EAoBd;AACEJ,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GApBc,EAyBd;AACEF,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,SAAS,EAAE,kBAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAzBc,CAAhB;AAgCA,sBACE;AAAA,4BACE,oBAAY,IAAZ;AAAA,wCACsB,GADtB,eAEE;AAAG,QAAA,IAAI,EAAC,yCAAR;AAAkD,QAAA,MAAM,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAQE;AAAO,MAAA,UAAU,EAAEP,IAAI,CAACG,SAAxB;AAAmC,MAAA,OAAO,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CA/CD;;KAAML,O;AAiDN,eAAeA,OAAf;AAEA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC","sourcesContent":["import { Avatar, Table, Typography } from 'antd'\n\nconst Rescale = ({ data }) => {\n  console.log(data.coreTypes)\n\n  const columns = [\n    // {\n    //   title: '',\n    //   dataIndex: 'color',\n    //   key: 'color',\n    //   render: (color) => <Avatar style={{ backgroundColor: color }} />\n    // },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text, record, index) => (\n        <>\n          <Avatar\n            style={{ marginRight: '10px', backgroundColor: record.color }}\n          />\n          {text}\n        </>\n      )\n    },\n    {\n      title: 'Pro Price',\n      dataIndex: 'price',\n      key: 'price'\n    },\n    {\n      title: 'Price',\n      dataIndex: 'lowPriorityPrice',\n      key: 'lowPriorityPrice'\n    }\n  ]\n\n  return (\n    <div>\n      <Typography.Text>\n        More information on{' '}\n        <a href=\"https://www.rescale.com/infrastructure/\" target=\"_blank\">\n          Rescale website\n        </a>\n        .\n      </Typography.Text>\n      <Table dataSource={data.coreTypes} columns={columns} />\n    </div>\n  )\n}\n\nexport default Rescale\n\n{\n  /* <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space> */\n}\n"]},"metadata":{},"sourceType":"module"}