{"ast":null,"code":"import _Layout from \"antd/lib/layout\";\nimport _Card from \"antd/lib/card\";\nimport _Steps from \"antd/lib/steps\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Space from \"antd/lib/space\";\nimport _Button from \"antd/lib/button\";\nimport _Drawer from \"antd/lib/drawer\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _Tabs from \"antd/lib/tabs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { CloudServerOutlined, EyeOutlined, EyeInvisibleOutlined, FileTextOutlined, RocketOutlined } from '@ant-design/icons';\nimport { Error } from '../../../assets/notification';\nimport CloudServer from './cloudServer';\nimport SimulationAPI from '../../../../../src/api/simulation';\n/**\n * Errors simulation/run\n * @memberof module:renderer/components/project/simulation\n */\n\nvar errors = {\n  runError: 'Unable to run the simulation',\n  updateError: 'Unable to update the simulation'\n};\n/**\n * Run\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\n\nvar Run = function Run(_ref) {\n  _s();\n\n  var _simulation$scheme;\n\n  var project = _ref.project,\n      simulation = _ref.simulation;\n\n  // State\n  var _useState = useState(false),\n      disabled = _useState[0],\n      setDisabled = _useState[1];\n\n  var _useState2 = useState(false),\n      cloudServerVisible = _useState2[0],\n      setCloudServerVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      running = _useState3[0],\n      setRunning = _useState3[1];\n\n  var _useState4 = useState(false),\n      logVisible = _useState4[0],\n      setLogVisible = _useState4[1];\n\n  var _useState5 = useState(),\n      logContent = _useState5[0],\n      setLogContent = _useState5[1];\n\n  var _useState6 = useState(),\n      meshingTasks = _useState6[0],\n      setMeshingTasks = _useState6[1];\n\n  var _useState7 = useState(),\n      simulatingTasks = _useState7[0],\n      setSimulatingTasks = _useState7[1];\n\n  var _useState8 = useState(simulation === null || simulation === void 0 ? void 0 : (_simulation$scheme = simulation.scheme) === null || _simulation$scheme === void 0 ? void 0 : _simulation$scheme.configuration),\n      configuration = _useState8[0],\n      setConfiguration = _useState8[1];\n\n  var _useState9 = useState(),\n      currentConfiguration = _useState9[0],\n      setCurrentConfiguration = _useState9[1]; // Data\n\n\n  var _SimulationAPI$useSim = SimulationAPI.useSimulation(simulation === null || simulation === void 0 ? void 0 : simulation.id, 500),\n      _SimulationAPI$useSim2 = _slicedToArray(_SimulationAPI$useSim, 1),\n      currentSimulation = _SimulationAPI$useSim2[0];\n\n  var _SimulationAPI$useSim3 = SimulationAPI.useSimulations(project === null || project === void 0 ? void 0 : project.simulations),\n      _SimulationAPI$useSim4 = _slicedToArray(_SimulationAPI$useSim3, 2),\n      mutateOneSimulation = _SimulationAPI$useSim4[1].mutateOneSimulation; // Check tasks\n\n\n  useEffect(function () {\n    var done = true;\n    configuration && Object.keys(configuration).forEach(function (key) {\n      if (key === 'part' || key === 'run') return;\n      if (!configuration[key].done) done = false;\n    });\n    if (!configuration.run.cloudServer) done = false;\n    setDisabled(!done);\n  }, configuration);\n  useEffect(function () {\n    var _currentSimulation$ta, _currentSimulation$ta2, _currentSimulation$ta3;\n\n    var meshing = currentSimulation === null || currentSimulation === void 0 ? void 0 : (_currentSimulation$ta = currentSimulation.tasks) === null || _currentSimulation$ta === void 0 ? void 0 : _currentSimulation$ta.filter(function (t) {\n      return t.type === 'mesh';\n    });\n    setMeshingTasks(meshing);\n    var simulating = currentSimulation === null || currentSimulation === void 0 ? void 0 : (_currentSimulation$ta2 = currentSimulation.tasks) === null || _currentSimulation$ta2 === void 0 ? void 0 : _currentSimulation$ta2.filter(function (t) {\n      return t.type === 'simulation';\n    });\n    setSimulatingTasks(simulating);\n    var runningTasks = currentSimulation === null || currentSimulation === void 0 ? void 0 : (_currentSimulation$ta3 = currentSimulation.tasks) === null || _currentSimulation$ta3 === void 0 ? void 0 : _currentSimulation$ta3.filter(function (t) {\n      return t.status !== 'finish' && t.status !== 'error';\n    });\n    if (runningTasks !== null && runningTasks !== void 0 && runningTasks.length) setRunning(true);else setRunning(false);\n  }, [JSON.stringify(currentSimulation)]);\n  useEffect(function () {\n    var _simulation$scheme2;\n\n    setConfiguration(simulation === null || simulation === void 0 ? void 0 : (_simulation$scheme2 = simulation.scheme) === null || _simulation$scheme2 === void 0 ? void 0 : _simulation$scheme2.configuration);\n  }, [JSON.stringify(simulation)]);\n  useEffect(function () {\n    var _currentSimulation$sc;\n\n    setCurrentConfiguration(currentSimulation === null || currentSimulation === void 0 ? void 0 : (_currentSimulation$sc = currentSimulation.scheme) === null || _currentSimulation$sc === void 0 ? void 0 : _currentSimulation$sc.configuration);\n  }, [JSON.stringify(currentSimulation)]);\n  useEffect(function () {\n    if ((currentConfiguration === null || currentConfiguration === void 0 ? void 0 : currentConfiguration.run.done) !== (configuration === null || configuration === void 0 ? void 0 : configuration.run.done) || (currentConfiguration === null || currentConfiguration === void 0 ? void 0 : currentConfiguration.run.error) !== (configuration === null || configuration === void 0 ? void 0 : configuration.run.error)) mutateOneSimulation(currentSimulation);\n  }, [JSON.stringify(configuration), JSON.stringify(currentConfiguration)]);\n  /**\n   * On cloud server\n   * @param {Object} cloudServer Cloud server\n   */\n\n  var onCloudServer = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cloudServer) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Update local\n              currentConfiguration.run.cloudServer = cloudServer;\n              _context.prev = 1;\n              _context.next = 4;\n              return SimulationAPI.update({\n                id: simulation.id\n              }, [{\n                key: 'scheme',\n                type: 'json',\n                method: 'diff',\n                path: ['configuration', 'part'],\n                value: file\n              }]);\n\n            case 4:\n              // Mutate\n              mutateOneSimulation(currentSimulation);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              Error(errors.updateError, _context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7]]);\n    }));\n\n    return function onCloudServer(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\n   * On run\n   */\n\n\n  var onRun = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setRunning(true);\n              SimulationAPI.run({\n                id: simulation.id\n              })[\"catch\"](function (err) {\n                Error(errors.runError, err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onRun() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  /**\n   * On log\n   * @param {Array} tasks Tasks\n   * @param {string} title Tabs title\n   */\n\n\n  var onLog = function onLog(tasks, title) {\n    // Content\n    var content = tasks.map(function (t, index) {\n      var _t$log;\n\n      return /*#__PURE__*/_jsxDEV(_Tabs.TabPane, {\n        tab: title + ' ' + (index + 1),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: t === null || t === void 0 ? void 0 : (_t$log = t.log) === null || _t$log === void 0 ? void 0 : _t$log.replace(/\\n\\n/g, '\\n').replace(/\\n/g, '<br />')\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, _this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, _this);\n    });\n    setLogContent( /*#__PURE__*/_jsxDEV(_Tabs, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }, _this)); // Open\n\n    toggleLog();\n  };\n  /**\n   * Toogle log visibility\n   */\n\n\n  var toggleLog = function toggleLog() {\n    setLogVisible(!logVisible);\n  };\n  /**\n   * Set part\n   * @param {Object} file File\n   */\n\n\n  var setPart = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(file) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // Update local\n              currentConfiguration.part = file;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return SimulationAPI.update({\n                id: simulation.id\n              }, [{\n                key: 'scheme',\n                type: 'json',\n                method: 'diff',\n                path: ['configuration', 'part'],\n                value: file\n              }]);\n\n            case 4:\n              // Mutate\n              mutateOneSimulation(currentSimulation);\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              Error(errors.updateError, _context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 7]]);\n    }));\n\n    return function setPart(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var resultFiles = [];\n  simulatingTasks === null || simulatingTasks === void 0 ? void 0 : simulatingTasks.forEach(function (task) {\n    resultFiles.push.apply(resultFiles, _toConsumableArray(task.files || []));\n  });\n  /**\n   * Render\n   */\n\n  return /*#__PURE__*/_jsxDEV(_Layout, {\n    children: /*#__PURE__*/_jsxDEV(_Layout.Content, {\n      children: [/*#__PURE__*/_jsxDEV(CloudServer, {\n        visible: cloudServerVisible,\n        onClose: function onClose() {\n          return setCloudServerVisible(false);\n        },\n        onOk: onCloudServer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(_Drawer, {\n        title: \"Log\",\n        visible: logVisible,\n        onClose: toggleLog,\n        width: 512,\n        children: logContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(_Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(_Space, {\n          children: [/*#__PURE__*/_jsxDEV(_Button, {\n            icon: /*#__PURE__*/_jsxDEV(CloudServerOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, _this),\n            onClick: function onClick() {\n              return setCloudServerVisible(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n            disabled: disabled,\n            icon: /*#__PURE__*/_jsxDEV(RocketOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 21\n            }, _this),\n            loading: running,\n            onClick: onRun,\n            children: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(_Steps, {\n          direction: \"vertical\",\n          children: [meshingTasks === null || meshingTasks === void 0 ? void 0 : meshingTasks.map(function (task, index) {\n            var _currentConfiguration, _task$file;\n\n            return /*#__PURE__*/_jsxDEV(_Steps.Step, {\n              title: \"Meshing\",\n              description: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(_Button, {\n                  icon: /*#__PURE__*/_jsxDEV(FileTextOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 31\n                  }, _this),\n                  onClick: function onClick() {\n                    return onLog(meshingTasks, 'Mesh');\n                  },\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n                  icon: ((_currentConfiguration = currentConfiguration.part) === null || _currentConfiguration === void 0 ? void 0 : _currentConfiguration.fileName) === ((_task$file = task.file) === null || _task$file === void 0 ? void 0 : _task$file.fileName) ? /*#__PURE__*/_jsxDEV(EyeInvisibleOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 29\n                  }, _this) : /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 29\n                  }, _this),\n                  size: \"small\",\n                  onClick: function onClick() {\n                    var _currentConfiguration2, _task$file2;\n\n                    return setPart(((_currentConfiguration2 = currentConfiguration.part) === null || _currentConfiguration2 === void 0 ? void 0 : _currentConfiguration2.fileName) === ((_task$file2 = task.file) === null || _task$file2 === void 0 ? void 0 : _task$file2.fileName) ? null : task.file);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true),\n              subTitle: '(' + (index + 1) + '/' + (meshingTasks === null || meshingTasks === void 0 ? void 0 : meshingTasks.length) + ')',\n              status: task.status\n            }, task, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, _this);\n          }), simulatingTasks === null || simulatingTasks === void 0 ? void 0 : simulatingTasks.map(function (task, index) {\n            return /*#__PURE__*/_jsxDEV(_Steps.Step, {\n              title: \"Simulating\",\n              description: /*#__PURE__*/_jsxDEV(_Button, {\n                icon: /*#__PURE__*/_jsxDEV(FileTextOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 29\n                }, _this),\n                onClick: function onClick() {\n                  return onLog(simulatingTasks, 'Simulation');\n                },\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, _this),\n              subTitle: '(' + (index + 1) + '/' + (simulatingTasks === null || simulatingTasks === void 0 ? void 0 : simulatingTasks.length) + ')',\n              status: task.status\n            }, task, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, _this), resultFiles.length ? /*#__PURE__*/_jsxDEV(_Card, {\n          title: \"Results\",\n          children: /*#__PURE__*/_jsxDEV(_Space, {\n            direction: \"vertical\",\n            children: resultFiles.map(function (result) {\n              var _currentConfiguration3, _currentConfiguration4;\n\n              return /*#__PURE__*/_jsxDEV(_Space, {\n                children: [/*#__PURE__*/_jsxDEV(_Button, {\n                  icon: ((_currentConfiguration3 = currentConfiguration.part) === null || _currentConfiguration3 === void 0 ? void 0 : _currentConfiguration3.fileName) === (result === null || result === void 0 ? void 0 : result.fileName) && ((_currentConfiguration4 = currentConfiguration.part) === null || _currentConfiguration4 === void 0 ? void 0 : _currentConfiguration4.name) === (result === null || result === void 0 ? void 0 : result.name) ? /*#__PURE__*/_jsxDEV(EyeInvisibleOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 29\n                  }, _this) : /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 29\n                  }, _this),\n                  onClick: function onClick() {\n                    var _currentConfiguration5, _currentConfiguration6;\n\n                    return setPart(((_currentConfiguration5 = currentConfiguration.part) === null || _currentConfiguration5 === void 0 ? void 0 : _currentConfiguration5.fileName) === (result === null || result === void 0 ? void 0 : result.fileName) && ((_currentConfiguration6 = currentConfiguration.part) === null || _currentConfiguration6 === void 0 ? void 0 : _currentConfiguration6.name) === (result === null || result === void 0 ? void 0 : result.name) ? null : result);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, _this), result.name]\n              }, result.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, _this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Run, \"Sd+dmgGo87RUQYU/Klt+lUAVz3Y=\", false, function () {\n  return [SimulationAPI.useSimulation, SimulationAPI.useSimulations];\n});\n\n_c = Run;\nexport default Run;\n\nvar _c;\n\n$RefreshReg$(_c, \"Run\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/index.js"],"names":["useState","useEffect","CloudServerOutlined","EyeOutlined","EyeInvisibleOutlined","FileTextOutlined","RocketOutlined","Error","CloudServer","SimulationAPI","errors","runError","updateError","Run","project","simulation","disabled","setDisabled","cloudServerVisible","setCloudServerVisible","running","setRunning","logVisible","setLogVisible","logContent","setLogContent","meshingTasks","setMeshingTasks","simulatingTasks","setSimulatingTasks","scheme","configuration","setConfiguration","currentConfiguration","setCurrentConfiguration","useSimulation","id","currentSimulation","useSimulations","simulations","mutateOneSimulation","done","Object","keys","forEach","key","run","cloudServer","meshing","tasks","filter","t","type","simulating","runningTasks","status","length","JSON","stringify","error","onCloudServer","update","method","path","value","file","onRun","err","onLog","title","content","map","index","__html","log","replace","toggleLog","setPart","part","resultFiles","task","push","files","fileName","result","name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Button, Card, Drawer, Layout, Space, Steps, Tabs } from 'antd'\nimport {\n  CloudServerOutlined,\n  EyeOutlined,\n  EyeInvisibleOutlined,\n  FileTextOutlined,\n  RocketOutlined\n} from '@ant-design/icons'\n\nimport { Error } from '../../../assets/notification'\n\nimport CloudServer from './cloudServer'\n\nimport SimulationAPI from '../../../../../src/api/simulation'\n\n/**\n * Errors simulation/run\n * @memberof module:renderer/components/project/simulation\n */\nconst errors = {\n  runError: 'Unable to run the simulation',\n  updateError: 'Unable to update the simulation'\n}\n\n/**\n * Run\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\nconst Run = ({ project, simulation }) => {\n  // State\n  const [disabled, setDisabled] = useState(false)\n  const [cloudServerVisible, setCloudServerVisible] = useState(false)\n  const [running, setRunning] = useState(false)\n  const [logVisible, setLogVisible] = useState(false)\n  const [logContent, setLogContent] = useState()\n  const [meshingTasks, setMeshingTasks] = useState()\n  const [simulatingTasks, setSimulatingTasks] = useState()\n\n  const [configuration, setConfiguration] = useState(\n    simulation?.scheme?.configuration\n  )\n  const [currentConfiguration, setCurrentConfiguration] = useState()\n\n  // Data\n  const [currentSimulation] = SimulationAPI.useSimulation(simulation?.id, 500)\n  const [, { mutateOneSimulation }] = SimulationAPI.useSimulations(\n    project?.simulations\n  )\n\n  // Check tasks\n  useEffect(() => {\n    let done = true\n    configuration &&\n      Object.keys(configuration).forEach((key) => {\n        if (key === 'part' || key === 'run') return\n        if (!configuration[key].done) done = false\n      })\n    if (!configuration.run.cloudServer) done = false\n    setDisabled(!done)\n  }, configuration)\n\n  useEffect(() => {\n    const meshing = currentSimulation?.tasks?.filter((t) => t.type === 'mesh')\n    setMeshingTasks(meshing)\n\n    const simulating = currentSimulation?.tasks?.filter(\n      (t) => t.type === 'simulation'\n    )\n    setSimulatingTasks(simulating)\n\n    const runningTasks = currentSimulation?.tasks?.filter(\n      (t) => t.status !== 'finish' && t.status !== 'error'\n    )\n    if (runningTasks?.length) setRunning(true)\n    else setRunning(false)\n  }, [JSON.stringify(currentSimulation)])\n\n  useEffect(() => {\n    setConfiguration(simulation?.scheme?.configuration)\n  }, [JSON.stringify(simulation)])\n\n  useEffect(() => {\n    setCurrentConfiguration(currentSimulation?.scheme?.configuration)\n  }, [JSON.stringify(currentSimulation)])\n\n  useEffect(() => {\n    if (\n      currentConfiguration?.run.done !== configuration?.run.done ||\n      currentConfiguration?.run.error !== configuration?.run.error\n    )\n      mutateOneSimulation(currentSimulation)\n  }, [JSON.stringify(configuration), JSON.stringify(currentConfiguration)])\n\n  /**\n   * On cloud server\n   * @param {Object} cloudServer Cloud server\n   */\n  const onCloudServer = async (cloudServer) => {\n    // Update local\n    currentConfiguration.run.cloudServer = cloudServer\n\n    try {\n      // Update simulation\n      await SimulationAPI.update({ id: simulation.id }, [\n        {\n          key: 'scheme',\n          type: 'json',\n          method: 'diff',\n          path: ['configuration', 'part'],\n          value: file\n        }\n      ])\n\n      // Mutate\n      mutateOneSimulation(currentSimulation)\n    } catch (err) {\n      Error(errors.updateError, err)\n    }\n  }\n\n  /**\n   * On run\n   */\n  const onRun = async () => {\n    setRunning(true)\n\n    SimulationAPI.run({ id: simulation.id }).catch((err) => {\n      Error(errors.runError, err)\n    })\n  }\n\n  /**\n   * On log\n   * @param {Array} tasks Tasks\n   * @param {string} title Tabs title\n   */\n  const onLog = (tasks, title) => {\n    // Content\n    const content = tasks.map((t, index) => (\n      <Tabs.TabPane key={index} tab={title + ' ' + (index + 1)}>\n        <div\n          dangerouslySetInnerHTML={{\n            __html: t?.log?.replace(/\\n\\n/g, '\\n').replace(/\\n/g, '<br />')\n          }}\n        />\n      </Tabs.TabPane>\n    ))\n    setLogContent(<Tabs>{content}</Tabs>)\n\n    // Open\n    toggleLog()\n  }\n\n  /**\n   * Toogle log visibility\n   */\n  const toggleLog = () => {\n    setLogVisible(!logVisible)\n  }\n\n  /**\n   * Set part\n   * @param {Object} file File\n   */\n  const setPart = async (file) => {\n    // Update local\n    currentConfiguration.part = file\n\n    try {\n      // Update simulation\n      await SimulationAPI.update({ id: simulation.id }, [\n        {\n          key: 'scheme',\n          type: 'json',\n          method: 'diff',\n          path: ['configuration', 'part'],\n          value: file\n        }\n      ])\n\n      // Mutate\n      mutateOneSimulation(currentSimulation)\n    } catch (err) {\n      Error(errors.updateError, err)\n    }\n  }\n\n  const resultFiles = []\n  simulatingTasks?.forEach((task) => {\n    resultFiles.push(...(task.files || []))\n  })\n\n  /**\n   * Render\n   */\n  return (\n    <Layout>\n      <Layout.Content>\n        <CloudServer\n          visible={cloudServerVisible}\n          onClose={() => setCloudServerVisible(false)}\n          onOk={onCloudServer}\n        />\n        <Drawer\n          title=\"Log\"\n          visible={logVisible}\n          onClose={toggleLog}\n          width={512}\n        >\n          {logContent}\n        </Drawer>\n        <Space direction=\"vertical\">\n          <Space>\n            <Button\n              icon={<CloudServerOutlined />}\n              onClick={() => setCloudServerVisible(true)}\n            />\n            <Button\n              disabled={disabled}\n              icon={<RocketOutlined />}\n              loading={running}\n              onClick={onRun}\n            >\n              Run\n            </Button>\n          </Space>\n\n          <Steps direction=\"vertical\">\n            {meshingTasks?.map((task, index) => {\n              return (\n                <Steps.Step\n                  key={task}\n                  title=\"Meshing\"\n                  description={\n                    <>\n                      <Button\n                        icon={<FileTextOutlined />}\n                        onClick={() => onLog(meshingTasks, 'Mesh')}\n                        size=\"small\"\n                      />\n                      <Button\n                        icon={\n                          currentConfiguration.part?.fileName ===\n                          task.file?.fileName ? (\n                            <EyeInvisibleOutlined />\n                          ) : (\n                            <EyeOutlined />\n                          )\n                        }\n                        size=\"small\"\n                        onClick={() =>\n                          setPart(\n                            currentConfiguration.part?.fileName ===\n                              task.file?.fileName\n                              ? null\n                              : task.file\n                          )\n                        }\n                      />\n                    </>\n                  }\n                  subTitle={\n                    '(' + (index + 1) + '/' + meshingTasks?.length + ')'\n                  }\n                  status={task.status}\n                />\n              )\n            })}\n            {simulatingTasks?.map((task, index) => {\n              return (\n                <Steps.Step\n                  key={task}\n                  title=\"Simulating\"\n                  description={\n                    <Button\n                      icon={<FileTextOutlined />}\n                      onClick={() => onLog(simulatingTasks, 'Simulation')}\n                      size=\"small\"\n                    />\n                  }\n                  subTitle={\n                    '(' + (index + 1) + '/' + simulatingTasks?.length + ')'\n                  }\n                  status={task.status}\n                />\n              )\n            })}\n          </Steps>\n          {resultFiles.length ? (\n            <Card title=\"Results\">\n              <Space direction=\"vertical\">\n                {resultFiles.map((result) => {\n                  return (\n                    <Space key={result.name}>\n                      <Button\n                        icon={\n                          currentConfiguration.part?.fileName ===\n                            result?.fileName &&\n                          currentConfiguration.part?.name === result?.name ? (\n                            <EyeInvisibleOutlined />\n                          ) : (\n                            <EyeOutlined />\n                          )\n                        }\n                        onClick={() =>\n                          setPart(\n                            currentConfiguration.part?.fileName ===\n                              result?.fileName &&\n                              currentConfiguration.part?.name === result?.name\n                              ? null\n                              : result\n                          )\n                        }\n                      />\n                      {result.name}\n                    </Space>\n                  )\n                })}\n              </Space>\n            </Card>\n          ) : null}\n        </Space>\n      </Layout.Content>\n    </Layout>\n  )\n}\n\nexport default Run\n"]},"metadata":{},"sourceType":"module"}