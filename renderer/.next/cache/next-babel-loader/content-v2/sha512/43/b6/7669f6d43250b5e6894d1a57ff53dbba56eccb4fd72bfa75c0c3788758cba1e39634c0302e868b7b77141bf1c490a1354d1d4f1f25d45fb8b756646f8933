{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _Layout from \"antd/lib/layout\";\nimport _Card from \"antd/lib/card\";\nimport _Space from \"antd/lib/space\";\nimport _Form from \"antd/lib/form\";\nimport _Input from \"antd/lib/input\";\nimport _Alert from \"antd/lib/alert\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _Button from \"antd/lib/button\";\nimport _Typography from \"antd/lib/typography\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/** @module renderer/components/login */\nimport { useRouter } from 'next/router';\nimport { useState, useEffect } from 'react';\nimport Loading from '../loading'; //import Background from '../background'\n\nimport login from '../../../src/api/login';\nimport UserAPI from '../../../src/api/user';\nimport Sentry from '../../../src/lib/sentry';\n/**\n * Errors\n */\n\nconst errors = {\n  INTERNAL_ERROR: 'Server issue : try again shortly.',\n  BAD_CREDENTIALS: 'Incorrect credentials.'\n};\n/**\n * Login\n */\n\nconst Login = () => {\n  // State\n  const {\n    0: checking,\n    1: setChecking\n  } = useState(false);\n  const {\n    0: loginErr,\n    1: setLoginErr\n  } = useState(false);\n  const {\n    0: internalErr,\n    1: setInternalErr\n  } = useState(false); // Data\n\n  const [user, {\n    mutateUser,\n    loadingUser\n  }] = UserAPI.useUser(); // Router\n\n  const router = useRouter(); // Already connected\n\n  useEffect(() => {\n    if (user) router.push('/dashboard');\n  }, [user]); // Prefetch\n\n  useEffect(() => {\n    router.prefetch('/signup');\n    router.prefetch('/dashboard');\n  }, []);\n  /**\n   * Handle login\n   * @param {Object} values Values { username, password }\n   */\n\n  const onLogin = async values => {\n    // State\n    setChecking(true);\n    setLoginErr(false);\n    setInternalErr(false); // Check\n\n    try {\n      const loggedUser = await login(values);\n\n      if (loggedUser.ok) {\n        // Logged\n        mutateUser(loggedUser);\n        router.push('/dashboard');\n      } else {\n        // Bad\n        setLoginErr(true);\n        setChecking(false);\n      }\n    } catch (err) {\n      setInternalErr(true);\n      setChecking(false);\n      console.error(err);\n      Sentry.captureException(err);\n    }\n  };\n  /**\n   * Go to signup\n   */\n\n\n  const signUp = () => {\n    router.push('/signup');\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: loadingUser || user ? /*#__PURE__*/_jsx(Loading, {}) : /*#__PURE__*/_jsx(_Layout, {\n      children: /*#__PURE__*/_jsx(_Card, {\n        bordered: false,\n        className: \"Login\",\n        children: /*#__PURE__*/_jsxs(_Space, {\n          direction: \"vertical\",\n          size: \"large\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(_Typography.Title, {\n              level: 1,\n              style: {\n                padding: 0,\n                marginBottom: 16,\n                fontWeight: 500\n              },\n              children: \"Log In\"\n            }), /*#__PURE__*/_jsxs(_Typography.Text, {\n              children: [\"Your first time ?\", ' ', /*#__PURE__*/_jsx(_Button, {\n                type: \"link\",\n                onClick: signUp,\n                children: \"Sign up\"\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(_Form, {\n            requiredMark: \"optional\",\n            onFinish: onLogin,\n            layout: \"vertical\",\n            children: [(loginErr || internalErr) && /*#__PURE__*/_jsx(_Alert, {\n              message: internalErr ? errors.INTERNAL_ERROR : errors.BAD_CREDENTIALS,\n              type: \"error\",\n              showIcon: true,\n              style: {\n                marginBottom: '16px'\n              }\n            }), /*#__PURE__*/_jsx(_Form.Item, {\n              name: \"username\",\n              label: \"Your email address\",\n              rules: [{\n                required: true,\n                message: 'Please enter your email'\n              }],\n              children: /*#__PURE__*/_jsx(_Input, {\n                placeholder: \"Email address\",\n                autoComplete: \"email\"\n              })\n            }), /*#__PURE__*/_jsx(_Form.Item, {\n              name: \"password\",\n              label: \"Your password\",\n              rules: [{\n                required: true,\n                message: 'Please enter your password'\n              }],\n              style: {\n                marginBottom: '14px'\n              },\n              children: /*#__PURE__*/_jsx(_Input.Password, {\n                placeholder: \"Password\",\n                autoComplete: \"current-password\"\n              })\n            }), /*#__PURE__*/_jsx(_Typography.Text, {\n              children: /*#__PURE__*/_jsx(_Button, {\n                type: \"link\",\n                children: \"Forgot your password ?\"\n              })\n            }), /*#__PURE__*/_jsx(_Form.Item, {\n              className: \"Login-submit\",\n              children: /*#__PURE__*/_jsx(_Button, {\n                type: \"primary\",\n                loading: checking,\n                htmlType: \"submit\",\n                children: \"Log in\"\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}