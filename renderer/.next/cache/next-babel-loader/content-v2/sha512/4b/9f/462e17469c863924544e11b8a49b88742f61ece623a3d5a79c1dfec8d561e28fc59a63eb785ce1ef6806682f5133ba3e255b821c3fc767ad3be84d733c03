{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Typography from \"antd/lib/typography\";\nimport _Button from \"antd/lib/button\";\nimport _Modal from \"antd/lib/modal\";\nimport _Space from \"antd/lib/space\";\nimport _Card from \"antd/lib/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/cloudServer/index.js\";\nimport { useState } from 'react';\nimport { CloudServerOutlined } from '@ant-design/icons';\nimport merge from 'lodash.merge';\nimport Plugins from '../../../../../plugin';\nimport PluginAPI from '../../../../../../src/api/plugin';\n\nconst CloudServer = ({\n  cloudServer,\n  onOk\n}) => {\n  // State\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false); // Data\n\n  const [plugins] = PluginAPI.usePlugins();\n\n  const close = () => {\n    setVisible(false);\n  };\n\n  const onMerge = (plugin, diff) => {\n    // Merge\n    merge(plugin, diff); // Ok\n\n    onOk(plugin); // Close\n\n    close();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Card, {\n    children: [/*#__PURE__*/_jsxDEV(_Modal, {\n      visible: visible,\n      title: \"Cloud server\",\n      onOk: () => {},\n      okButtonProps: {\n        disabled: true,\n        style: {\n          display: 'none'\n        }\n      },\n      onCancel: close,\n      children: /*#__PURE__*/_jsxDEV(_Space, {\n        align: \"start\",\n        direction: \"horizontal\",\n        children: plugins === null || plugins === void 0 ? void 0 : plugins.map(plugin => {\n          const base = Plugins[plugin.key];\n          return /*#__PURE__*/_jsxDEV(_Card, {\n            title: plugin.name,\n            children: /*#__PURE__*/_jsxDEV(base.renderer, {\n              data: plugin.data,\n              onSelect: diff => onMerge(plugin, diff)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, plugin.uuid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Space, {\n      direction: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        icon: /*#__PURE__*/_jsxDEV(CloudServerOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this),\n        onClick: () => setVisible(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), cloudServer && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n          strong: true,\n          children: cloudServer.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), Object.keys(cloudServer.inUseConfiguration).map(key => {\n          const item = cloudServer.inUseConfiguration[key];\n          return /*#__PURE__*/_jsxDEV(_Space, {\n            children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n              strong: true,\n              children: [item.label, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(_Typography.Text, {\n              children: String(item.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CloudServer;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/cloudServer/index.js"],"names":["useState","CloudServerOutlined","merge","Plugins","PluginAPI","CloudServer","cloudServer","onOk","visible","setVisible","plugins","usePlugins","close","onMerge","plugin","diff","disabled","style","display","map","base","key","name","data","uuid","Object","keys","inUseConfiguration","item","label","String","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { Button, Card, Modal, Space, Typography } from 'antd'\nimport { CloudServerOutlined } from '@ant-design/icons'\nimport merge from 'lodash.merge'\n\nimport Plugins from '../../../../../plugin'\n\nimport PluginAPI from '../../../../../../src/api/plugin'\n\nconst CloudServer = ({ cloudServer, onOk }) => {\n  // State\n  const [visible, setVisible] = useState(false)\n\n  // Data\n  const [plugins] = PluginAPI.usePlugins()\n\n  const close = () => {\n    setVisible(false)\n  }\n\n  const onMerge = (plugin, diff) => {\n    // Merge\n    merge(plugin, diff)\n\n    // Ok\n    onOk(plugin)\n\n    // Close\n    close()\n  }\n\n  return (\n    <Card>\n      <Modal\n        visible={visible}\n        title=\"Cloud server\"\n        onOk={() => {}}\n        okButtonProps={{\n          disabled: true,\n          style: { display: 'none' }\n        }}\n        onCancel={close}\n      >\n        <Space align=\"start\" direction=\"horizontal\">\n          {plugins?.map((plugin) => {\n            const base = Plugins[plugin.key]\n            return (\n              <Card key={plugin.uuid} title={plugin.name}>\n                <base.renderer\n                  data={plugin.data}\n                  onSelect={(diff) => onMerge(plugin, diff)}\n                />\n              </Card>\n            )\n          })}\n        </Space>\n      </Modal>\n      <Space direction=\"vertical\">\n        <Button\n          icon={<CloudServerOutlined />}\n          onClick={() => setVisible(true)}\n        />\n        {cloudServer && (\n          <>\n            <Typography.Text strong={true}>{cloudServer.name}</Typography.Text>\n            {Object.keys(cloudServer.inUseConfiguration).map((key) => {\n              const item = cloudServer.inUseConfiguration[key]\n              return (\n                <Space>\n                  <Typography.Text strong={true}>{item.label}:</Typography.Text>\n                  <Typography.Text>{String(item.value)}</Typography.Text>\n                </Space>\n              )\n            })}\n          </>\n        )}\n      </Space>\n    </Card>\n  )\n}\n\nexport default CloudServer\n"]},"metadata":{},"sourceType":"module"}