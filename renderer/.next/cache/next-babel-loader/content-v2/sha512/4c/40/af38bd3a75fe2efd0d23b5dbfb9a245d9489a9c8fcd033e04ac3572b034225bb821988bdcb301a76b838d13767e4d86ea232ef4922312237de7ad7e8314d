{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _Form from \"antd/lib/form\";\nimport _Input from \"antd/lib/input\";\nimport _Button from \"antd/lib/button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport { Error } from '../../assets/notification';\nimport Dialog from '../../assets/dialog';\nimport WorkspaceAPI from '../../../../src/api/workspace';\nvar errors = {\n  addError: 'Unable to add the workspace'\n};\n/**\n * Add workspace\n * @memberof module:renderer/components/workspace\n */\n\nvar Add = function Add() {\n  // Sate\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1]; // Data\n\n\n  var _WorkspaceAPI$useWork = WorkspaceAPI.useWorkspaces(),\n      _WorkspaceAPI$useWork2 = _slicedToArray(_WorkspaceAPI$useWork, 2),\n      addOneWorkspace = _WorkspaceAPI$useWork2[1].addOneWorkspace;\n  /**\n   * Toggle dialog\n   */\n\n\n  var toggleDialog = function toggleDialog() {\n    setVisible(!visible);\n  };\n  /**\n   * On confirm\n   * @param {Object} values Values\n   */\n\n\n  var onOk = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var workspace;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return WorkspaceAPI.add(values);\n\n            case 4:\n              workspace = _context.sent;\n              // Mutate\n              addOneWorkspace(workspace);\n              toggleDialog();\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              Error(errors.addError, _context.t0);\n\n            case 12:\n              _context.prev = 12;\n              setLoading(false);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function onOk(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\n   * On cancel\n   */\n\n\n  var onCancel = function onCancel() {\n    toggleDialog();\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(_Button, {\n      onClick: toggleDialog,\n      icon: /*#__PURE__*/_jsx(PlusCircleOutlined, {}),\n      children: \"Create a new workspace\"\n    }), /*#__PURE__*/_jsx(Dialog, {\n      title: \"Create a new workspace\",\n      closable: false,\n      visible: visible,\n      onCancel: onCancel,\n      onOk: onOk,\n      confirmLoading: loading,\n      children: /*#__PURE__*/_jsx(_Form.Item, {\n        label: \"Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: \"Please enter a workspace's name\"\n        }],\n        children: /*#__PURE__*/_jsx(_Input, {\n          placeholder: \"Workspace's name\"\n        })\n      })\n    })]\n  });\n};\n\nexport default Add;","map":null,"metadata":{},"sourceType":"module"}