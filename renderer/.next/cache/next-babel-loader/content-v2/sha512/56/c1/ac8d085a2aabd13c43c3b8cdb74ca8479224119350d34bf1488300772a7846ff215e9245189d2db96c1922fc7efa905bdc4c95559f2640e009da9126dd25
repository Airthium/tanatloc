{"ast":null,"code":"import _Layout from \"antd/lib/layout\";\nimport _Card from \"antd/lib/card\";\nimport _Space from \"antd/lib/space\";\nimport _Form from \"antd/lib/form\";\nimport _Input from \"antd/lib/input\";\nimport _Alert from \"antd/lib/alert\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _Button from \"antd/lib/button\";\nimport _Typography from \"antd/lib/typography\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/** @module renderer/components/signup */\nimport { useRouter } from 'next/router';\nimport { useState, useEffect } from 'react';\nimport Loading from '../loading'; // import Background from '../background'\n\nimport login from '../../../src/api/login';\nimport UserAPI from '../../../src/api/user';\nimport Sentry from '../../../src/lib/sentry';\n/**\n * Errors\n */\n\nconst errors = {\n  INTERNAL_ERROR: 'Server issue : try again shortly.',\n  ALREADY_EXISTS: 'This email is already registered',\n  PASSWORD_TOO_SMALL: 'Your password is too small',\n  PASSWORD_TOO_LONG: 'Your password is too long',\n  PASSSWORDS_MISMATCH: 'Passwords mismatch'\n};\n/**\n * Signup\n */\n\nconst Signup = () => {\n  // State\n  const {\n    0: checking,\n    1: setChecking\n  } = useState(false);\n  const {\n    0: signupErr,\n    1: setSignupErr\n  } = useState(false);\n  const {\n    0: internalErr,\n    1: setInternalError\n  } = useState(false); // Data\n\n  const [user, {\n    loadingUser,\n    mutateUser\n  }] = UserAPI.useUser(); // Router\n\n  const router = useRouter(); // Already connected\n\n  useEffect(() => {\n    if (user) router.push('/dashboard');\n  }, [user]); // Prefetch\n\n  useEffect(() => {\n    router.prefetch('/dashboard');\n    router.prefetch('/login');\n  }, []);\n  /**\n   * Handle signup\n   * @param {Object} values { username, password, passwordConfirmation }\n   */\n\n  const onSignup = async ({\n    username,\n    password,\n    passwordConfirmation\n  }) => {\n    // State\n    setChecking(true);\n    setSignupErr(false);\n    setInternalError(false); // Signup\n\n    try {\n      const newUser = await UserAPI.add({\n        username,\n        password\n      });\n\n      if (newUser.alreadyExists) {\n        setSignupErr(true);\n        setChecking(false);\n        return;\n      } // Login\n\n\n      const loggedUser = await login({\n        username,\n        password\n      });\n      mutateUser(loggedUser);\n      router.push('/dashboard');\n    } catch (err) {\n      setInternalError(true);\n      setChecking(false);\n      console.error(err);\n      Sentry.captureException(err);\n    }\n  };\n  /**\n   * Go to login\n   */\n\n\n  const onLogin = () => {\n    router.push('/login');\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: loadingUser || user ? /*#__PURE__*/_jsx(Loading, {}) : /*#__PURE__*/_jsx(_Layout, {\n      children: /*#__PURE__*/_jsx(_Card, {\n        bordered: false,\n        className: \"Signup\",\n        children: /*#__PURE__*/_jsxs(_Space, {\n          direction: \"vertical\",\n          size: \"large\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(_Typography.Title, {\n              level: 1,\n              style: {\n                padding: 0,\n                marginBottom: 16,\n                fontWeight: 500\n              },\n              children: \"Sign Up\"\n            })\n          }), /*#__PURE__*/_jsxs(_Form, {\n            requiredMark: \"optional\",\n            onFinish: onSignup,\n            layout: \"vertical\",\n            children: [(signupErr || internalErr) && /*#__PURE__*/_jsx(_Alert, {\n              message: internalErr ? errors.INTERNAL_ERROR : /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(\"b\", {\n                  type: \"warning\",\n                  children: errors.ALREADY_EXISTS\n                }), /*#__PURE__*/_jsx(\"br\", {}), \"We know you!\", ' ', /*#__PURE__*/_jsx(_Button, {\n                  type: \"link\",\n                  onClick: onLogin,\n                  children: \"Log in ?\"\n                })]\n              }),\n              type: internalErr ? 'error' : 'warning',\n              showIcon: true,\n              style: {\n                marginBottom: '16px'\n              }\n            }), /*#__PURE__*/_jsx(_Form.Item, {\n              name: \"username\",\n              label: \"Enter your email address\",\n              rules: [{\n                required: true,\n                message: 'Please enter your email'\n              }],\n              children: /*#__PURE__*/_jsx(_Input, {\n                placeholder: \"Email address\",\n                autoComplete: \"email\"\n              })\n            }), /*#__PURE__*/_jsx(_Form.Item, {\n              name: \"password\",\n              label: \"Choose your password\",\n              rules: [{\n                required: true,\n                message: 'Please enter your Password'\n              }, {\n                min: 6,\n                message: errors.PASSWORD_TOO_SMALL\n              }, {\n                max: 16,\n                message: errors.PASSWORD_TOO_LONG\n              }],\n              style: {\n                marginBottom: '14px'\n              },\n              children: /*#__PURE__*/_jsx(_Input.Password, {\n                placeholder: \"Password\",\n                autoComplete: \"current-password\"\n              })\n            }), /*#__PURE__*/_jsx(_Form.Item, {\n              name: \"passwordConfirmation\",\n              label: \"Confirm your password\",\n              rules: [{\n                required: true,\n                message: 'Please enter your Password'\n              }, ({\n                getFieldValue\n              }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(errors.PASSSWORDS_MISMATCH);\n                }\n\n              })],\n              style: {\n                marginBottom: '14px'\n              },\n              children: /*#__PURE__*/_jsx(_Input.Password, {\n                placeholder: \"Password\",\n                autoComplete: \"current-password\"\n              })\n            }), /*#__PURE__*/_jsx(_Form.Item, {\n              className: \"Signup-submit\",\n              children: /*#__PURE__*/_jsx(_Button, {\n                type: \"primary\",\n                loading: checking,\n                htmlType: \"submit\",\n                children: \"Finish\"\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}