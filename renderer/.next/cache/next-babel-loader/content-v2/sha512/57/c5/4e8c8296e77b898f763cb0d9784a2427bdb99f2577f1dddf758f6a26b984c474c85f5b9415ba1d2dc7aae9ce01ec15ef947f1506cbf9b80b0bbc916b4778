{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Form from \"antd/lib/form\";\nimport _Input from \"antd/lib/input\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/workspace/add/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport { Error } from '../../assets/notification';\nimport Dialog from '../../assets/dialog';\nimport WorkspaceAPI from '../../../../src/api/workspace';\nvar errors = {\n  addError: 'Unable to add the workspace'\n};\n/**\n * Add workspace\n * @memberof module:renderer/components/workspace\n */\n\nvar Add = function Add() {\n  _s();\n\n  // Sate\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1]; // Data\n\n\n  var _WorkspaceAPI$useWork = WorkspaceAPI.useWorkspaces(),\n      _WorkspaceAPI$useWork2 = _slicedToArray(_WorkspaceAPI$useWork, 2),\n      addOneWorkspace = _WorkspaceAPI$useWork2[1].addOneWorkspace;\n  /**\n   * Toggle dialog\n   */\n\n\n  var toggleDialog = function toggleDialog() {\n    setVisible(!visible);\n  };\n  /**\n   * On confirm\n   * @param {Object} values Values\n   */\n\n\n  var onOk = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var workspace;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return WorkspaceAPI.add(values);\n\n            case 4:\n              workspace = _context.sent;\n              // Mutate\n              addOneWorkspace(workspace);\n              toggleDialog();\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              Error(errors.addError, _context.t0);\n\n            case 12:\n              _context.prev = 12;\n              setLoading(false);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function onOk(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\n   * On cancel\n   */\n\n\n  var onCancel = function onCancel() {\n    toggleDialog();\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      onClick: toggleDialog,\n      icon: /*#__PURE__*/_jsxDEV(PlusCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 44\n      }, _this),\n      children: \"Create a new workspace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n      title: \"Create a new workspace\",\n      closable: false,\n      visible: visible,\n      onCancel: onCancel,\n      onOk: onOk,\n      confirmLoading: loading,\n      children: /*#__PURE__*/_jsxDEV(_Form.Item, {\n        label: \"Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: \"Please enter a workspace's name\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(_Input, {\n          placeholder: \"Workspace's name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Add, \"EMBg1WLnPyaShNHSTiMHSCrZPdA=\", false, function () {\n  return [WorkspaceAPI.useWorkspaces];\n});\n\n_c = Add;\nexport default Add;\n\nvar _c;\n\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/workspace/add/index.js"],"names":["useState","PlusCircleOutlined","Error","Dialog","WorkspaceAPI","errors","addError","Add","visible","setVisible","loading","setLoading","useWorkspaces","addOneWorkspace","toggleDialog","onOk","values","add","workspace","onCancel","required","message"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,kBAAT,QAAmC,mBAAnC;AAEA,SAASC,KAAT,QAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AADG,CAAf;AAIA;AACA;AACA;AACA;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AAChB;AADgB,kBAEcP,QAAQ,CAAC,KAAD,CAFtB;AAAA,MAETQ,OAFS;AAAA,MAEAC,UAFA;;AAAA,mBAGcT,QAAQ,CAAC,KAAD,CAHtB;AAAA,MAGTU,OAHS;AAAA,MAGAC,UAHA,kBAKhB;;;AALgB,8BAMgBP,YAAY,CAACQ,aAAb,EANhB;AAAA;AAAA,MAMLC,eANK,6BAMLA,eANK;AAQhB;AACF;AACA;;;AACE,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBL,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;AAIA;AACF;AACA;AACA;;;AACE,MAAMO,IAAI;AAAA,wEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXL,cAAAA,UAAU,CAAC,IAAD,CAAV;AADW;AAAA;AAAA,qBAIeP,YAAY,CAACa,GAAb,CAAiBD,MAAjB,CAJf;;AAAA;AAIHE,cAAAA,SAJG;AAMT;AACAL,cAAAA,eAAe,CAACK,SAAD,CAAf;AAEAJ,cAAAA,YAAY;AATH;AAAA;;AAAA;AAAA;AAAA;AAWTZ,cAAAA,KAAK,CAACG,MAAM,CAACC,QAAR,cAAL;;AAXS;AAAA;AAaTK,cAAAA,UAAU,CAAC,KAAD,CAAV;AAbS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJI,IAAI;AAAA;AAAA;AAAA,KAAV;AAiBA;AACF;AACA;;;AACE,MAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBL,IAAAA,YAAY;AACb,GAFD;AAIA;AACF;AACA;;;AACE,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEA,YAAjB;AAA+B,MAAA,IAAI,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,wBADR;AAEE,MAAA,QAAQ,EAAE,KAFZ;AAGE,MAAA,OAAO,EAAEN,OAHX;AAIE,MAAA,QAAQ,EAAEW,QAJZ;AAKE,MAAA,IAAI,EAAEJ,IALR;AAME,MAAA,cAAc,EAAEL,OANlB;AAAA,6BAQE,cAAM,IAAN;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAE,CACL;AAAEU,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SADK,CAHT;AAAA,+BAOE;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA,kBADF;AAyBD,CAvED;;GAAMd,G;UAM4BH,YAAY,CAACQ,a;;;KANzCL,G;AAyEN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport { Button, Form, Input } from 'antd'\nimport { PlusCircleOutlined } from '@ant-design/icons'\n\nimport { Error } from '../../assets/notification'\nimport Dialog from '../../assets/dialog'\n\nimport WorkspaceAPI from '../../../../src/api/workspace'\n\nconst errors = {\n  addError: 'Unable to add the workspace'\n}\n\n/**\n * Add workspace\n * @memberof module:renderer/components/workspace\n */\nconst Add = () => {\n  // Sate\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  // Data\n  const [, { addOneWorkspace }] = WorkspaceAPI.useWorkspaces()\n\n  /**\n   * Toggle dialog\n   */\n  const toggleDialog = () => {\n    setVisible(!visible)\n  }\n\n  /**\n   * On confirm\n   * @param {Object} values Values\n   */\n  const onOk = async (values) => {\n    setLoading(true)\n    try {\n      // Add\n      const workspace = await WorkspaceAPI.add(values)\n\n      // Mutate\n      addOneWorkspace(workspace)\n\n      toggleDialog()\n    } catch (err) {\n      Error(errors.addError, err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  /**\n   * On cancel\n   */\n  const onCancel = () => {\n    toggleDialog()\n  }\n\n  /**\n   * Render\n   */\n  return (\n    <>\n      <Button onClick={toggleDialog} icon={<PlusCircleOutlined />}>\n        Create a new workspace\n      </Button>\n      <Dialog\n        title=\"Create a new workspace\"\n        closable={false}\n        visible={visible}\n        onCancel={onCancel}\n        onOk={onOk}\n        confirmLoading={loading}\n      >\n        <Form.Item\n          label=\"Name\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please enter a workspace's name\" }\n          ]}\n        >\n          <Input placeholder=\"Workspace's name\" />\n        </Form.Item>\n      </Dialog>\n    </>\n  )\n}\n\nexport default Add\n"]},"metadata":{},"sourceType":"module"}