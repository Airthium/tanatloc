{"ast":null,"code":"import _Space from \"antd/lib/space\";\nimport _Table from \"antd/lib/table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _Empty from \"antd/lib/empty\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/list/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport { Error } from '../../assets/notification';\nimport Data from '../data';\nimport Delete from '../delete';\nimport ProjectAPI from '../../../../src/api/project';\n/**\n * Errors project/list\n * @memberof module:renderer/components/project\n */\n\nconst errors = {\n  updateError: 'Unable to update the project'\n};\n/**\n * Projects' list\n * @memberof module:renderer/components/project\n * @param {Object} props Props\n */\n\nconst ProjectList = ({\n  workspace,\n  filter\n}) => {\n  // Router\n  const router = useRouter(); // Load projects\n\n  const [projects, {\n    mutateOneProject\n  }] = ProjectAPI.useProjects(workspace === null || workspace === void 0 ? void 0 : workspace.projects); // Data\n\n  const data = projects.map(project => {\n    return Data(project, filter, title => setTitle(project, title));\n  }).filter(d => d); // Open project\n\n  const openProject = project => {\n    router.push({\n      pathname: '/project',\n      query: {\n        workspaceId: workspace.id,\n        projectId: project.id\n      }\n    });\n  };\n  /**\n   * Set title\n   * @param {string} project Project { id }\n   * @param {string} title Title\n   */\n\n\n  const setTitle = async (project, title) => {\n    try {\n      // Update\n      await ProjectAPI.update({\n        id: project.id\n      }, [{\n        key: 'title',\n        value: title\n      }]); // Mutate project\n\n      mutateOneProject(_objectSpread(_objectSpread({}, project), {}, {\n        title: title\n      }));\n    } catch (err) {\n      Error(errors.updateError, err);\n    }\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Table, {\n    pagination: false,\n    dataSource: data,\n    bordered: true,\n    size: \"small\",\n    scroll: {\n      y: 'calc(100vh - 232px)'\n    },\n    locale: {\n      emptyText: /*#__PURE__*/_jsxDEV(_Empty, {\n        image: _Empty.PRESENTED_IMAGE_SIMPLE,\n        description: \"No projects yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    },\n    children: [/*#__PURE__*/_jsxDEV(_Table.Column, {\n      title: \"\",\n      dataIndex: \"snapshot\",\n      onCell: project => {\n        return {\n          onClick: () => openProject(project)\n        };\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Table.Column, {\n      title: \"Project Name\",\n      dataIndex: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Table.Column, {\n      title: \"Status\",\n      dataIndex: \"tags\",\n      align: \"center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Table.Column, {\n      title: \"Administrators\",\n      dataIndex: \"owners\",\n      align: \"center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Table.Column, {\n      title: \"Actions\",\n      align: \"center\",\n      render: value => /*#__PURE__*/_jsxDEV(_Space, {\n        size: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Delete, {\n          workspace: workspace,\n          project: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ProjectList;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/list/index.js"],"names":["useRouter","Error","Data","Delete","ProjectAPI","errors","updateError","ProjectList","workspace","filter","router","projects","mutateOneProject","useProjects","data","map","project","title","setTitle","d","openProject","push","pathname","query","workspaceId","id","projectId","update","key","value","err","y","emptyText","PRESENTED_IMAGE_SIMPLE","onClick"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport { Space, Table, Empty } from 'antd'\n\nimport { Error } from '../../assets/notification'\n\nimport Data from '../data'\nimport Delete from '../delete'\n\nimport ProjectAPI from '../../../../src/api/project'\n\n/**\n * Errors project/list\n * @memberof module:renderer/components/project\n */\nconst errors = {\n  updateError: 'Unable to update the project'\n}\n\n/**\n * Projects' list\n * @memberof module:renderer/components/project\n * @param {Object} props Props\n */\nconst ProjectList = ({ workspace, filter }) => {\n  // Router\n  const router = useRouter()\n\n  // Load projects\n  const [projects, { mutateOneProject }] = ProjectAPI.useProjects(\n    workspace?.projects\n  )\n\n  // Data\n  const data = projects\n    .map((project) => {\n      return Data(project, filter, (title) => setTitle(project, title))\n    })\n    .filter((d) => d)\n\n  // Open project\n  const openProject = (project) => {\n    router.push({\n      pathname: '/project',\n      query: { workspaceId: workspace.id, projectId: project.id }\n    })\n  }\n\n  /**\n   * Set title\n   * @param {string} project Project { id }\n   * @param {string} title Title\n   */\n  const setTitle = async (project, title) => {\n    try {\n      // Update\n      await ProjectAPI.update({ id: project.id }, [\n        {\n          key: 'title',\n          value: title\n        }\n      ])\n\n      // Mutate project\n      mutateOneProject({\n        ...project,\n        title: title\n      })\n    } catch (err) {\n      Error(errors.updateError, err)\n    }\n  }\n\n  /**\n   * Render\n   */\n  return (\n    <Table\n      pagination={false}\n      dataSource={data}\n      bordered={true}\n      size=\"small\"\n      scroll={{ y: 'calc(100vh - 232px)' }}\n      locale={{\n        emptyText: (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description=\"No projects yet.\"\n          />\n        )\n      }}\n    >\n      <Table.Column\n        title=\"\"\n        dataIndex=\"snapshot\"\n        onCell={(project) => {\n          return {\n            onClick: () => openProject(project)\n          }\n        }}\n      />\n      <Table.Column title=\"Project Name\" dataIndex=\"title\" />\n      <Table.Column title=\"Status\" dataIndex=\"tags\" align=\"center\" />\n      <Table.Column title=\"Administrators\" dataIndex=\"owners\" align=\"center\" />\n      {/* <Table.Column title=\"Shared With\" dataIndex=\"users\" align=\"center\" /> */}\n      <Table.Column\n        title=\"Actions\"\n        align=\"center\"\n        render={(value) => (\n          <Space size=\"middle\">\n            {/* <Button key=\"share\" icon={<ShareAltOutlined />}>\n              Share\n            </Button> */}\n            <Delete workspace={workspace} project={value} />\n          </Space>\n        )}\n      />\n    </Table>\n  )\n}\n\nexport default ProjectList\n"]},"metadata":{},"sourceType":"module"}