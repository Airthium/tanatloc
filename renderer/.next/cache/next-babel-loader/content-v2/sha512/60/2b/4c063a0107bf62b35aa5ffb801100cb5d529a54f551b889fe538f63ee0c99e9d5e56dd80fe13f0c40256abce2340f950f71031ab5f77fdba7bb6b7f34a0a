{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/account/hpc/delete.js\";\nimport { useState } from 'react';\nimport { Error } from '../../assets/notification';\nimport PluginAPI from '../../../../src/api/plugin';\n/**\n * Errors (hpc/delete)\n */\n\nconst errors = {\n  updateError: 'Unable to delete plugin'\n};\n/**\n * Delete plugin\n * @param {Object} props Props\n */\n\nconst Delete = ({\n  plugin\n}) => {\n  // State\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // Data\n\n  const [, {\n    delOnePlugin\n  }] = PluginAPI.usePlugins();\n  /**\n   * On delete\n   */\n\n  const onDelete = async () => {\n    setLoading(true);\n\n    try {\n      // API\n      await PluginAPI.del(plugin); // Mutate\n\n      delOnePlugin(plugin);\n    } catch (err) {\n      Error(errors.updateError, err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Button, {\n    type: \"danger\",\n    loading: loading,\n    onClick: onDelete,\n    children: \"Delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Delete;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/account/hpc/delete.js"],"names":["useState","Error","PluginAPI","errors","updateError","Delete","plugin","loading","setLoading","delOnePlugin","usePlugins","onDelete","del","err"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,SAASC,KAAT,QAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE;AADA,CAAf;AAIA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC7B;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,KAAD,CAAtC,CAF6B,CAI7B;;AACA,QAAM,GAAG;AAAES,IAAAA;AAAF,GAAH,IAAuBP,SAAS,CAACQ,UAAV,EAA7B;AAEA;AACF;AACA;;AACE,QAAMC,QAAQ,GAAG,YAAY;AAC3BH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACF;AACA,YAAMN,SAAS,CAACU,GAAV,CAAcN,MAAd,CAAN,CAFE,CAIF;;AACAG,MAAAA,YAAY,CAACH,MAAD,CAAZ;AACD,KAND,CAME,OAAOO,GAAP,EAAY;AACZZ,MAAAA,KAAK,CAACE,MAAM,CAACC,WAAR,EAAqBS,GAArB,CAAL;AACD,KARD,SAQU;AACRL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAdD;AAgBA;AACF;AACA;;;AACE,sBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAED,OAA/B;AAAwC,IAAA,OAAO,EAAEI,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlCD;;AAoCA,eAAeN,MAAf","sourcesContent":["import { useState } from 'react'\nimport { Button } from 'antd'\n\nimport { Error } from '../../assets/notification'\nimport PluginAPI from '../../../../src/api/plugin'\n\n/**\n * Errors (hpc/delete)\n */\nconst errors = {\n  updateError: 'Unable to delete plugin'\n}\n\n/**\n * Delete plugin\n * @param {Object} props Props\n */\nconst Delete = ({ plugin }) => {\n  // State\n  const [loading, setLoading] = useState(false)\n\n  // Data\n  const [, { delOnePlugin }] = PluginAPI.usePlugins()\n\n  /**\n   * On delete\n   */\n  const onDelete = async () => {\n    setLoading(true)\n\n    try {\n      // API\n      await PluginAPI.del(plugin)\n\n      // Mutate\n      delOnePlugin(plugin)\n    } catch (err) {\n      Error(errors.updateError, err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  /**\n   * Render\n   */\n  return (\n    <Button type=\"danger\" loading={loading} onClick={onDelete}>\n      Delete\n    </Button>\n  )\n}\n\nexport default Delete\n"]},"metadata":{},"sourceType":"module"}