{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/delete/index.js\";\nimport { useState } from 'react';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { Error } from '../../assets/notification';\nimport { DeleteDialog } from '../../assets/dialog';\nimport ProjectAPI from '../../../../src/api/project';\nimport WorkspaceAPI from '../../../../src/api/workspace';\n/**\n * Errors project/del\n * @memberof module:renderer/components/project\n */\n\nconst errors = {\n  delError: 'Unable to delete the project'\n};\n/**\n * Delete project\n * @memberof module:renderer/components/project\n * @param {Object} props Props\n */\n\nconst Delete = props => {\n  // Props\n  const workspace = props.workspace || {};\n  const project = props.project || {}; // Sate\n\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // Data\n\n  const [, {\n    delOneProject\n  }] = ProjectAPI.useProjects(workspace.projects);\n  const [, {\n    mutateOneWorkspace\n  }] = WorkspaceAPI.useWorkspaces();\n  /**\n   * Toggle dialog delete\n   */\n\n  const toggleDialog = () => {\n    setVisible(!visible);\n  };\n  /**\n   * Handle delete\n   */\n\n\n  const handleDelete = async () => {\n    setLoading(true);\n\n    try {\n      // Delete\n      await ProjectAPI.del(workspace, project); // Mutate workspaces\n\n      const index = workspace.projects.findIndex(p => p.id === project.id);\n      workspace.projects = [...workspace.projects.slice(0, index), ...workspace.projects.slice(index + 1)];\n      mutateOneWorkspace(workspace); // Mutate projects\n\n      delOneProject({\n        id: project.id\n      });\n    } catch (err) {\n      Error(errors.delError, err);\n      setLoading(false);\n    }\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      onClick: toggleDialog,\n      icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 44\n      }, this),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteDialog, {\n      visible: visible,\n      onCancel: toggleDialog,\n      onOk: handleDelete,\n      loading: loading,\n      children: [\"Delete \", project.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Delete;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/delete/index.js"],"names":["useState","DeleteOutlined","Error","DeleteDialog","ProjectAPI","WorkspaceAPI","errors","delError","Delete","props","workspace","project","visible","setVisible","loading","setLoading","delOneProject","useProjects","projects","mutateOneWorkspace","useWorkspaces","toggleDialog","handleDelete","del","index","findIndex","p","id","slice","err","title"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,SAASC,KAAT,QAAsB,2BAAtB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AADG,CAAf;AAIA;AACA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB;AACA,QAAMC,SAAS,GAAGD,KAAK,CAACC,SAAN,IAAmB,EAArC;AACA,QAAMC,OAAO,GAAGF,KAAK,CAACE,OAAN,IAAiB,EAAjC,CAHwB,CAKxB;;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACc,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,CAAC,KAAD,CAAtC,CAPwB,CASxB;;AACA,QAAM,GAAG;AAAEgB,IAAAA;AAAF,GAAH,IAAwBZ,UAAU,CAACa,WAAX,CAAuBP,SAAS,CAACQ,QAAjC,CAA9B;AACA,QAAM,GAAG;AAAEC,IAAAA;AAAF,GAAH,IAA6Bd,YAAY,CAACe,aAAb,EAAnC;AAEA;AACF;AACA;;AACE,QAAMC,YAAY,GAAG,MAAM;AACzBR,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;AAIA;AACF;AACA;;;AACE,QAAMU,YAAY,GAAG,YAAY;AAC/BP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF;AACA,YAAMX,UAAU,CAACmB,GAAX,CAAeb,SAAf,EAA0BC,OAA1B,CAAN,CAFE,CAIF;;AACA,YAAMa,KAAK,GAAGd,SAAS,CAACQ,QAAV,CAAmBO,SAAnB,CAA8BC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAAShB,OAAO,CAACgB,EAArD,CAAd;AACAjB,MAAAA,SAAS,CAACQ,QAAV,GAAqB,CACnB,GAAGR,SAAS,CAACQ,QAAV,CAAmBU,KAAnB,CAAyB,CAAzB,EAA4BJ,KAA5B,CADgB,EAEnB,GAAGd,SAAS,CAACQ,QAAV,CAAmBU,KAAnB,CAAyBJ,KAAK,GAAG,CAAjC,CAFgB,CAArB;AAIAL,MAAAA,kBAAkB,CAACT,SAAD,CAAlB,CAVE,CAYF;;AACAM,MAAAA,aAAa,CAAC;AAAEW,QAAAA,EAAE,EAAEhB,OAAO,CAACgB;AAAd,OAAD,CAAb;AACD,KAdD,CAcE,OAAOE,GAAP,EAAY;AACZ3B,MAAAA,KAAK,CAACI,MAAM,CAACC,QAAR,EAAkBsB,GAAlB,CAAL;AAEAd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GArBD;AAuBA;AACF;AACA;;;AACE,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEM,YAAjB;AAA+B,MAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,YAAD;AACE,MAAA,OAAO,EAAET,OADX;AAEE,MAAA,QAAQ,EAAES,YAFZ;AAGE,MAAA,IAAI,EAAEC,YAHR;AAIE,MAAA,OAAO,EAAER,OAJX;AAAA,4BAMUH,OAAO,CAACmB,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAeD,CAhED;;AAkEA,eAAetB,MAAf","sourcesContent":["import { useState } from 'react'\nimport { Button } from 'antd'\nimport { DeleteOutlined } from '@ant-design/icons'\n\nimport { Error } from '../../assets/notification'\nimport { DeleteDialog } from '../../assets/dialog'\n\nimport ProjectAPI from '../../../../src/api/project'\nimport WorkspaceAPI from '../../../../src/api/workspace'\n\n/**\n * Errors project/del\n * @memberof module:renderer/components/project\n */\nconst errors = {\n  delError: 'Unable to delete the project'\n}\n\n/**\n * Delete project\n * @memberof module:renderer/components/project\n * @param {Object} props Props\n */\nconst Delete = (props) => {\n  // Props\n  const workspace = props.workspace || {}\n  const project = props.project || {}\n\n  // Sate\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  // Data\n  const [, { delOneProject }] = ProjectAPI.useProjects(workspace.projects)\n  const [, { mutateOneWorkspace }] = WorkspaceAPI.useWorkspaces()\n\n  /**\n   * Toggle dialog delete\n   */\n  const toggleDialog = () => {\n    setVisible(!visible)\n  }\n\n  /**\n   * Handle delete\n   */\n  const handleDelete = async () => {\n    setLoading(true)\n    try {\n      // Delete\n      await ProjectAPI.del(workspace, project)\n\n      // Mutate workspaces\n      const index = workspace.projects.findIndex((p) => p.id === project.id)\n      workspace.projects = [\n        ...workspace.projects.slice(0, index),\n        ...workspace.projects.slice(index + 1)\n      ]\n      mutateOneWorkspace(workspace)\n\n      // Mutate projects\n      delOneProject({ id: project.id })\n    } catch (err) {\n      Error(errors.delError, err)\n\n      setLoading(false)\n    }\n  }\n\n  /**\n   * Render\n   */\n  return (\n    <>\n      <Button onClick={toggleDialog} icon={<DeleteOutlined />}>\n        Delete\n      </Button>\n      <DeleteDialog\n        visible={visible}\n        onCancel={toggleDialog}\n        onOk={handleDelete}\n        loading={loading}\n      >\n        Delete {project.title}\n      </DeleteDialog>\n    </>\n  )\n}\n\nexport default Delete\n"]},"metadata":{},"sourceType":"module"}