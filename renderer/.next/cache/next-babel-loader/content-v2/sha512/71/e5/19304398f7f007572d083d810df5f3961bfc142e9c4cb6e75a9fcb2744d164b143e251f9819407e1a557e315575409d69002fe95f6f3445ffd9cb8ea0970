{"ast":null,"code":"import _Layout from \"antd/lib/layout\";\nimport _Card from \"antd/lib/card\";\nimport _Steps from \"antd/lib/steps\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _Space from \"antd/lib/space\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _Button from \"antd/lib/button\";\nimport _Drawer from \"antd/lib/drawer\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _Tabs from \"antd/lib/tabs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport { CloudServerOutlined, EyeOutlined, EyeInvisibleOutlined, FileTextOutlined, RocketOutlined } from '@ant-design/icons';\nimport { Error } from '../../../assets/notification';\nimport CloudServer from './cloudServer';\nimport SimulationAPI from '../../../../../src/api/simulation';\n/**\n * Errors simulation/run\n * @memberof module:renderer/components/project/simulation\n */\n\nvar errors = {\n  runError: 'Unable to run the simulation',\n  updateError: 'Unable to update the simulation'\n};\n/**\n * Run\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\n\nvar Run = function Run(_ref) {\n  var _simulation$scheme;\n\n  var project = _ref.project,\n      simulation = _ref.simulation;\n\n  // State\n  var _useState = useState(false),\n      disabled = _useState[0],\n      setDisabled = _useState[1];\n\n  var _useState2 = useState(false),\n      cloudServerVisible = _useState2[0],\n      setCloudServerVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      running = _useState3[0],\n      setRunning = _useState3[1];\n\n  var _useState4 = useState(false),\n      logVisible = _useState4[0],\n      setLogVisible = _useState4[1];\n\n  var _useState5 = useState(),\n      logContent = _useState5[0],\n      setLogContent = _useState5[1];\n\n  var _useState6 = useState(),\n      meshingTasks = _useState6[0],\n      setMeshingTasks = _useState6[1];\n\n  var _useState7 = useState(),\n      simulatingTasks = _useState7[0],\n      setSimulatingTasks = _useState7[1];\n\n  var _useState8 = useState(simulation === null || simulation === void 0 ? void 0 : (_simulation$scheme = simulation.scheme) === null || _simulation$scheme === void 0 ? void 0 : _simulation$scheme.configuration),\n      configuration = _useState8[0],\n      setConfiguration = _useState8[1];\n\n  var _useState9 = useState(),\n      currentConfiguration = _useState9[0],\n      setCurrentConfiguration = _useState9[1]; // Data\n\n\n  var _SimulationAPI$useSim = SimulationAPI.useSimulation(simulation === null || simulation === void 0 ? void 0 : simulation.id, 500),\n      _SimulationAPI$useSim2 = _slicedToArray(_SimulationAPI$useSim, 1),\n      currentSimulation = _SimulationAPI$useSim2[0];\n\n  var _SimulationAPI$useSim3 = SimulationAPI.useSimulations(project === null || project === void 0 ? void 0 : project.simulations),\n      _SimulationAPI$useSim4 = _slicedToArray(_SimulationAPI$useSim3, 2),\n      mutateOneSimulation = _SimulationAPI$useSim4[1].mutateOneSimulation; // Check tasks\n\n\n  useEffect(function () {\n    var done = true;\n    configuration && Object.keys(configuration).forEach(function (key) {\n      if (key === 'part' || key === 'run') return;\n      if (!configuration[key].done) done = false;\n    });\n    if (!configuration.run.cloudServer) done = false;\n    setDisabled(!done);\n  }, configuration);\n  useEffect(function () {\n    var _currentSimulation$ta, _currentSimulation$ta2, _currentSimulation$ta3;\n\n    var meshing = currentSimulation === null || currentSimulation === void 0 ? void 0 : (_currentSimulation$ta = currentSimulation.tasks) === null || _currentSimulation$ta === void 0 ? void 0 : _currentSimulation$ta.filter(function (t) {\n      return t.type === 'mesh';\n    });\n    setMeshingTasks(meshing);\n    var simulating = currentSimulation === null || currentSimulation === void 0 ? void 0 : (_currentSimulation$ta2 = currentSimulation.tasks) === null || _currentSimulation$ta2 === void 0 ? void 0 : _currentSimulation$ta2.filter(function (t) {\n      return t.type === 'simulation';\n    });\n    setSimulatingTasks(simulating);\n    var runningTasks = currentSimulation === null || currentSimulation === void 0 ? void 0 : (_currentSimulation$ta3 = currentSimulation.tasks) === null || _currentSimulation$ta3 === void 0 ? void 0 : _currentSimulation$ta3.filter(function (t) {\n      return t.status !== 'finish' && t.status !== 'error';\n    });\n    if (runningTasks !== null && runningTasks !== void 0 && runningTasks.length) setRunning(true);else setRunning(false);\n  }, [JSON.stringify(currentSimulation)]);\n  useEffect(function () {\n    var _simulation$scheme2;\n\n    setConfiguration(simulation === null || simulation === void 0 ? void 0 : (_simulation$scheme2 = simulation.scheme) === null || _simulation$scheme2 === void 0 ? void 0 : _simulation$scheme2.configuration);\n  }, [JSON.stringify(simulation)]);\n  useEffect(function () {\n    var _currentSimulation$sc;\n\n    setCurrentConfiguration(currentSimulation === null || currentSimulation === void 0 ? void 0 : (_currentSimulation$sc = currentSimulation.scheme) === null || _currentSimulation$sc === void 0 ? void 0 : _currentSimulation$sc.configuration);\n  }, [JSON.stringify(currentSimulation)]);\n  useEffect(function () {\n    if ((currentConfiguration === null || currentConfiguration === void 0 ? void 0 : currentConfiguration.run.done) !== (configuration === null || configuration === void 0 ? void 0 : configuration.run.done) || (currentConfiguration === null || currentConfiguration === void 0 ? void 0 : currentConfiguration.run.error) !== (configuration === null || configuration === void 0 ? void 0 : configuration.run.error)) mutateOneSimulation(currentSimulation);\n  }, [JSON.stringify(configuration), JSON.stringify(currentConfiguration)]);\n  /**\n   * On run\n   */\n\n  var onRun = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setRunning(true);\n              SimulationAPI.run({\n                id: simulation.id\n              })[\"catch\"](function (err) {\n                Error(errors.runError, err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onRun() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\n   * On log\n   * @param {Array} tasks Tasks\n   * @param {string} title Tabs title\n   */\n\n\n  var onLog = function onLog(tasks, title) {\n    // Content\n    var content = tasks.map(function (t, index) {\n      var _t$log;\n\n      return /*#__PURE__*/_jsx(_Tabs.TabPane, {\n        tab: title + ' ' + (index + 1),\n        children: /*#__PURE__*/_jsx(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: t === null || t === void 0 ? void 0 : (_t$log = t.log) === null || _t$log === void 0 ? void 0 : _t$log.replace(/\\n\\n/g, '\\n').replace(/\\n/g, '<br />')\n          }\n        })\n      }, index);\n    });\n    setLogContent( /*#__PURE__*/_jsx(_Tabs, {\n      children: content\n    })); // Open\n\n    toggleLog();\n  };\n  /**\n   * Toogle log visibility\n   */\n\n\n  var toggleLog = function toggleLog() {\n    setLogVisible(!logVisible);\n  };\n  /**\n   * Set part\n   * @param {Object} file File\n   */\n\n\n  var setPart = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(file) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // Update local\n              currentConfiguration.part = file;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return SimulationAPI.update({\n                id: simulation.id\n              }, [{\n                key: 'scheme',\n                type: 'json',\n                method: 'diff',\n                path: ['configuration', 'part'],\n                value: file\n              }]);\n\n            case 4:\n              // Mutate\n              mutateOneSimulation(currentSimulation);\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](1);\n              Error(errors.updateError, _context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 7]]);\n    }));\n\n    return function setPart(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var resultFiles = [];\n  simulatingTasks === null || simulatingTasks === void 0 ? void 0 : simulatingTasks.forEach(function (task) {\n    resultFiles.push.apply(resultFiles, _toConsumableArray(task.files || []));\n  });\n  /**\n   * Render\n   */\n\n  return /*#__PURE__*/_jsx(_Layout, {\n    children: /*#__PURE__*/_jsxs(_Layout.Content, {\n      children: [/*#__PURE__*/_jsx(CloudServer, {\n        visible: cloudServerVisible,\n        onCancel: function onCancel() {\n          return setCloudServerVisible(false);\n        }\n      }), /*#__PURE__*/_jsx(_Drawer, {\n        title: \"Log\",\n        visible: logVisible,\n        onClose: toggleLog,\n        width: 512,\n        children: logContent\n      }), /*#__PURE__*/_jsxs(_Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxs(_Space, {\n          children: [/*#__PURE__*/_jsx(_Button, {\n            icon: /*#__PURE__*/_jsx(CloudServerOutlined, {}),\n            onClick: function onClick() {\n              return setCloudServerVisible(true);\n            }\n          }), /*#__PURE__*/_jsx(_Button, {\n            disabled: disabled,\n            icon: /*#__PURE__*/_jsx(RocketOutlined, {}),\n            loading: running,\n            onClick: onRun,\n            children: \"Run\"\n          })]\n        }), /*#__PURE__*/_jsxs(_Steps, {\n          direction: \"vertical\",\n          children: [meshingTasks === null || meshingTasks === void 0 ? void 0 : meshingTasks.map(function (task, index) {\n            var _currentConfiguration, _task$file;\n\n            return /*#__PURE__*/_jsx(_Steps.Step, {\n              title: \"Meshing\",\n              description: /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(_Button, {\n                  icon: /*#__PURE__*/_jsx(FileTextOutlined, {}),\n                  onClick: function onClick() {\n                    return onLog(meshingTasks, 'Mesh');\n                  },\n                  size: \"small\"\n                }), /*#__PURE__*/_jsx(_Button, {\n                  icon: ((_currentConfiguration = currentConfiguration.part) === null || _currentConfiguration === void 0 ? void 0 : _currentConfiguration.fileName) === ((_task$file = task.file) === null || _task$file === void 0 ? void 0 : _task$file.fileName) ? /*#__PURE__*/_jsx(EyeInvisibleOutlined, {}) : /*#__PURE__*/_jsx(EyeOutlined, {}),\n                  size: \"small\",\n                  onClick: function onClick() {\n                    var _currentConfiguration2, _task$file2;\n\n                    return setPart(((_currentConfiguration2 = currentConfiguration.part) === null || _currentConfiguration2 === void 0 ? void 0 : _currentConfiguration2.fileName) === ((_task$file2 = task.file) === null || _task$file2 === void 0 ? void 0 : _task$file2.fileName) ? null : task.file);\n                  }\n                })]\n              }),\n              subTitle: '(' + (index + 1) + '/' + (meshingTasks === null || meshingTasks === void 0 ? void 0 : meshingTasks.length) + ')',\n              status: task.status\n            }, task);\n          }), simulatingTasks === null || simulatingTasks === void 0 ? void 0 : simulatingTasks.map(function (task, index) {\n            return /*#__PURE__*/_jsx(_Steps.Step, {\n              title: \"Simulating\",\n              description: /*#__PURE__*/_jsx(_Button, {\n                icon: /*#__PURE__*/_jsx(FileTextOutlined, {}),\n                onClick: function onClick() {\n                  return onLog(simulatingTasks, 'Simulation');\n                },\n                size: \"small\"\n              }),\n              subTitle: '(' + (index + 1) + '/' + (simulatingTasks === null || simulatingTasks === void 0 ? void 0 : simulatingTasks.length) + ')',\n              status: task.status\n            }, task);\n          })]\n        }), resultFiles.length ? /*#__PURE__*/_jsx(_Card, {\n          title: \"Results\",\n          children: /*#__PURE__*/_jsx(_Space, {\n            direction: \"vertical\",\n            children: resultFiles.map(function (result) {\n              var _currentConfiguration3, _currentConfiguration4;\n\n              return /*#__PURE__*/_jsxs(_Space, {\n                children: [/*#__PURE__*/_jsx(_Button, {\n                  icon: ((_currentConfiguration3 = currentConfiguration.part) === null || _currentConfiguration3 === void 0 ? void 0 : _currentConfiguration3.fileName) === (result === null || result === void 0 ? void 0 : result.fileName) && ((_currentConfiguration4 = currentConfiguration.part) === null || _currentConfiguration4 === void 0 ? void 0 : _currentConfiguration4.name) === (result === null || result === void 0 ? void 0 : result.name) ? /*#__PURE__*/_jsx(EyeInvisibleOutlined, {}) : /*#__PURE__*/_jsx(EyeOutlined, {}),\n                  onClick: function onClick() {\n                    var _currentConfiguration5, _currentConfiguration6;\n\n                    return setPart(((_currentConfiguration5 = currentConfiguration.part) === null || _currentConfiguration5 === void 0 ? void 0 : _currentConfiguration5.fileName) === (result === null || result === void 0 ? void 0 : result.fileName) && ((_currentConfiguration6 = currentConfiguration.part) === null || _currentConfiguration6 === void 0 ? void 0 : _currentConfiguration6.name) === (result === null || result === void 0 ? void 0 : result.name) ? null : result);\n                  }\n                }), result.name]\n              }, result.name);\n            })\n          })\n        }) : null]\n      })]\n    })\n  });\n};\n\nexport default Run;","map":null,"metadata":{},"sourceType":"module"}