{"ast":null,"code":"import _Space from \"antd/lib/space\";\nimport _Button from \"antd/lib/button\";\nimport _Select from \"antd/lib/select\";\nimport _Form from \"antd/lib/form\";\nimport { createElement as _createElement } from \"react\";\nimport _Input from \"antd/lib/input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/account/hpc/pluginForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\n\n/**\n * Plugin form\n * @param {Object} props Props\n */\nconst PluginForm = ({\n  plugin,\n  onFinish,\n  onCancel\n}) => {\n  // State\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // Data\n\n  const layout = {\n    labelCol: {\n      span: 2\n    },\n    wrapperCol: {\n      span: 8\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 2,\n      span: 8\n    }\n  };\n  /**\n   * Build input item\n   * @param {Object} item Item\n   * @param {string} key Key\n   */\n\n  const inputItem = (item, key) => {\n    return /*#__PURE__*/_createElement(_Form.Item, _objectSpread(_objectSpread({}, layout), {}, {\n      key: item.label,\n      name: key,\n      label: item.label,\n      htmlFor: 'input-' + key,\n      rules: [{\n        required: true,\n        message: \"'\" + item.label + \"' is required\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/_jsxDEV(_Input, {\n      id: 'input-' + key,\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this));\n  };\n  /**\n   * Build password item\n   * @param {Object} item Item\n   * @param {string} key Key\n   */\n\n\n  const passwordItem = (item, key) => {\n    return /*#__PURE__*/_createElement(_Form.Item, _objectSpread(_objectSpread({}, layout), {}, {\n      key: item.label,\n      name: key,\n      label: item.label,\n      htmlFor: 'input-' + key,\n      rules: [{\n        required: true,\n        message: \"'\" + item.label + \"' is required\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/_jsxDEV(_Input, {\n      id: 'input-' + key,\n      type: \"password\",\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this));\n  };\n  /**\n   * Build select item\n   * @param {Object} item Item\n   * @param {string} key Key\n   */\n\n\n  const selectItem = (item, key) => {\n    return /*#__PURE__*/_createElement(_Form.Item, _objectSpread(_objectSpread({}, layout), {}, {\n      key: item.label,\n      name: key,\n      label: item.label,\n      htmlFor: 'select-' + key,\n      rules: [{\n        required: true,\n        message: \"'\" + item.label + \"' is required\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/_jsxDEV(_Select, {\n      id: 'select-' + key,\n      children: item.options.map(option => {\n        return /*#__PURE__*/_jsxDEV(_Select.Option, {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this));\n  };\n  /**\n   * On finish\n   * @param {Object} values Values\n   */\n\n\n  const onFinishInternal = async values => {\n    setLoading(true);\n\n    try {\n      await onFinish(values);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }; // Initial values\n\n\n  const initialValues = {};\n  Object.keys(plugin.configuration).forEach(key => {\n    initialValues[key] = plugin.configuration[key].value;\n  });\n  /**\n   * Render\n   */\n\n  return /*#__PURE__*/_jsxDEV(_Form, _objectSpread(_objectSpread({}, layout), {}, {\n    onFinish: onFinishInternal,\n    initialValues: initialValues,\n    autoComplete: \"off\",\n    children: [Object.keys(plugin.configuration).map(key => {\n      const item = plugin.configuration[key];\n      if (item.type === 'input') return inputItem(item, key);else if (item.type === 'password') return passwordItem(item, key);else if (item.type === 'select') return selectItem(item, key);\n    }), /*#__PURE__*/_jsxDEV(_Form.Item, _objectSpread(_objectSpread({}, tailLayout), {}, {\n      children: /*#__PURE__*/_jsxDEV(_Space, {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          loading: loading,\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          onClick: onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PluginForm;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/account/hpc/pluginForm.js"],"names":["useState","PluginForm","plugin","onFinish","onCancel","loading","setLoading","layout","labelCol","span","wrapperCol","tailLayout","offset","inputItem","item","key","label","required","message","passwordItem","selectItem","options","map","option","onFinishInternal","values","err","console","error","initialValues","Object","keys","configuration","forEach","value","type"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { Button, Form, Input, Select, Space } from 'antd'\n\n/**\n * Plugin form\n * @param {Object} props Props\n */\nconst PluginForm = ({ plugin, onFinish, onCancel }) => {\n  // State\n  const [loading, setLoading] = useState(false)\n\n  // Data\n  const layout = {\n    labelCol: { span: 2 },\n    wrapperCol: { span: 8 }\n  }\n  const tailLayout = {\n    wrapperCol: { offset: 2, span: 8 }\n  }\n\n  /**\n   * Build input item\n   * @param {Object} item Item\n   * @param {string} key Key\n   */\n  const inputItem = (item, key) => {\n    return (\n      <Form.Item\n        {...layout}\n        key={item.label}\n        name={key}\n        label={item.label}\n        htmlFor={'input-' + key}\n        rules={[\n          { required: true, message: \"'\" + item.label + \"' is required\" }\n        ]}\n      >\n        <Input id={'input-' + key} autoComplete=\"off\" />\n      </Form.Item>\n    )\n  }\n\n  /**\n   * Build password item\n   * @param {Object} item Item\n   * @param {string} key Key\n   */\n  const passwordItem = (item, key) => {\n    return (\n      <Form.Item\n        {...layout}\n        key={item.label}\n        name={key}\n        label={item.label}\n        htmlFor={'input-' + key}\n        rules={[\n          { required: true, message: \"'\" + item.label + \"' is required\" }\n        ]}\n      >\n        <Input id={'input-' + key} type=\"password\" autoComplete=\"off\" />\n      </Form.Item>\n    )\n  }\n\n  /**\n   * Build select item\n   * @param {Object} item Item\n   * @param {string} key Key\n   */\n  const selectItem = (item, key) => {\n    return (\n      <Form.Item\n        {...layout}\n        key={item.label}\n        name={key}\n        label={item.label}\n        htmlFor={'select-' + key}\n        rules={[\n          { required: true, message: \"'\" + item.label + \"' is required\" }\n        ]}\n      >\n        <Select id={'select-' + key}>\n          {item.options.map((option) => {\n            return (\n              <Select.Option key={option} value={option}>\n                {option}\n              </Select.Option>\n            )\n          })}\n        </Select>\n      </Form.Item>\n    )\n  }\n\n  /**\n   * On finish\n   * @param {Object} values Values\n   */\n  const onFinishInternal = async (values) => {\n    setLoading(true)\n    try {\n      await onFinish(values)\n    } catch (err) {\n      console.error(err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Initial values\n  const initialValues = {}\n  Object.keys(plugin.configuration).forEach((key) => {\n    initialValues[key] = plugin.configuration[key].value\n  })\n\n  /**\n   * Render\n   */\n  return (\n    <Form\n      {...layout}\n      onFinish={onFinishInternal}\n      initialValues={initialValues}\n      autoComplete=\"off\"\n    >\n      {Object.keys(plugin.configuration).map((key) => {\n        const item = plugin.configuration[key]\n        if (item.type === 'input') return inputItem(item, key)\n        else if (item.type === 'password') return passwordItem(item, key)\n        else if (item.type === 'select') return selectItem(item, key)\n      })}\n      <Form.Item {...tailLayout}>\n        <Space>\n          <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n            Save\n          </Button>\n          <Button onClick={onCancel}>Cancel</Button>\n        </Space>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default PluginForm\n"]},"metadata":{},"sourceType":"module"}