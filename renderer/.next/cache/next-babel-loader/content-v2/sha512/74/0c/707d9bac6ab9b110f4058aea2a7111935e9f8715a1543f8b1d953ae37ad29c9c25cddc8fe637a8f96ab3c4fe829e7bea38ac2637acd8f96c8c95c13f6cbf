{"ast":null,"code":"import _Drawer from \"antd/lib/drawer\";\nimport _Space from \"antd/lib/space\";\nimport _Button from \"antd/lib/button\";\nimport _Radio from \"antd/lib/radio\";\nimport _Card from \"antd/lib/card\";\nimport _Input from \"antd/lib/input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/boundaryConditions/boundaryCondition/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport Formula from '../../../../assets/formula';\nimport Selector from '../../../../assets/selector';\nimport Add from '../add';\nimport Edit from '../edit';\n/**\n * Boundary condition\n * @param {Object} props Props\n */\n\nvar BoundaryCondition = function BoundaryCondition(_ref) {\n  _s();\n\n  var _current$type, _current$type2, _current$type3, _current$type3$childr;\n\n  var project = _ref.project,\n      simulation = _ref.simulation,\n      visible = _ref.visible,\n      part = _ref.part,\n      boundaryConditions = _ref.boundaryConditions,\n      boundaryCondition = _ref.boundaryCondition,\n      close = _ref.close;\n\n  var _useState = useState({\n    name: 'New boundary condition'\n  }),\n      current = _useState[0],\n      setCurrent = _useState[1];\n\n  var _useState2 = useState(true),\n      disabled = _useState2[0],\n      setDisabled = _useState2[1]; // Data\n\n\n  var types = Object.keys(boundaryConditions).map(function (type) {\n    if (type === 'index' || type === 'title' || type === 'done') return;\n    return {\n      key: type,\n      label: boundaryConditions[type].label,\n      children: boundaryConditions[type].children\n    };\n  }).filter(function (t) {\n    return t;\n  }); // Edit\n\n  useEffect(function () {\n    if (boundaryCondition) setCurrent(boundaryCondition);\n  }, [boundaryCondition]); // Disabled\n\n  useEffect(function () {\n    var _current$selected, _current$values;\n\n    if (!current || !current.name || !((_current$selected = current.selected) !== null && _current$selected !== void 0 && _current$selected.length) || !((_current$values = current.values) !== null && _current$values !== void 0 && _current$values.length)) setDisabled(true);else setDisabled(false);\n  }, [current]);\n  /**\n   * On name\n   * @param {Object} event Event\n   */\n\n  var onName = function onName(event) {\n    var name = event.target.value;\n    setCurrent(_objectSpread(_objectSpread({}, current), {}, {\n      name: name\n    }));\n  };\n  /**\n   * On type\n   * @param {Object} event Event\n   */\n\n\n  var onType = function onType(event) {\n    var key = event.target.value;\n    var type = types.find(function (t) {\n      return t.key === key;\n    });\n    var values = boundaryConditions[key].children ? boundaryConditions[key].children.map(function (child) {\n      return child[\"default\"];\n    }) : [0];\n    setCurrent(_objectSpread(_objectSpread({}, current), {}, {\n      type: type,\n      values: values\n    }));\n  };\n  /**\n   * On change\n   * @param {number} index Index\n   * @param {string} value Value\n   */\n\n\n  var _onChange = function onChange(index, value) {\n    setCurrent(_objectSpread(_objectSpread({}, current), {}, {\n      values: [].concat(_toConsumableArray(current.values.slice(0, index)), [value], _toConsumableArray(current.values.slice(index + 1)))\n    }));\n  };\n  /**\n   * On selected\n   * @param {Array} selected Selected\n   */\n\n\n  var onSelected = function onSelected(selected) {\n    setCurrent(_objectSpread(_objectSpread({}, current), {}, {\n      selected: selected\n    }));\n  };\n  /**\n   * On close\n   */\n\n\n  var onClose = function onClose() {\n    setCurrent({\n      name: 'New boundary condition'\n    });\n    close();\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Drawer, {\n    title: \"Boundary condition\",\n    placement: \"left\",\n    closable: false,\n    visible: visible,\n    mask: false,\n    maskClosable: false,\n    width: 300,\n    children: [/*#__PURE__*/_jsxDEV(_Card, {\n      title: \"Boundary condition name\",\n      children: /*#__PURE__*/_jsxDEV(_Input, {\n        value: (current === null || current === void 0 ? void 0 : current.name) || '',\n        onChange: onName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Card, {\n      title: \"Boundary condition type\",\n      children: /*#__PURE__*/_jsxDEV(_Radio.Group, {\n        buttonStyle: \"solid\",\n        value: current === null || current === void 0 ? void 0 : (_current$type = current.type) === null || _current$type === void 0 ? void 0 : _current$type.key,\n        onChange: onType,\n        children: types === null || types === void 0 ? void 0 : types.map(function (type) {\n          return /*#__PURE__*/_jsxDEV(_Radio.Button, {\n            value: type.key,\n            children: type.label\n          }, type.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, _this), (current === null || current === void 0 ? void 0 : current.type) && (current === null || current === void 0 ? void 0 : (_current$type2 = current.type) === null || _current$type2 === void 0 ? void 0 : _current$type2.children) && /*#__PURE__*/_jsxDEV(_Card, {\n      children: current === null || current === void 0 ? void 0 : (_current$type3 = current.type) === null || _current$type3 === void 0 ? void 0 : (_current$type3$childr = _current$type3.children) === null || _current$type3$childr === void 0 ? void 0 : _current$type3$childr.map(function (child, index) {\n        var _current$values2, _current$type4, _current$type4$childr, _current$type4$childr2, _current$values3;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [child.label, /*#__PURE__*/_jsxDEV(Formula, {\n            defaultValue: (current === null || current === void 0 ? void 0 : (_current$values2 = current.values) === null || _current$values2 === void 0 ? void 0 : _current$values2[index]) === undefined ? current === null || current === void 0 ? void 0 : (_current$type4 = current.type) === null || _current$type4 === void 0 ? void 0 : (_current$type4$childr = _current$type4.children) === null || _current$type4$childr === void 0 ? void 0 : (_current$type4$childr2 = _current$type4$childr[index]) === null || _current$type4$childr2 === void 0 ? void 0 : _current$type4$childr2[\"default\"] : current === null || current === void 0 ? void 0 : (_current$values3 = current.values) === null || _current$values3 === void 0 ? void 0 : _current$values3[index],\n            onChange: function onChange(value) {\n              return _onChange(index, value);\n            },\n            unit: child.unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Selector, {\n      part: part,\n      updateSelected: onSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Space, {\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        type: \"danger\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, _this), boundaryCondition ? /*#__PURE__*/_jsxDEV(Edit, {\n        disabled: disabled,\n        boundaryCondition: current,\n        oldBoundaryCondition: boundaryCondition,\n        project: project,\n        simulation: simulation,\n        part: part,\n        close: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(Add, {\n        disabled: disabled,\n        boundaryCondition: current,\n        project: project,\n        simulation: simulation,\n        part: part,\n        close: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BoundaryCondition, \"55sMycH15AIaFhFFMzFhE800jDk=\");\n\n_c = BoundaryCondition;\nexport default BoundaryCondition;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoundaryCondition\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/boundaryConditions/boundaryCondition/index.js"],"names":["useState","useEffect","Formula","Selector","Add","Edit","BoundaryCondition","project","simulation","visible","part","boundaryConditions","boundaryCondition","close","name","current","setCurrent","disabled","setDisabled","types","Object","keys","map","type","key","label","children","filter","t","selected","length","values","onName","event","target","value","onType","find","child","onChange","index","slice","onSelected","onClose","undefined","unit"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Button, Card, Drawer, Input, Radio, Space } from 'antd'\n\nimport Formula from '../../../../assets/formula'\nimport Selector from '../../../../assets/selector'\nimport Add from '../add'\nimport Edit from '../edit'\n\n/**\n * Boundary condition\n * @param {Object} props Props\n */\nconst BoundaryCondition = ({\n  project,\n  simulation,\n  visible,\n  part,\n  boundaryConditions,\n  boundaryCondition,\n  close\n}) => {\n  const [current, setCurrent] = useState({\n    name: 'New boundary condition'\n  })\n  const [disabled, setDisabled] = useState(true)\n\n  // Data\n  const types = Object.keys(boundaryConditions)\n    .map((type) => {\n      if (type === 'index' || type === 'title' || type === 'done') return\n      return {\n        key: type,\n        label: boundaryConditions[type].label,\n        children: boundaryConditions[type].children\n      }\n    })\n    .filter((t) => t)\n\n  // Edit\n  useEffect(() => {\n    if (boundaryCondition) setCurrent(boundaryCondition)\n  }, [boundaryCondition])\n\n  // Disabled\n  useEffect(() => {\n    if (\n      !current ||\n      !current.name ||\n      !current.selected?.length ||\n      !current.values?.length\n    )\n      setDisabled(true)\n    else setDisabled(false)\n  }, [current])\n\n  /**\n   * On name\n   * @param {Object} event Event\n   */\n  const onName = (event) => {\n    const name = event.target.value\n    setCurrent({\n      ...current,\n      name: name\n    })\n  }\n\n  /**\n   * On type\n   * @param {Object} event Event\n   */\n  const onType = (event) => {\n    const key = event.target.value\n    const type = types.find((t) => t.key === key)\n    const values = boundaryConditions[key].children\n      ? boundaryConditions[key].children.map((child) => child.default)\n      : [0]\n    setCurrent({\n      ...current,\n      type: type,\n      values: values\n    })\n  }\n\n  /**\n   * On change\n   * @param {number} index Index\n   * @param {string} value Value\n   */\n  const onChange = (index, value) => {\n    setCurrent({\n      ...current,\n      values: [\n        ...current.values.slice(0, index),\n        value,\n        ...current.values.slice(index + 1)\n      ]\n    })\n  }\n\n  /**\n   * On selected\n   * @param {Array} selected Selected\n   */\n  const onSelected = (selected) => {\n    setCurrent({\n      ...current,\n      selected: selected\n    })\n  }\n\n  /**\n   * On close\n   */\n  const onClose = () => {\n    setCurrent({\n      name: 'New boundary condition'\n    })\n    close()\n  }\n\n  /**\n   * Render\n   */\n  return (\n    <Drawer\n      title=\"Boundary condition\"\n      placement=\"left\"\n      closable={false}\n      visible={visible}\n      mask={false}\n      maskClosable={false}\n      width={300}\n    >\n      <Card title=\"Boundary condition name\">\n        <Input value={current?.name || ''} onChange={onName} />\n      </Card>\n      <Card title=\"Boundary condition type\">\n        <Radio.Group\n          buttonStyle=\"solid\"\n          value={current?.type?.key}\n          onChange={onType}\n        >\n          {types?.map((type) => {\n            return (\n              <Radio.Button key={type.key} value={type.key}>\n                {type.label}\n              </Radio.Button>\n            )\n          })}\n        </Radio.Group>\n      </Card>\n      {current?.type && current?.type?.children && (\n        <Card>\n          {current?.type?.children?.map((child, index) => {\n            return (\n              <div key={index}>\n                {child.label}\n                <Formula\n                  defaultValue={\n                    current?.values?.[index] === undefined\n                      ? current?.type?.children?.[index]?.default\n                      : current?.values?.[index]\n                  }\n                  onChange={(value) => onChange(index, value)}\n                  unit={child.unit}\n                />\n              </div>\n            )\n          })}\n        </Card>\n      )}\n      <Selector part={part} updateSelected={onSelected} />\n      <Space>\n        <Button type=\"danger\" onClick={onClose}>\n          Cancel\n        </Button>\n        {boundaryCondition ? (\n          <Edit\n            disabled={disabled}\n            boundaryCondition={current}\n            oldBoundaryCondition={boundaryCondition}\n            project={project}\n            simulation={simulation}\n            part={part}\n            close={onClose}\n          />\n        ) : (\n          <Add\n            disabled={disabled}\n            boundaryCondition={current}\n            project={project}\n            simulation={simulation}\n            part={part}\n            close={onClose}\n          />\n        )}\n      </Space>\n    </Drawer>\n  )\n}\n\nexport default BoundaryCondition\n"]},"metadata":{},"sourceType":"module"}