{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Modal from \"antd/lib/modal\";\nimport _Space from \"antd/lib/space\";\nimport _Card from \"antd/lib/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/cloudServer/index.js\";\nimport { useState } from 'react';\nimport { CloudServerOutlined } from '@ant-design/icons';\nimport merge from 'lodash.merge';\nimport Plugins from '../../../../../plugin';\nimport PluginAPI from '../../../../../../src/api/plugin';\n\nconst CloudServer = ({\n  onOk\n}) => {\n  // State\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false); // Data\n\n  const [plugins] = PluginAPI.usePlugins();\n\n  const close = () => {\n    setVisible(false);\n  };\n\n  const onMerge = (plugin, diff) => {\n    // Merge\n    merge(plugin, diff); // Close\n\n    close(); // Ok\n\n    onOk(plugin);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Card, {\n    children: [/*#__PURE__*/_jsxDEV(_Modal, {\n      visible: visible,\n      title: \"Cloud server\",\n      onOk: () => {},\n      okButtonProps: {\n        disabled: true,\n        style: {\n          display: 'none'\n        }\n      },\n      onCancel: close,\n      children: /*#__PURE__*/_jsxDEV(_Space, {\n        align: \"start\",\n        direction: \"horizontal\",\n        children: plugins === null || plugins === void 0 ? void 0 : plugins.map(plugin => {\n          const base = Plugins[plugin.key];\n          return /*#__PURE__*/_jsxDEV(_Card, {\n            title: plugin.name,\n            children: /*#__PURE__*/_jsxDEV(base.renderer, {\n              data: plugin.data,\n              onSelect: diff => onMerge(plugin, diff)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, plugin.uuid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Button, {\n      icon: /*#__PURE__*/_jsxDEV(CloudServerOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this),\n      onClick: () => setVisible(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CloudServer;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/cloudServer/index.js"],"names":["useState","CloudServerOutlined","merge","Plugins","PluginAPI","CloudServer","onOk","visible","setVisible","plugins","usePlugins","close","onMerge","plugin","diff","disabled","style","display","map","base","key","name","data","uuid"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,mBAAT,QAAoC,mBAApC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,KAAD,CAAtC,CAFgC,CAGhC;;AACA,QAAM,CAACS,OAAD,IAAYL,SAAS,CAACM,UAAV,EAAlB;;AAEA,QAAMC,KAAK,GAAG,MAAM;AAClBH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,QAAMI,OAAO,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AAChC;AACAZ,IAAAA,KAAK,CAACW,MAAD,EAASC,IAAT,CAAL,CAFgC,CAIhC;;AACAH,IAAAA,KAAK,GAL2B,CAOhC;;AACAL,IAAAA,IAAI,CAACO,MAAD,CAAJ;AACD,GATD;;AAWA,sBACE;AAAA,4BACE;AACE,MAAA,OAAO,EAAEN,OADX;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,IAAI,EAAE,MAAM,CAAE,CAHhB;AAIE,MAAA,aAAa,EAAE;AACbQ,QAAAA,QAAQ,EAAE,IADG;AAEbC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAFM,OAJjB;AAQE,MAAA,QAAQ,EAAEN,KARZ;AAAA,6BAUE;AAAO,QAAA,KAAK,EAAC,OAAb;AAAqB,QAAA,SAAS,EAAC,YAA/B;AAAA,kBACGF,OADH,aACGA,OADH,uBACGA,OAAO,CAAES,GAAT,CAAcL,MAAD,IAAY;AACxB,gBAAMM,IAAI,GAAGhB,OAAO,CAACU,MAAM,CAACO,GAAR,CAApB;AAEA,8BACE;AAAwB,YAAA,KAAK,EAAEP,MAAM,CAACQ,IAAtC;AAAA,mCACE,QAAC,IAAD,CAAM,QAAN;AACE,cAAA,IAAI,EAAER,MAAM,CAACS,IADf;AAEE,cAAA,QAAQ,EAAGR,IAAD,IAAUF,OAAO,CAACC,MAAD,EAASC,IAAT;AAF7B;AAAA;AAAA;AAAA;AAAA;AADF,aAAWD,MAAM,CAACU,IAAlB;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SAXA;AADH;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE;AAAQ,MAAA,IAAI,eAAE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,cAAd;AAAuC,MAAA,OAAO,EAAE,MAAMf,UAAU,CAAC,IAAD;AAAhE;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAnDD;;AAqDA,eAAeH,WAAf","sourcesContent":["import { useState } from 'react'\nimport { Button, Card, Modal, Space } from 'antd'\nimport { CloudServerOutlined } from '@ant-design/icons'\nimport merge from 'lodash.merge'\n\nimport Plugins from '../../../../../plugin'\n\nimport PluginAPI from '../../../../../../src/api/plugin'\n\nconst CloudServer = ({ onOk }) => {\n  // State\n  const [visible, setVisible] = useState(false)\n  // Data\n  const [plugins] = PluginAPI.usePlugins()\n\n  const close = () => {\n    setVisible(false)\n  }\n\n  const onMerge = (plugin, diff) => {\n    // Merge\n    merge(plugin, diff)\n\n    // Close\n    close()\n\n    // Ok\n    onOk(plugin)\n  }\n\n  return (\n    <Card>\n      <Modal\n        visible={visible}\n        title=\"Cloud server\"\n        onOk={() => {}}\n        okButtonProps={{\n          disabled: true,\n          style: { display: 'none' }\n        }}\n        onCancel={close}\n      >\n        <Space align=\"start\" direction=\"horizontal\">\n          {plugins?.map((plugin) => {\n            const base = Plugins[plugin.key]\n\n            return (\n              <Card key={plugin.uuid} title={plugin.name}>\n                <base.renderer\n                  data={plugin.data}\n                  onSelect={(diff) => onMerge(plugin, diff)}\n                />\n              </Card>\n            )\n          })}\n        </Space>\n      </Modal>\n      <Button icon={<CloudServerOutlined />} onClick={() => setVisible(true)} />\n    </Card>\n  )\n}\n\nexport default CloudServer\n"]},"metadata":{},"sourceType":"module"}