{"ast":null,"code":"import _Table from \"antd/lib/table\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Typography from \"antd/lib/typography\";\nimport _Avatar from \"antd/lib/avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/plugin/rescale/renderer/index.js\";\n\nconst Rescale = ({\n  data\n}) => {\n  console.log(data.coreTypes);\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (text, record, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_Avatar, {\n        style: {\n          marginRight: '-15px',\n          background: 'linear-gradient(to right,' + record.color + ', rgba(255, 255, 255, 0))',\n          opacity: 0.5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Typography.Text, {\n        strong: true,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), record.processorInfo]\n    }, void 0, true)\n  }, {\n    title: 'Cores',\n    dataIndex: 'cores',\n    key: 'cores',\n    render: cores => cores.join(', ')\n  }, {\n    title: 'Pro Price',\n    dataIndex: 'price',\n    key: 'price'\n  }, {\n    title: 'Price',\n    dataIndex: 'lowPriorityPrice',\n    key: 'lowPriorityPrice'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n      children: [\"More information on\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.rescale.com/infrastructure/\",\n        target: \"_blank\",\n        children: \"Rescale website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Table, {\n      dataSource: data.coreTypes,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Rescale;\n{\n  /* <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space> */\n}","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/plugin/rescale/renderer/index.js"],"names":["Rescale","data","console","log","coreTypes","columns","title","dataIndex","key","render","text","record","index","marginRight","background","color","opacity","processorInfo","cores","join"],"mappings":";;;;;;;AAEA,MAAMA,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,SAAjB;AAEA,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEC,IAAAA,GAAG,EAAE,MAHP;AAIEC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,kBACN;AAAA,8BACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE,OADR;AAELC,UAAAA,UAAU,EACR,8BACAH,MAAM,CAACI,KADP,GAEA,2BALG;AAMLC,UAAAA,OAAO,EAAE;AANJ;AADT;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,oBAAY,IAAZ;AAAiB,QAAA,MAAM,EAAE,IAAzB;AAAA,kBAAgCN;AAAhC;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAA;AAAA;AAAA;AAAA,cAZF,EAaGC,MAAM,CAACM,aAbV;AAAA;AALJ,GADc,EAuBd;AACEX,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEC,IAAAA,GAAG,EAAE,OAHP;AAIEC,IAAAA,MAAM,EAAGS,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAW,IAAX;AAJrB,GAvBc,EA6Bd;AACEb,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GA7Bc,EAkCd;AACEF,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,SAAS,EAAE,kBAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAlCc,CAAhB;AAyCA,sBACE;AAAA,4BACE,oBAAY,IAAZ;AAAA,wCACsB,GADtB,eAEE;AAAG,QAAA,IAAI,EAAC,yCAAR;AAAkD,QAAA,MAAM,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAO,MAAA,UAAU,EAAEP,IAAI,CAACG,SAAxB;AAAmC,MAAA,OAAO,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAxDD;;AA0DA,eAAeL,OAAf;AAEA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC","sourcesContent":["import { Avatar, Table, Typography } from 'antd'\n\nconst Rescale = ({ data }) => {\n  console.log(data.coreTypes)\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text, record, index) => (\n        <>\n          <Avatar\n            style={{\n              marginRight: '-15px',\n              background:\n                'linear-gradient(to right,' +\n                record.color +\n                ', rgba(255, 255, 255, 0))',\n              opacity: 0.5\n            }}\n          />\n          <Typography.Text strong={true}>{text}</Typography.Text>\n          <br />\n          {record.processorInfo}\n        </>\n      )\n    },\n    {\n      title: 'Cores',\n      dataIndex: 'cores',\n      key: 'cores',\n      render: (cores) => cores.join(', ')\n    },\n    {\n      title: 'Pro Price',\n      dataIndex: 'price',\n      key: 'price'\n    },\n    {\n      title: 'Price',\n      dataIndex: 'lowPriorityPrice',\n      key: 'lowPriorityPrice'\n    }\n  ]\n\n  return (\n    <div>\n      <Typography.Text>\n        More information on{' '}\n        <a href=\"https://www.rescale.com/infrastructure/\" target=\"_blank\">\n          Rescale website\n        </a>\n        .\n      </Typography.Text>\n      <Table dataSource={data.coreTypes} columns={columns} />\n    </div>\n  )\n}\n\nexport default Rescale\n\n{\n  /* <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space> */\n}\n"]},"metadata":{},"sourceType":"module"}