{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/assets/selector/index.js\";\n\n/** @module renderer/components/assets/selector */\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { highlight, unhighlight, select, unselect } from '../../../store/select/action';\n/**\n * Selector\n * @param {Object} props Props\n */\n\nconst Selector = ({\n  part,\n  updateSelected\n}) => {\n  // Store\n  const {\n    type,\n    highlighted,\n    selected\n  } = useSelector(state => ({\n    type: state.select.type,\n    highlighted: state.select.highlighted,\n    selected: state.select.selected\n  }));\n  const dispatch = useDispatch(); // Selected\n\n  useEffect(() => {\n    updateSelected(selected);\n  }, [selected]);\n  /**\n   * On highglight\n   * @param {string} uuid UUID\n   */\n\n  const onHighlight = uuid => {\n    dispatch(highlight(uuid));\n  };\n  /**\n   * On unhighlight\n   */\n\n\n  const onUnhighlight = () => {\n    dispatch(unhighlight());\n  };\n  /**\n   * On select\n   * @param {string} uuid UUID\n   */\n\n\n  const onSelect = uuid => {\n    if (selected.includes(uuid)) dispatch(unselect(uuid));else dispatch(select(uuid));\n  };\n  /**\n   * Render\n   */\n\n\n  return part !== null && part !== void 0 && part[type] ? part[type].map((element, index) => {\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      hoverable: true,\n      style: {\n        marginBottom: highlighted === element.uuid ? '5px' : selected.includes(element.uuid) ? '5px' : '7px',\n        border: highlighted === element.uuid ? '2px solid #0096C7' : selected.includes(element.uuid) ? '2px solid #c73100' : '1px solid grey'\n      },\n      bodyStyle: {\n        padding: '10px'\n      },\n      onMouseEnter: () => onHighlight(element.uuid),\n      onMouseLeave: onUnhighlight,\n      onClick: () => onSelect(element.uuid),\n      children: element.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this);\n  }) : [];\n};\n\nexport default Selector;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/assets/selector/index.js"],"names":["useEffect","useSelector","useDispatch","highlight","unhighlight","select","unselect","Selector","part","updateSelected","type","highlighted","selected","state","dispatch","onHighlight","uuid","onUnhighlight","onSelect","includes","map","element","index","marginBottom","border","padding","name"],"mappings":";;;;AAAA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,SADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,8BALP;AAOA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA8B;AAC7C;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,MAAkCX,WAAW,CAAEY,KAAD,KAAY;AAC9DH,IAAAA,IAAI,EAAEG,KAAK,CAACR,MAAN,CAAaK,IAD2C;AAE9DC,IAAAA,WAAW,EAAEE,KAAK,CAACR,MAAN,CAAaM,WAFoC;AAG9DC,IAAAA,QAAQ,EAAEC,KAAK,CAACR,MAAN,CAAaO;AAHuC,GAAZ,CAAD,CAAnD;AAKA,QAAME,QAAQ,GAAGZ,WAAW,EAA5B,CAP6C,CAS7C;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,cAAc,CAACG,QAAD,CAAd;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA;AACF;AACA;AACA;;AACE,QAAMG,WAAW,GAAIC,IAAD,IAAU;AAC5BF,IAAAA,QAAQ,CAACX,SAAS,CAACa,IAAD,CAAV,CAAR;AACD,GAFD;AAIA;AACF;AACA;;;AACE,QAAMC,aAAa,GAAG,MAAM;AAC1BH,IAAAA,QAAQ,CAACV,WAAW,EAAZ,CAAR;AACD,GAFD;AAIA;AACF;AACA;AACA;;;AACE,QAAMc,QAAQ,GAAIF,IAAD,IAAU;AACzB,QAAIJ,QAAQ,CAACO,QAAT,CAAkBH,IAAlB,CAAJ,EAA6BF,QAAQ,CAACR,QAAQ,CAACU,IAAD,CAAT,CAAR,CAA7B,KACKF,QAAQ,CAACT,MAAM,CAACW,IAAD,CAAP,CAAR;AACN,GAHD;AAKA;AACF;AACA;;;AACE,SAAOR,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAGE,IAAH,CAAJ,GACHF,IAAI,CAACE,IAAD,CAAJ,CAAWU,GAAX,CAAe,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACjC,wBACE;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,KAAK,EAAE;AACLC,QAAAA,YAAY,EACVZ,WAAW,KAAKU,OAAO,CAACL,IAAxB,GACI,KADJ,GAEIJ,QAAQ,CAACO,QAAT,CAAkBE,OAAO,CAACL,IAA1B,IACA,KADA,GAEA,KAND;AAOLQ,QAAAA,MAAM,EACJb,WAAW,KAAKU,OAAO,CAACL,IAAxB,GACI,mBADJ,GAEIJ,QAAQ,CAACO,QAAT,CAAkBE,OAAO,CAACL,IAA1B,IACA,mBADA,GAEA;AAZD,OAHT;AAiBE,MAAA,SAAS,EAAE;AAAES,QAAAA,OAAO,EAAE;AAAX,OAjBb;AAkBE,MAAA,YAAY,EAAE,MAAMV,WAAW,CAACM,OAAO,CAACL,IAAT,CAlBjC;AAmBE,MAAA,YAAY,EAAEC,aAnBhB;AAoBE,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACG,OAAO,CAACL,IAAT,CApBzB;AAAA,gBAsBGK,OAAO,CAACK;AAtBX,OACOJ,KADP;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD,GA3BD,CADG,GA6BH,EA7BJ;AA8BD,CAvED;;AAyEA,eAAef,QAAf","sourcesContent":["/** @module renderer/components/assets/selector */\n\nimport { useEffect } from 'react'\nimport { Card } from 'antd'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  highlight,\n  unhighlight,\n  select,\n  unselect\n} from '../../../store/select/action'\n\n/**\n * Selector\n * @param {Object} props Props\n */\nconst Selector = ({ part, updateSelected }) => {\n  // Store\n  const { type, highlighted, selected } = useSelector((state) => ({\n    type: state.select.type,\n    highlighted: state.select.highlighted,\n    selected: state.select.selected\n  }))\n  const dispatch = useDispatch()\n\n  // Selected\n  useEffect(() => {\n    updateSelected(selected)\n  }, [selected])\n\n  /**\n   * On highglight\n   * @param {string} uuid UUID\n   */\n  const onHighlight = (uuid) => {\n    dispatch(highlight(uuid))\n  }\n\n  /**\n   * On unhighlight\n   */\n  const onUnhighlight = () => {\n    dispatch(unhighlight())\n  }\n\n  /**\n   * On select\n   * @param {string} uuid UUID\n   */\n  const onSelect = (uuid) => {\n    if (selected.includes(uuid)) dispatch(unselect(uuid))\n    else dispatch(select(uuid))\n  }\n\n  /**\n   * Render\n   */\n  return part?.[type]\n    ? part[type].map((element, index) => {\n        return (\n          <Card\n            key={index}\n            hoverable\n            style={{\n              marginBottom:\n                highlighted === element.uuid\n                  ? '5px'\n                  : selected.includes(element.uuid)\n                  ? '5px'\n                  : '7px',\n              border:\n                highlighted === element.uuid\n                  ? '2px solid #0096C7'\n                  : selected.includes(element.uuid)\n                  ? '2px solid #c73100'\n                  : '1px solid grey'\n            }}\n            bodyStyle={{ padding: '10px' }}\n            onMouseEnter={() => onHighlight(element.uuid)}\n            onMouseLeave={onUnhighlight}\n            onClick={() => onSelect(element.uuid)}\n          >\n            {element.name}\n          </Card>\n        )\n      })\n    : []\n}\n\nexport default Selector\n"]},"metadata":{},"sourceType":"module"}