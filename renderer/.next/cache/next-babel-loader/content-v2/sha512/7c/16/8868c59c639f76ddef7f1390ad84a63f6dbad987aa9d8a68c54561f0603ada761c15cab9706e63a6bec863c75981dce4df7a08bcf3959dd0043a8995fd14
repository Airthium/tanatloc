{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _Button from \"antd/lib/button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { Error } from '../../../assets/notification';\nimport { DeleteDialog } from '../../../assets/dialog';\nimport SimulationAPI from '../../../../../src/api/simulation';\nimport ProjectAPI from '../../../../../src/api/project';\n/**\n * Errors simulation/delete\n * @memberof module:renderer/components/project/simulation\n */\n\nvar errors = {\n  delError: 'Unable to delete the simulation'\n};\n/**\n * Delete\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\n\nvar Delete = function Delete(_ref) {\n  var project = _ref.project,\n      simulation = _ref.simulation;\n\n  // State\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1]; // Data\n\n\n  var _SimulationAPI$useSim = SimulationAPI.useSimulations(project === null || project === void 0 ? void 0 : project.simulations),\n      _SimulationAPI$useSim2 = _slicedToArray(_SimulationAPI$useSim, 2),\n      delOneSimulation = _SimulationAPI$useSim2[1].delOneSimulation;\n\n  var _ProjectAPI$useProjec = ProjectAPI.useProject(project === null || project === void 0 ? void 0 : project.id),\n      _ProjectAPI$useProjec2 = _slicedToArray(_ProjectAPI$useProjec, 2),\n      mutateProject = _ProjectAPI$useProjec2[1].mutateProject;\n\n  var toggleDialog = function toggleDialog() {\n    setVisible(!visible);\n  };\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var index;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return SimulationAPI.del(project, simulation);\n\n            case 4:\n              // Mutate project\n              index = project.simulations.findIndex(function (s) {\n                return s.id === simulation.id;\n              });\n              project.simulations = [].concat(_toConsumableArray(project.simulations.slice(0, index)), _toConsumableArray(project.simulations.slice(index + 1)));\n              mutateProject(project); // Mutate simulations\n\n              delOneSimulation({\n                id: simulation.id\n              });\n              toggleDialog();\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              Error(errors.delError, _context.t0);\n\n            case 14:\n              _context.prev = 14;\n              setLoading(false);\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11, 14, 17]]);\n    }));\n\n    return function handleDelete() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(_Button, {\n      type: \"danger\",\n      icon: /*#__PURE__*/_jsx(DeleteOutlined, {}),\n      onClick: toggleDialog,\n      children: \"Delete\"\n    }), /*#__PURE__*/_jsxs(DeleteDialog, {\n      visible: visible,\n      onCancel: toggleDialog,\n      onOk: handleDelete,\n      loading: loading,\n      children: [\"Delete \", simulation.name]\n    })]\n  });\n};\n\nexport default Delete;","map":null,"metadata":{},"sourceType":"module"}