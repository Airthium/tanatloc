{"ast":null,"code":"import _Modal from \"antd/lib/modal\";\nimport _Radio from \"antd/lib/radio\";\nimport _Select from \"antd/lib/select\";\nimport _Form from \"antd/lib/form\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport _Card from \"antd/lib/card\";\nimport _Space from \"antd/lib/space\";\nimport _Button from \"antd/lib/button\";\nimport _Typography from \"antd/lib/typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/cloudServer/index.js\";\nimport { SelectOutlined } from '@ant-design/icons';\nimport Plugins from '../../../../../plugin';\nimport PluginAPI from '../../../../../../src/api/plugin';\n\nconst CloudServer = ({\n  visible,\n  onCancel\n}) => {\n  // Data\n  const [plugins] = PluginAPI.usePlugins();\n  return /*#__PURE__*/_jsxDEV(_Modal, {\n    visible: visible,\n    title: \"Cloud server\",\n    onOk: () => {},\n    onCancel: onCancel,\n    children: /*#__PURE__*/_jsxDEV(_Space, {\n      align: \"start\",\n      direction: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(_Card, {\n        title: \"Local\",\n        children: /*#__PURE__*/_jsxDEV(_Space, {\n          children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n            children: \"For desktop version only!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Button, {\n            disabled: true,\n            type: \"primary\",\n            icon: /*#__PURE__*/_jsxDEV(SelectOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), plugins === null || plugins === void 0 ? void 0 : plugins.map(plugin => {\n        console.log(plugin);\n        return /*#__PURE__*/_jsxDEV(_Card, {\n          title: plugin.name,\n          children: /*#__PURE__*/_jsxDEV(_Space, {\n            children: [/*#__PURE__*/_jsxDEV(_Space, {\n              direction: \"vertical\",\n              children: [plugin.configuration.name.value, /*#__PURE__*/_jsxDEV(_Form, {\n                children: Object.keys(plugin.inUseConfiguration).map(key => {\n                  const item = plugin.inUseConfiguration[key];\n                  console.log(item);\n                  if (item.type === 'label') return /*#__PURE__*/_jsxDEV(\"div\", {\n                    dangerouslySetInnerHTML: {\n                      __html: item.label\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 27\n                  }, this);else if (item.type === 'number') return /*#__PURE__*/_jsxDEV(_Form.Item, {\n                    htmlFor: key,\n                    label: item.label,\n                    children: /*#__PURE__*/_jsxDEV(_InputNumber, {\n                      id: key,\n                      defaultValue: item.default\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 27\n                  }, this);else if (item.type === 'select') return /*#__PURE__*/_jsxDEV(_Form.Item, {\n                    label: item.label,\n                    children: /*#__PURE__*/_jsxDEV(_Select, {\n                      id: key,\n                      options: item.options\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 27\n                  }, this);else if (item.type === 'radio') return /*#__PURE__*/_jsxDEV(_Form.Item, {\n                    label: item.label,\n                    htmlFor: key,\n                    children: /*#__PURE__*/_jsxDEV(_Radio.Group, {\n                      id: key,\n                      children: item.options.map(o => /*#__PURE__*/_jsxDEV(_Radio, {\n                        value: o.value,\n                        children: o.label\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 70,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              icon: /*#__PURE__*/_jsxDEV(SelectOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, plugin.uuid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CloudServer;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/cloudServer/index.js"],"names":["SelectOutlined","Plugins","PluginAPI","CloudServer","visible","onCancel","plugins","usePlugins","map","plugin","console","log","name","configuration","value","Object","keys","inUseConfiguration","key","item","type","__html","label","default","options","o","uuid"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Card,\n  Form,\n  InputNumber,\n  Modal,\n  Radio,\n  Select,\n  Space,\n  Typography\n} from 'antd'\nimport { SelectOutlined } from '@ant-design/icons'\n\nimport Plugins from '../../../../../plugin'\n\nimport PluginAPI from '../../../../../../src/api/plugin'\n\nconst CloudServer = ({ visible, onCancel }) => {\n  // Data\n  const [plugins] = PluginAPI.usePlugins()\n\n  return (\n    <Modal\n      visible={visible}\n      title=\"Cloud server\"\n      onOk={() => {}}\n      onCancel={onCancel}\n    >\n      <Space align=\"start\" direction=\"horizontal\">\n        <Card title=\"Local\">\n          <Space>\n            <Typography.Text>For desktop version only!</Typography.Text>\n            <Button disabled={true} type=\"primary\" icon={<SelectOutlined />} />\n          </Space>\n        </Card>\n        {plugins?.map((plugin) => {\n          console.log(plugin)\n          return (\n            <Card key={plugin.uuid} title={plugin.name}>\n              <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space>\n            </Card>\n          )\n        })}\n      </Space>\n    </Modal>\n  )\n}\n\nexport default CloudServer\n"]},"metadata":{},"sourceType":"module"}