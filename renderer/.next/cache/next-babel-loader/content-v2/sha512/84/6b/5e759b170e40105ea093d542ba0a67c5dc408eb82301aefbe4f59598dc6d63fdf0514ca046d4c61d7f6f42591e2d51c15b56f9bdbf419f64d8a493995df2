{"ast":null,"code":"import _Layout from \"antd/lib/layout\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport _Button from \"antd/lib/button\";\nimport _Card from \"antd/lib/card\";\nimport _Spin from \"antd/lib/spin\";\nimport _Alert from \"antd/lib/alert\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Collapse from \"antd/lib/collapse\";\nimport _Space from \"antd/lib/space\";\nimport _Upload from \"antd/lib/upload\";\nimport _Typography from \"antd/lib/typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/geometry/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { DeleteOutlined, DownloadOutlined, LoadingOutlined, PlusOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { Error } from '../../../assets/notification';\nimport SimulationAPI from '../../../../../src/api/simulation';\nimport FileAPI from '../../../../../src/api/file';\n/**\n * Errors simulation/geometry\n * @memberof module:renderer/components/project/simulation\n */\n\nconst errors = {\n  updateError: 'Unable to update the simulation',\n  downloadError: 'Unable to download the file',\n  UNABLE_TO_LOAD: 'Unable to load geometry'\n};\n/**\n * Geometry\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\n\nconst Geometry = ({\n  project,\n  simulation,\n  part\n}) => {\n  var _part$solids, _part$faces, _part$edges;\n\n  // State\n  const {\n    0: upload,\n    1: setUpload\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: currentFile,\n    1: setCurrentFile\n  } = useState(); // Data\n\n  const [, {\n    mutateOneSimulation\n  }] = SimulationAPI.useSimulations(project === null || project === void 0 ? void 0 : project.simulations); // Effect\n\n  useEffect(() => {\n    const file = simulation === null || simulation === void 0 ? void 0 : simulation.scheme.configuration.geometry.file;\n    setCurrentFile(file);\n\n    if (file) {\n      setUpload(false);\n    } else {\n      setUpload(true);\n    }\n  }, [simulation]);\n  /**\n   * Upload check\n   * @param {Object} file File\n   */\n\n  const beforeUpload = file => {\n    const goodFormat = file.name.toLowerCase().includes('.stp') || file.name.toLowerCase().includes('.step') || file.name.toLowerCase().includes('.dxf');\n    return goodFormat;\n  };\n  /**\n   * On upload\n   * @param {object} info Info\n   */\n\n\n  const onChange = async info => {\n    if (info.file.status === 'uploading') setLoading(true);\n\n    if (info.file.status === 'done') {\n      const buffer = await getFile(info.file.originFileObj); // Diff scheme\n\n      const diff = {\n        file: {\n          name: info.file.name,\n          uid: info.file.uid,\n          buffer: Buffer.from(buffer)\n        },\n        done: true\n      };\n\n      try {\n        // Update simulation\n        await SimulationAPI.update({\n          id: simulation.id\n        }, [{\n          key: 'scheme',\n          type: 'json',\n          method: 'diff',\n          path: ['configuration', 'geometry'],\n          value: diff\n        }]); // Mutate simulation\n\n        mutateOneSimulation(_objectSpread({}, simulation), true);\n      } catch (err) {\n        Error(errors.updateError, err);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  /**\n   * Get file\n   * @param {Object} file File\n   */\n\n\n  const getFile = async file => {\n    const reader = new FileReader();\n    const buffer = await new Promise(resolve => {\n      reader.addEventListener('load', () => {\n        resolve(reader.result);\n      });\n      reader.readAsArrayBuffer(file);\n    });\n    return buffer;\n  };\n  /**\n   * On delete\n   */\n\n\n  const onDelete = async () => {\n    // Diff scheme\n    const diff = {\n      file: 'remove',\n      done: false\n    };\n\n    try {\n      // Update simulation\n      await SimulationAPI.update({\n        id: simulation.id\n      }, [{\n        key: 'scheme',\n        type: 'json',\n        method: 'diff',\n        path: ['configuration', 'geometry'],\n        value: diff\n      }]); // Mutate\n\n      mutateOneSimulation(_objectSpread(_objectSpread({}, simulation), {}, {\n        scheme: _objectSpread(_objectSpread({}, simulation.scheme), {}, {\n          configuration: _objectSpread(_objectSpread({}, simulation.scheme.configuration), {}, {\n            geometry: _objectSpread(_objectSpread({}, simulation.scheme.configuration.geometry), {}, {\n              file: undefined,\n              done: false\n            })\n          })\n        })\n      }));\n    } catch (err) {\n      Error(errors.updateError, err);\n    }\n  };\n\n  const onDownload = async () => {\n    const file = {\n      origin: simulation.scheme.configuration.geometry.file.origin,\n      originPath: simulation.scheme.configuration.geometry.file.originPath\n    };\n\n    try {\n      const content = await FileAPI.get({\n        id: simulation.id\n      }, file);\n      const data = new File([Buffer.from(content.buffer).toString()], file.origin);\n      const url = window.URL.createObjectURL(data);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', file.origin);\n      link.click();\n      link.remove();\n    } catch (err) {\n      Error(errors.downloadError, err);\n    }\n  };\n\n  useEffect(() => {\n    var _window$MathJax;\n\n    (_window$MathJax = window.MathJax) === null || _window$MathJax === void 0 ? void 0 : _window$MathJax.typeset();\n  }, []);\n  /**\n   * Render\n   */\n\n  return /*#__PURE__*/_jsxDEV(_Layout, {\n    children: /*#__PURE__*/_jsxDEV(_Layout.Content, {\n      children: upload ? /*#__PURE__*/_jsxDEV(_Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Upload a geometry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Typography.Text, {\n          children: \"STEP (3D) of DXF (2D) file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Upload, {\n          accept: \".stp,.step,.dxf\",\n          showUploadList: false,\n          listType: \"picture-card\",\n          beforeUpload: beforeUpload,\n          onChange: onChange,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 8\n              },\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(_Card, {\n          title: \"Informations\",\n          children: /*#__PURE__*/_jsxDEV(_Space, {\n            direction: \"vertical\",\n            children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"File:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), \" \", currentFile === null || currentFile === void 0 ? void 0 : currentFile.name, ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(_Typography.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Unit:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), \" \\\\(m\\\\)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), part ? part.error ? /*#__PURE__*/_jsxDEV(_Alert, {\n              message: \"Error\",\n              description: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [errors.UNABLE_TO_LOAD, /*#__PURE__*/_jsxDEV(_Collapse, {\n                  ghost: true,\n                  children: /*#__PURE__*/_jsxDEV(_Collapse.Panel, {\n                    header: \"Error\",\n                    children: part.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true),\n              type: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [part.solids && /*#__PURE__*/_jsxDEV(_Typography.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Number of solids:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 27\n                }, this), \" \", (_part$solids = part.solids) === null || _part$solids === void 0 ? void 0 : _part$solids.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 25\n              }, this), part.faces && /*#__PURE__*/_jsxDEV(_Typography.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Number of faces:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 27\n                }, this), \" \", (_part$faces = part.faces) === null || _part$faces === void 0 ? void 0 : _part$faces.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 25\n              }, this), part.edges && /*#__PURE__*/_jsxDEV(_Typography.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Number of edges:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 27\n                }, this), \" \", (_part$edges = part.edges) === null || _part$edges === void 0 ? void 0 : _part$edges.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Spin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Space, {\n          style: {\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(_Button, {\n            icon: /*#__PURE__*/_jsxDEV(DownloadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this),\n            onClick: onDownload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(_Popconfirm, {\n            title: \"Are you sure\",\n            icon: /*#__PURE__*/_jsxDEV(QuestionCircleOutlined, {\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 23\n            }, this),\n            onConfirm: onDelete,\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"danger\",\n              icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Geometry;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/geometry/index.js"],"names":["useState","useEffect","DeleteOutlined","DownloadOutlined","LoadingOutlined","PlusOutlined","QuestionCircleOutlined","Error","SimulationAPI","FileAPI","errors","updateError","downloadError","UNABLE_TO_LOAD","Geometry","project","simulation","part","upload","setUpload","loading","setLoading","currentFile","setCurrentFile","mutateOneSimulation","useSimulations","simulations","file","scheme","configuration","geometry","beforeUpload","goodFormat","name","toLowerCase","includes","onChange","info","status","buffer","getFile","originFileObj","diff","uid","Buffer","from","done","update","id","key","type","method","path","value","err","reader","FileReader","Promise","resolve","addEventListener","result","readAsArrayBuffer","onDelete","undefined","onDownload","origin","originPath","content","get","data","File","toString","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","click","remove","MathJax","typeset","marginTop","error","message","solids","length","faces","edges","color"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport {\n  message,\n  Alert,\n  Button,\n  Card,\n  Collapse,\n  Layout,\n  Popconfirm,\n  Space,\n  Spin,\n  Typography,\n  Upload\n} from 'antd'\nimport {\n  DeleteOutlined,\n  DownloadOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n  QuestionCircleOutlined\n} from '@ant-design/icons'\n\nimport { Error } from '../../../assets/notification'\n\nimport SimulationAPI from '../../../../../src/api/simulation'\nimport FileAPI from '../../../../../src/api/file'\n\n/**\n * Errors simulation/geometry\n * @memberof module:renderer/components/project/simulation\n */\nconst errors = {\n  updateError: 'Unable to update the simulation',\n  downloadError: 'Unable to download the file',\n  UNABLE_TO_LOAD: 'Unable to load geometry'\n}\n\n/**\n * Geometry\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\nconst Geometry = ({ project, simulation, part }) => {\n  // State\n  const [upload, setUpload] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [currentFile, setCurrentFile] = useState()\n\n  // Data\n  const [, { mutateOneSimulation }] = SimulationAPI.useSimulations(\n    project?.simulations\n  )\n\n  // Effect\n  useEffect(() => {\n    const file = simulation?.scheme.configuration.geometry.file\n    setCurrentFile(file)\n    if (file) {\n      setUpload(false)\n    } else {\n      setUpload(true)\n    }\n  }, [simulation])\n\n  /**\n   * Upload check\n   * @param {Object} file File\n   */\n  const beforeUpload = (file) => {\n    const goodFormat =\n      file.name.toLowerCase().includes('.stp') ||\n      file.name.toLowerCase().includes('.step') ||\n      file.name.toLowerCase().includes('.dxf')\n    return goodFormat\n  }\n\n  /**\n   * On upload\n   * @param {object} info Info\n   */\n  const onChange = async (info) => {\n    if (info.file.status === 'uploading') setLoading(true)\n\n    if (info.file.status === 'done') {\n      const buffer = await getFile(info.file.originFileObj)\n\n      // Diff scheme\n      const diff = {\n        file: {\n          name: info.file.name,\n          uid: info.file.uid,\n          buffer: Buffer.from(buffer)\n        },\n        done: true\n      }\n\n      try {\n        // Update simulation\n        await SimulationAPI.update({ id: simulation.id }, [\n          {\n            key: 'scheme',\n            type: 'json',\n            method: 'diff',\n            path: ['configuration', 'geometry'],\n            value: diff\n          }\n        ])\n\n        // Mutate simulation\n        mutateOneSimulation(\n          {\n            ...simulation\n          },\n          true\n        )\n      } catch (err) {\n        Error(errors.updateError, err)\n      } finally {\n        setLoading(false)\n      }\n    }\n  }\n\n  /**\n   * Get file\n   * @param {Object} file File\n   */\n  const getFile = async (file) => {\n    const reader = new FileReader()\n    const buffer = await new Promise((resolve) => {\n      reader.addEventListener('load', () => {\n        resolve(reader.result)\n      })\n      reader.readAsArrayBuffer(file)\n    })\n    return buffer\n  }\n\n  /**\n   * On delete\n   */\n  const onDelete = async () => {\n    // Diff scheme\n    const diff = {\n      file: 'remove',\n      done: false\n    }\n\n    try {\n      // Update simulation\n      await SimulationAPI.update({ id: simulation.id }, [\n        {\n          key: 'scheme',\n          type: 'json',\n          method: 'diff',\n          path: ['configuration', 'geometry'],\n          value: diff\n        }\n      ])\n\n      // Mutate\n      mutateOneSimulation({\n        ...simulation,\n        scheme: {\n          ...simulation.scheme,\n          configuration: {\n            ...simulation.scheme.configuration,\n            geometry: {\n              ...simulation.scheme.configuration.geometry,\n              file: undefined,\n              done: false\n            }\n          }\n        }\n      })\n    } catch (err) {\n      Error(errors.updateError, err)\n    }\n  }\n\n  const onDownload = async () => {\n    const file = {\n      origin: simulation.scheme.configuration.geometry.file.origin,\n      originPath: simulation.scheme.configuration.geometry.file.originPath\n    }\n\n    try {\n      const content = await FileAPI.get({ id: simulation.id }, file)\n\n      const data = new File(\n        [Buffer.from(content.buffer).toString()],\n        file.origin\n      )\n      const url = window.URL.createObjectURL(data)\n      const link = document.createElement('a')\n      link.href = url\n      link.setAttribute('download', file.origin)\n      link.click()\n      link.remove()\n    } catch (err) {\n      Error(errors.downloadError, err)\n    }\n  }\n\n  useEffect(() => {\n    window.MathJax?.typeset()\n  }, [])\n\n  /**\n   * Render\n   */\n  return (\n    <Layout>\n      <Layout.Content>\n        {upload ? (\n          <Space direction=\"vertical\">\n            <Typography.Text>\n              <b>Upload a geometry</b>\n            </Typography.Text>\n            <Typography.Text>STEP (3D) of DXF (2D) file</Typography.Text>\n            <Upload\n              accept=\".stp,.step,.dxf\"\n              showUploadList={false}\n              listType=\"picture-card\"\n              beforeUpload={beforeUpload}\n              onChange={onChange}\n            >\n              <div>\n                {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                <div style={{ marginTop: 8 }}>Upload</div>\n              </div>\n            </Upload>\n          </Space>\n        ) : (\n          <>\n            <Card title=\"Informations\">\n              <Space direction=\"vertical\">\n                <Typography.Text>\n                  <b>File:</b> {currentFile?.name}{' '}\n                </Typography.Text>\n                <Typography.Text>\n                  <b>Unit:</b> \\(m\\)\n                </Typography.Text>\n                {part ? (\n                  part.error ? (\n                    <Alert\n                      message=\"Error\"\n                      description={\n                        <>\n                          {errors.UNABLE_TO_LOAD}\n                          <Collapse ghost={true}>\n                            <Collapse.Panel header=\"Error\">\n                              {part.message}\n                            </Collapse.Panel>\n                          </Collapse>\n                        </>\n                      }\n                      type=\"error\"\n                    />\n                  ) : (\n                    <>\n                      {part.solids && (\n                        <Typography.Text>\n                          <b>Number of solids:</b> {part.solids?.length}\n                        </Typography.Text>\n                      )}\n                      {part.faces && (\n                        <Typography.Text>\n                          <b>Number of faces:</b> {part.faces?.length}\n                        </Typography.Text>\n                      )}\n                      {part.edges && (\n                        <Typography.Text>\n                          <b>Number of edges:</b> {part.edges?.length}\n                        </Typography.Text>\n                      )}\n                    </>\n                  )\n                ) : (\n                  <Spin />\n                )}\n              </Space>\n            </Card>\n            <Space style={{ marginTop: '10px' }}>\n              <Button icon={<DownloadOutlined />} onClick={onDownload} />\n              <Popconfirm\n                title=\"Are you sure\"\n                icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\n                onConfirm={onDelete}\n              >\n                <Button type=\"danger\" icon={<DeleteOutlined />} />\n              </Popconfirm>\n            </Space>\n          </>\n        )}\n      </Layout.Content>\n    </Layout>\n  )\n}\n\nexport default Geometry\n"]},"metadata":{},"sourceType":"module"}