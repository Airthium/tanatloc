{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _Row from \"antd/lib/row\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _Space from \"antd/lib/space\";\nimport _Button from \"antd/lib/button\";\nimport _Form from \"antd/lib/form\";\nimport _Input from \"antd/lib/input\";\nimport _Col from \"antd/lib/col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _notification from \"antd/lib/notification\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/account/password/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { Error } from '../../assets/notification';\nimport UserAPI from '../../../../src/api/user';\n/**\n * Errors account/password\n * @memeberof module:renderer/components/account\n */\n\nvar errors = {\n  updateError: 'Unable to update the password',\n  mismatch: 'Password and confirmation mismatch',\n  invalid: 'Current password not valid'\n};\n/**\n * Password\n * @memeberof module:renderer/components/account\n */\n\nvar Password = function Password() {\n  _s();\n\n  // State\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1]; // Data\n\n\n  var _UserAPI$useUser = UserAPI.useUser(),\n      _UserAPI$useUser2 = _slicedToArray(_UserAPI$useUser, 1),\n      user = _UserAPI$useUser2[0]; // Layout\n\n\n  var layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 8\n    }\n  };\n  var buttonLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 8\n    }\n  };\n  /**\n   * On finish\n   * @param {Object} data Data\n   */\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var current;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return UserAPI.check({\n                username: user.email,\n                password: data.password\n              });\n\n            case 4:\n              current = _context.sent;\n\n              if (!current.valid) {\n                _context.next = 14;\n                break;\n              }\n\n              if (!(data.newPassword === data.passwordConfirm)) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 9;\n              return UserAPI.update([{\n                type: 'crypt',\n                key: 'password',\n                value: data.newPassword\n              }]);\n\n            case 9:\n              _context.next = 12;\n              break;\n\n            case 11:\n              _notification.error({\n                message: errors.mismatch\n              });\n\n            case 12:\n              _context.next = 15;\n              break;\n\n            case 14:\n              notificaton.error({\n                message: errors.invalid\n              });\n\n            case 15:\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](1);\n              Error(errors.updateError, _context.t0);\n\n            case 20:\n              _context.prev = 20;\n              setLoading(false);\n              return _context.finish(20);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 17, 20, 23]]);\n    }));\n\n    return function onFinish(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Card, {\n    title: \"Your Password\",\n    children: /*#__PURE__*/_jsxDEV(_Row, {\n      children: [/*#__PURE__*/_jsxDEV(_Col, {\n        span: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(_Col, {\n        span: 20,\n        children: /*#__PURE__*/_jsxDEV(_Form, _objectSpread(_objectSpread({}, layout), {}, {\n          initialValues: {\n            password: '******',\n            newPassword: '******',\n            passwordConfirm: '******'\n          },\n          onFinish: onFinish,\n          name: \"passwordForm\",\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            label: \"Current password\",\n            name: \"password\",\n            children: /*#__PURE__*/_jsxDEV(_Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            label: \"New password\",\n            name: \"newPassword\",\n            children: /*#__PURE__*/_jsxDEV(_Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            label: \"Password confirmation\",\n            name: \"passwordConfirm\",\n            children: /*#__PURE__*/_jsxDEV(_Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(_Form.Item, _objectSpread(_objectSpread({}, buttonLayout), {}, {\n            style: {\n              marginBottom: 'unset'\n            },\n            children: /*#__PURE__*/_jsxDEV(_Space, {\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                loading: loading,\n                children: \"Modify password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, _this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Password, \"gLXzsZfwIWGKja6tSpZIqScm1xE=\", false, function () {\n  return [UserAPI.useUser];\n});\n\n_c = Password;\nexport default Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/account/password/index.js"],"names":["useState","Error","UserAPI","errors","updateError","mismatch","invalid","Password","loading","setLoading","useUser","user","layout","labelCol","span","wrapperCol","buttonLayout","offset","onFinish","data","check","username","email","password","current","valid","newPassword","passwordConfirm","update","type","key","value","error","message","notificaton","marginBottom"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { notification, Button, Form, Input, Space, Card, Row, Col } from 'antd'\n\nimport { Error } from '../../assets/notification'\n\nimport UserAPI from '../../../../src/api/user'\n\n/**\n * Errors account/password\n * @memeberof module:renderer/components/account\n */\nconst errors = {\n  updateError: 'Unable to update the password',\n  mismatch: 'Password and confirmation mismatch',\n  invalid: 'Current password not valid'\n}\n\n/**\n * Password\n * @memeberof module:renderer/components/account\n */\nconst Password = () => {\n  // State\n  const [loading, setLoading] = useState(false)\n\n  // Data\n  const [user] = UserAPI.useUser()\n\n  // Layout\n  const layout = {\n    labelCol: { span: 5 },\n    wrapperCol: { span: 8 }\n  }\n  const buttonLayout = {\n    wrapperCol: { offset: 5, span: 8 }\n  }\n\n  /**\n   * On finish\n   * @param {Object} data Data\n   */\n  const onFinish = async (data) => {\n    setLoading(true)\n\n    try {\n      // Check current password\n      const current = await UserAPI.check({\n        username: user.email,\n        password: data.password\n      })\n\n      if (current.valid) {\n        // Change password\n        if (data.newPassword === data.passwordConfirm) {\n          await UserAPI.update([\n            {\n              type: 'crypt',\n              key: 'password',\n              value: data.newPassword\n            }\n          ])\n        } else {\n          notification.error({ message: errors.mismatch })\n        }\n      } else {\n        notificaton.error({ message: errors.invalid })\n      }\n    } catch (err) {\n      Error(errors.updateError, err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  /**\n   * Render\n   */\n  return (\n    <Card title=\"Your Password\">\n      <Row>\n        <Col span={4}></Col>\n        <Col span={20}>\n          <Form\n            {...layout}\n            initialValues={{\n              password: '******',\n              newPassword: '******',\n              passwordConfirm: '******'\n            }}\n            onFinish={onFinish}\n            name=\"passwordForm\"\n          >\n            <Form.Item label=\"Current password\" name=\"password\">\n              <Input.Password />\n            </Form.Item>\n            <Form.Item label=\"New password\" name=\"newPassword\">\n              <Input.Password />\n            </Form.Item>\n            <Form.Item label=\"Password confirmation\" name=\"passwordConfirm\">\n              <Input.Password />\n            </Form.Item>\n            <Form.Item {...buttonLayout} style={{ marginBottom: 'unset' }}>\n              <Space>\n                <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                  Modify password\n                </Button>\n              </Space>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Password\n"]},"metadata":{},"sourceType":"module"}