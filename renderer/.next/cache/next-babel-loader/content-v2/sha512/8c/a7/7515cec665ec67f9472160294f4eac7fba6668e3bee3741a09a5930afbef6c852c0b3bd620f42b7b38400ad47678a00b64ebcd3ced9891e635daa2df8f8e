{"ast":null,"code":"import _Modal from \"antd/lib/modal\";\nimport _Space from \"antd/lib/space\";\nimport _Card from \"antd/lib/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/cloudServer/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport merge from 'lodash.merge';\nimport Plugins from '../../../../../plugin';\nimport PluginAPI from '../../../../../../src/api/plugin';\nvar errors = {\n  mergeError: 'Unable to update the plugin'\n};\n\nvar CloudServer = function CloudServer(_ref) {\n  _s();\n\n  var visible = _ref.visible,\n      onClose = _ref.onClose,\n      onOk = _ref.onOk;\n\n  // Data\n  var _PluginAPI$usePlugins = PluginAPI.usePlugins(),\n      _PluginAPI$usePlugins2 = _slicedToArray(_PluginAPI$usePlugins, 1),\n      plugins = _PluginAPI$usePlugins2[0];\n\n  var onMerge = function onMerge(plugin, diff) {\n    // Merge\n    merge(plugin, diff); // Close\n\n    onClose(); // Ok\n\n    onOk(plugin);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Modal, {\n    visible: visible,\n    title: \"Cloud server\",\n    onOk: function onOk() {},\n    okButtonProps: {\n      disabled: true,\n      display: 'none'\n    },\n    onCancel: onClose,\n    children: /*#__PURE__*/_jsxDEV(_Space, {\n      align: \"start\",\n      direction: \"horizontal\",\n      children: plugins === null || plugins === void 0 ? void 0 : plugins.map(function (plugin) {\n        var base = Plugins[plugin.key];\n        return /*#__PURE__*/_jsxDEV(_Card, {\n          title: plugin.name,\n          children: /*#__PURE__*/_jsxDEV(base.renderer, {\n            data: plugin.data,\n            onSelect: function onSelect(diff) {\n              return onMerge(plugin, diff);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, _this)\n        }, plugin.uuid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CloudServer, \"czAKdU7C9YtF+Ktiih7GeBLq6PM=\", false, function () {\n  return [PluginAPI.usePlugins];\n});\n\n_c = CloudServer;\nexport default CloudServer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CloudServer\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/cloudServer/index.js"],"names":["merge","Plugins","PluginAPI","errors","mergeError","CloudServer","visible","onClose","onOk","usePlugins","plugins","onMerge","plugin","diff","disabled","display","map","base","key","name","data","uuid"],"mappings":";;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,cAAlB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,UAAU,EAAE;AADC,CAAf;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgC;AAAA;;AAAA,MAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAClD;AADkD,8BAEhCN,SAAS,CAACO,UAAV,EAFgC;AAAA;AAAA,MAE3CC,OAF2C;;AAIlD,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASC,IAAT,EAAkB;AAChC;AACAb,IAAAA,KAAK,CAACY,MAAD,EAASC,IAAT,CAAL,CAFgC,CAIhC;;AACAN,IAAAA,OAAO,GALyB,CAOhC;;AACAC,IAAAA,IAAI,CAACI,MAAD,CAAJ;AACD,GATD;;AAWA,sBACE;AACE,IAAA,OAAO,EAAEN,OADX;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,IAAI,EAAE,gBAAM,CAAE,CAHhB;AAIE,IAAA,aAAa,EAAE;AACbQ,MAAAA,QAAQ,EAAE,IADG;AAEbC,MAAAA,OAAO,EAAE;AAFI,KAJjB;AAQE,IAAA,QAAQ,EAAER,OARZ;AAAA,2BAUE;AAAO,MAAA,KAAK,EAAC,OAAb;AAAqB,MAAA,SAAS,EAAC,YAA/B;AAAA,gBACGG,OADH,aACGA,OADH,uBACGA,OAAO,CAAEM,GAAT,CAAa,UAACJ,MAAD,EAAY;AACxB,YAAMK,IAAI,GAAGhB,OAAO,CAACW,MAAM,CAACM,GAAR,CAApB;AAEA,4BACE;AAAwB,UAAA,KAAK,EAAEN,MAAM,CAACO,IAAtC;AAAA,iCACE,QAAC,IAAD,CAAM,QAAN;AACE,YAAA,IAAI,EAAEP,MAAM,CAACQ,IADf;AAEE,YAAA,QAAQ,EAAE,kBAACP,IAAD;AAAA,qBAAUF,OAAO,CAACC,MAAD,EAASC,IAAT,CAAjB;AAAA;AAFZ;AAAA;AAAA;AAAA;AAAA;AADF,WAAWD,MAAM,CAACS,IAAlB;AAAA;AAAA;AAAA;AAAA,iBADF;AAQD,OAXA;AADH;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,WADF;AA2BD,CA1CD;;GAAMhB,W;UAEcH,SAAS,CAACO,U;;;KAFxBJ,W;AA4CN,eAAeA,WAAf","sourcesContent":["import { Card, Modal, Space } from 'antd'\nimport merge from 'lodash.merge'\n\nimport Plugins from '../../../../../plugin'\n\nimport PluginAPI from '../../../../../../src/api/plugin'\n\nconst errors = {\n  mergeError: 'Unable to update the plugin'\n}\n\nconst CloudServer = ({ visible, onClose, onOk }) => {\n  // Data\n  const [plugins] = PluginAPI.usePlugins()\n\n  const onMerge = (plugin, diff) => {\n    // Merge\n    merge(plugin, diff)\n\n    // Close\n    onClose()\n\n    // Ok\n    onOk(plugin)\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      title=\"Cloud server\"\n      onOk={() => {}}\n      okButtonProps={{\n        disabled: true,\n        display: 'none'\n      }}\n      onCancel={onClose}\n    >\n      <Space align=\"start\" direction=\"horizontal\">\n        {plugins?.map((plugin) => {\n          const base = Plugins[plugin.key]\n\n          return (\n            <Card key={plugin.uuid} title={plugin.name}>\n              <base.renderer\n                data={plugin.data}\n                onSelect={(diff) => onMerge(plugin, diff)}\n              />\n            </Card>\n          )\n        })}\n      </Space>\n    </Modal>\n  )\n}\n\nexport default CloudServer\n"]},"metadata":{},"sourceType":"module"}