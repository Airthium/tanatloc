{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Form from \"antd/lib/form\";\nimport _Input from \"antd/lib/input\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/workspace/add/index.js\";\nimport { useState } from 'react';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport { Error } from '../../assets/notification';\nimport Dialog from '../../assets/dialog';\nimport WorkspaceAPI from '../../../../src/api/workspace';\nconst errors = {\n  addError: 'Unable to add the workspace'\n};\n/**\n * Add workspace\n * @memberof module:renderer/components/workspace\n */\n\nconst Add = () => {\n  // Sate\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // Data\n\n  const [, {\n    addOneWorkspace\n  }] = WorkspaceAPI.useWorkspaces();\n  /**\n   * Toggle dialog\n   */\n\n  const toggleDialog = () => {\n    setVisible(!visible);\n  };\n  /**\n   * On confirm\n   * @param {Object} values Values\n   */\n\n\n  const onOk = async values => {\n    setLoading(true);\n\n    try {\n      // Add\n      const workspace = await WorkspaceAPI.add(values); // Mutate\n\n      addOneWorkspace(workspace);\n      toggleDialog();\n    } catch (err) {\n      Error(errors.addError, err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  /**\n   * On cancel\n   */\n\n\n  const onCancel = () => {\n    toggleDialog();\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      onClick: toggleDialog,\n      icon: /*#__PURE__*/_jsxDEV(PlusCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 44\n      }, this),\n      children: \"Create a new workspace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      title: \"Create a new workspace\",\n      closable: false,\n      visible: visible,\n      onCancel: onCancel,\n      onOk: onOk,\n      confirmLoading: loading,\n      children: /*#__PURE__*/_jsxDEV(_Form.Item, {\n        label: \"Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: \"Please enter a workspace's name\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(_Input, {\n          placeholder: \"Workspace's name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Add;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/workspace/add/index.js"],"names":["useState","PlusCircleOutlined","Error","Dialog","WorkspaceAPI","errors","addError","Add","visible","setVisible","loading","setLoading","addOneWorkspace","useWorkspaces","toggleDialog","onOk","values","workspace","add","err","onCancel","required","message"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,kBAAT,QAAmC,mBAAnC;AAEA,SAASC,KAAT,QAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AADG,CAAf;AAIA;AACA;AACA;AACA;;AACA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC,CAHgB,CAKhB;;AACA,QAAM,GAAG;AAAEY,IAAAA;AAAF,GAAH,IAA0BR,YAAY,CAACS,aAAb,EAAhC;AAEA;AACF;AACA;;AACE,QAAMC,YAAY,GAAG,MAAM;AACzBL,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;AAIA;AACF;AACA;AACA;;;AACE,QAAMO,IAAI,GAAG,MAAOC,MAAP,IAAkB;AAC7BL,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF;AACA,YAAMM,SAAS,GAAG,MAAMb,YAAY,CAACc,GAAb,CAAiBF,MAAjB,CAAxB,CAFE,CAIF;;AACAJ,MAAAA,eAAe,CAACK,SAAD,CAAf;AAEAH,MAAAA,YAAY;AACb,KARD,CAQE,OAAOK,GAAP,EAAY;AACZjB,MAAAA,KAAK,CAACG,MAAM,CAACC,QAAR,EAAkBa,GAAlB,CAAL;AACD,KAVD,SAUU;AACRR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAfD;AAiBA;AACF;AACA;;;AACE,QAAMS,QAAQ,GAAG,MAAM;AACrBN,IAAAA,YAAY;AACb,GAFD;AAIA;AACF;AACA;;;AACE,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEA,YAAjB;AAA+B,MAAA,IAAI,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,wBADR;AAEE,MAAA,QAAQ,EAAE,KAFZ;AAGE,MAAA,OAAO,EAAEN,OAHX;AAIE,MAAA,QAAQ,EAAEY,QAJZ;AAKE,MAAA,IAAI,EAAEL,IALR;AAME,MAAA,cAAc,EAAEL,OANlB;AAAA,6BAQE,cAAM,IAAN;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAE,CACL;AAAEW,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SADK,CAHT;AAAA,+BAOE;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAyBD,CAvED;;AAyEA,eAAef,GAAf","sourcesContent":["import { useState } from 'react'\nimport { Button, Form, Input } from 'antd'\nimport { PlusCircleOutlined } from '@ant-design/icons'\n\nimport { Error } from '../../assets/notification'\nimport Dialog from '../../assets/dialog'\n\nimport WorkspaceAPI from '../../../../src/api/workspace'\n\nconst errors = {\n  addError: 'Unable to add the workspace'\n}\n\n/**\n * Add workspace\n * @memberof module:renderer/components/workspace\n */\nconst Add = () => {\n  // Sate\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  // Data\n  const [, { addOneWorkspace }] = WorkspaceAPI.useWorkspaces()\n\n  /**\n   * Toggle dialog\n   */\n  const toggleDialog = () => {\n    setVisible(!visible)\n  }\n\n  /**\n   * On confirm\n   * @param {Object} values Values\n   */\n  const onOk = async (values) => {\n    setLoading(true)\n    try {\n      // Add\n      const workspace = await WorkspaceAPI.add(values)\n\n      // Mutate\n      addOneWorkspace(workspace)\n\n      toggleDialog()\n    } catch (err) {\n      Error(errors.addError, err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  /**\n   * On cancel\n   */\n  const onCancel = () => {\n    toggleDialog()\n  }\n\n  /**\n   * Render\n   */\n  return (\n    <>\n      <Button onClick={toggleDialog} icon={<PlusCircleOutlined />}>\n        Create a new workspace\n      </Button>\n      <Dialog\n        title=\"Create a new workspace\"\n        closable={false}\n        visible={visible}\n        onCancel={onCancel}\n        onOk={onOk}\n        confirmLoading={loading}\n      >\n        <Form.Item\n          label=\"Name\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please enter a workspace's name\" }\n          ]}\n        >\n          <Input placeholder=\"Workspace's name\" />\n        </Form.Item>\n      </Dialog>\n    </>\n  )\n}\n\nexport default Add\n"]},"metadata":{},"sourceType":"module"}