{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _Space from \"antd/lib/space\";\nimport _Button from \"antd/lib/button\";\nimport _Typography from \"antd/lib/typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/boundaryConditions/list/index.js\";\nimport { useState } from 'react';\nimport { EditOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { enable, disable, select } from '../../../../../store/select/action';\nimport Delete from '../delete';\n\nconst List = ({\n  project,\n  simulation,\n  onEdit\n}) => {\n  var _simulation$scheme, _simulation$scheme$co;\n\n  // State\n  const {\n    0: enabled,\n    1: setEnabled\n  } = useState(true); // Data\n\n  const boundaryConditions = (simulation === null || simulation === void 0 ? void 0 : (_simulation$scheme = simulation.scheme) === null || _simulation$scheme === void 0 ? void 0 : (_simulation$scheme$co = _simulation$scheme.configuration) === null || _simulation$scheme$co === void 0 ? void 0 : _simulation$scheme$co.boundaryConditions) || {};\n  const dispatch = useDispatch();\n  /**\n   * Highlight current\n   * @param {string} key Key\n   * @param {number} index Index\n   */\n\n  const highlight = (key, index) => {\n    var _boundaryConditions$k, _boundaryConditions$k2;\n\n    dispatch(enable());\n    const currentSelected = (_boundaryConditions$k = boundaryConditions[key]) === null || _boundaryConditions$k === void 0 ? void 0 : (_boundaryConditions$k2 = _boundaryConditions$k.values[index]) === null || _boundaryConditions$k2 === void 0 ? void 0 : _boundaryConditions$k2.selected;\n    currentSelected === null || currentSelected === void 0 ? void 0 : currentSelected.forEach(s => {\n      dispatch(select(s.uuid));\n    });\n  };\n  /**\n   * Unhighlight current\n   */\n\n\n  const unhighlight = () => {\n    dispatch(disable());\n  }; // List\n\n\n  const list = Object.keys(boundaryConditions).map(type => {\n    var _boundaryConditions$t;\n\n    if (type === 'index' || type === 'title' || type === 'done') return;\n    return (_boundaryConditions$t = boundaryConditions[type].values) === null || _boundaryConditions$t === void 0 ? void 0 : _boundaryConditions$t.map((child, index) => {\n      return /*#__PURE__*/_jsxDEV(_Card, {\n        hoverable: true,\n        style: {\n          marginTop: '5px'\n        },\n        onMouseEnter: () => highlight(type, index),\n        onMouseLeave: () => {\n          enabled && unhighlight();\n        },\n        children: /*#__PURE__*/_jsxDEV(_Space, {\n          direction: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n            children: child.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(_Space, {\n            children: [/*#__PURE__*/_jsxDEV(_Button, {\n              icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 25\n              }, this),\n              onClick: () => {\n                setEnabled(false);\n                onEdit(type, index);\n                setTimeout(() => setEnabled(true), 500);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Delete, {\n              project: project,\n              simulation: simulation,\n              type: type,\n              index: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    });\n  }).filter(l => l);\n  /**\n   * Render\n   */\n\n  return list;\n};\n\nexport default List;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/boundaryConditions/list/index.js"],"names":["useState","EditOutlined","useDispatch","enable","disable","select","Delete","List","project","simulation","onEdit","enabled","setEnabled","boundaryConditions","scheme","configuration","dispatch","highlight","key","index","currentSelected","values","selected","forEach","s","uuid","unhighlight","list","Object","keys","map","type","child","marginTop","name","setTimeout","filter","l"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { Button, Card, Space, Typography } from 'antd'\nimport { EditOutlined } from '@ant-design/icons'\n\nimport { useDispatch } from 'react-redux'\nimport { enable, disable, select } from '../../../../../store/select/action'\n\nimport Delete from '../delete'\n\nconst List = ({ project, simulation, onEdit }) => {\n  // State\n  const [enabled, setEnabled] = useState(true)\n\n  // Data\n  const boundaryConditions =\n    simulation?.scheme?.configuration?.boundaryConditions || {}\n  const dispatch = useDispatch()\n\n  /**\n   * Highlight current\n   * @param {string} key Key\n   * @param {number} index Index\n   */\n  const highlight = (key, index) => {\n    dispatch(enable())\n    const currentSelected = boundaryConditions[key]?.values[index]?.selected\n    currentSelected?.forEach((s) => {\n      dispatch(select(s.uuid))\n    })\n  }\n\n  /**\n   * Unhighlight current\n   */\n  const unhighlight = () => {\n    dispatch(disable())\n  }\n\n  // List\n  const list = Object.keys(boundaryConditions)\n    .map((type) => {\n      if (type === 'index' || type === 'title' || type === 'done') return\n      return boundaryConditions[type].values?.map((child, index) => {\n        return (\n          <Card\n            key={index}\n            hoverable\n            style={{ marginTop: '5px' }}\n            onMouseEnter={() => highlight(type, index)}\n            onMouseLeave={() => {\n              enabled && unhighlight()\n            }}\n          >\n            <Space direction=\"vertical\">\n              <Typography.Text>{child.name}</Typography.Text>\n              <Space>\n                <Button\n                  icon={<EditOutlined />}\n                  onClick={() => {\n                    setEnabled(false)\n                    onEdit(type, index)\n                    setTimeout(() => setEnabled(true), 500)\n                  }}\n                />\n                <Delete\n                  project={project}\n                  simulation={simulation}\n                  type={type}\n                  index={index}\n                />\n              </Space>\n            </Space>\n          </Card>\n        )\n      })\n    })\n    .filter((l) => l)\n\n  /**\n   * Render\n   */\n  return list\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}