{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Form from \"antd/lib/form\";\nimport _Input from \"antd/lib/input\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/add/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport { Error } from '../../assets/notification';\nimport Dialog from '../../assets/dialog';\nimport ProjectAPI from '../../../../src/api/project';\nimport WorkspaceAPI from '../../../../src/api/workspace';\n/**\n * Errors project/add\n * @memberof module:renderer/components/project\n */\n\nconst errors = {\n  addError: 'Unable to add a project'\n};\n/**\n * Add project\n * @memberof module:renderer/components/project\n * @param {Object} props Props\n */\n\nconst Add = props => {\n  // Props\n  const workspace = props.workspace || {}; // State\n\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // Data\n\n  const [, {\n    addOneProject\n  }] = ProjectAPI.useProjects(workspace.projects);\n  const [, {\n    mutateOneWorkspace\n  }] = WorkspaceAPI.useWorkspaces();\n  /**\n   * Toggle dialog\n   */\n\n  const toggleDialog = () => {\n    setVisible(!visible);\n  };\n  /**\n   * On confirm\n   * @param {Object} values Values\n   */\n\n\n  const onOk = async values => {\n    setLoading(true);\n\n    try {\n      // Add\n      const project = await ProjectAPI.add({\n        id: workspace.id\n      }, values); // Mutate projects\n\n      addOneProject(project); // Mutate workspaces\n\n      mutateOneWorkspace(_objectSpread(_objectSpread({}, workspace), {}, {\n        projects: [...workspace.projects, project.id]\n      }));\n      toggleDialog();\n    } catch (err) {\n      Error(errors.addError, err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  /**\n   * On cancel\n   */\n\n\n  const onCancel = () => {\n    toggleDialog();\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      onClick: toggleDialog,\n      type: \"primary\",\n      icon: /*#__PURE__*/_jsxDEV(PlusCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this),\n      children: \"Create a new project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      title: \"Create a new project\",\n      closable: false,\n      visible: visible,\n      onCancel: onCancel,\n      onOk: onOk,\n      loading: loading,\n      children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n        label: \"Name\",\n        name: \"title\",\n        rules: [{\n          required: true,\n          message: \"Please enter a project's name\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(_Input, {\n          placeholder: \"Project's name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n        label: \"Description\",\n        name: \"description\",\n        children: /*#__PURE__*/_jsxDEV(_Input.TextArea, {\n          placeholder: \"Project's description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Add;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/add/index.js"],"names":["useState","PlusCircleOutlined","Error","Dialog","ProjectAPI","WorkspaceAPI","errors","addError","Add","props","workspace","visible","setVisible","loading","setLoading","addOneProject","useProjects","projects","mutateOneWorkspace","useWorkspaces","toggleDialog","onOk","values","project","add","id","err","onCancel","required","message"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { Button, Form, Input } from 'antd'\nimport { PlusCircleOutlined } from '@ant-design/icons'\n\nimport { Error } from '../../assets/notification'\nimport Dialog from '../../assets/dialog'\n\nimport ProjectAPI from '../../../../src/api/project'\nimport WorkspaceAPI from '../../../../src/api/workspace'\n\n/**\n * Errors project/add\n * @memberof module:renderer/components/project\n */\nconst errors = {\n  addError: 'Unable to add a project'\n}\n\n/**\n * Add project\n * @memberof module:renderer/components/project\n * @param {Object} props Props\n */\nconst Add = (props) => {\n  // Props\n  const workspace = props.workspace || {}\n\n  // State\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  // Data\n  const [, { addOneProject }] = ProjectAPI.useProjects(workspace.projects)\n  const [, { mutateOneWorkspace }] = WorkspaceAPI.useWorkspaces()\n\n  /**\n   * Toggle dialog\n   */\n  const toggleDialog = () => {\n    setVisible(!visible)\n  }\n\n  /**\n   * On confirm\n   * @param {Object} values Values\n   */\n  const onOk = async (values) => {\n    setLoading(true)\n    try {\n      // Add\n      const project = await ProjectAPI.add({ id: workspace.id }, values)\n\n      // Mutate projects\n      addOneProject(project)\n\n      // Mutate workspaces\n      mutateOneWorkspace({\n        ...workspace,\n        projects: [...workspace.projects, project.id]\n      })\n\n      toggleDialog()\n    } catch (err) {\n      Error(errors.addError, err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  /**\n   * On cancel\n   */\n  const onCancel = () => {\n    toggleDialog()\n  }\n\n  /**\n   * Render\n   */\n  return (\n    <>\n      <Button\n        onClick={toggleDialog}\n        type=\"primary\"\n        icon={<PlusCircleOutlined />}\n      >\n        Create a new project\n      </Button>\n      <Dialog\n        title=\"Create a new project\"\n        closable={false}\n        visible={visible}\n        onCancel={onCancel}\n        onOk={onOk}\n        loading={loading}\n      >\n        <Form.Item\n          label=\"Name\"\n          name=\"title\"\n          rules={[{ required: true, message: \"Please enter a project's name\" }]}\n        >\n          <Input placeholder=\"Project's name\" />\n        </Form.Item>\n        <Form.Item label=\"Description\" name=\"description\">\n          <Input.TextArea placeholder=\"Project's description\" />\n        </Form.Item>\n      </Dialog>\n    </>\n  )\n}\n\nexport default Add\n"]},"metadata":{},"sourceType":"module"}