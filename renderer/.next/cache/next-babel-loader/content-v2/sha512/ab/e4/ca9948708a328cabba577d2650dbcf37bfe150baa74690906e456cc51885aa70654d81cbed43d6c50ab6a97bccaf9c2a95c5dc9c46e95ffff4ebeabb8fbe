{"ast":null,"code":"import _Layout from \"antd/lib/layout\";\nimport _Collapse from \"antd/lib/collapse\";\nimport _Card from \"antd/lib/card\";\nimport _Space from \"antd/lib/space\";\nimport _Select from \"antd/lib/select\";\nimport _Typography from \"antd/lib/typography\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { Error } from '../../../assets/notification';\nimport Formula from '../../../assets/formula';\nimport SimulationAPI from '../../../../../src/api/simulation';\n/**\n * Errors simulation/parameters\n * @memberof module:renderer/components/project/simulation\n */\n\nvar errors = {\n  updateError: 'Unable to update the simulation'\n};\n/**\n * Parameters\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\n\nvar Parameters = function Parameters(_ref) {\n  var project = _ref.project,\n      simulation = _ref.simulation;\n\n  // State\n  var _useState = useState({}),\n      values = _useState[0],\n      setValues = _useState[1]; // Data\n\n\n  var subScheme = simulation === null || simulation === void 0 ? void 0 : simulation.scheme.configuration.parameters;\n\n  var _SimulationAPI$useSim = SimulationAPI.useSimulations(project === null || project === void 0 ? void 0 : project.simulations),\n      _SimulationAPI$useSim2 = _slicedToArray(_SimulationAPI$useSim, 2),\n      mutateOneSimulation = _SimulationAPI$useSim2[1].mutateOneSimulation; // Effect\n\n\n  useEffect(function () {\n    var newSimulation = _objectSpread({}, simulation); // Update local\n\n\n    Object.keys(values).forEach(function (key) {\n      var deepValues = values[key];\n      deepValues.forEach(function (value, index) {\n        if (value) newSimulation.scheme.configuration.parameters[key].children[index].value = value;\n      });\n    }); // Diff\n\n    var diff = _objectSpread(_objectSpread({}, newSimulation.scheme.configuration.parameters), {}, {\n      done: true\n    }); // Update\n\n\n    SimulationAPI.update({\n      id: simulation.id\n    }, [{\n      key: 'scheme',\n      type: 'json',\n      method: 'diff',\n      path: ['configuration', 'parameters'],\n      value: diff\n    }]).then(function () {\n      // Mutate\n      mutateOneSimulation(newSimulation);\n    })[\"catch\"](function (err) {\n      Error(errors.updateError, err);\n    });\n  }, [values]);\n  /**\n   * On parameter change\n   * @param {string} key Parameter key\n   * @param {number} index Children index\n   * @param {string} value Value\n   */\n\n  var _onChange = function onChange(key, index, value) {\n    var deepValues = values[key] || [];\n    deepValues[index] = value;\n\n    var newValues = _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, key, deepValues));\n\n    setValues(newValues);\n  }; // Build parameters\n\n\n  var parameters = [];\n  var advanced = [];\n  Object.keys(subScheme).forEach(function (key) {\n    if (key === 'index' || key === 'title' || key == 'done') return;\n    var parameter = subScheme[key];\n    var components = parameter === null || parameter === void 0 ? void 0 : parameter.children.map(function (child, index) {\n      if (child.htmlEntity === 'formula') {\n        return /*#__PURE__*/_jsxs(_Typography.Text, {\n          children: [child.label, \":\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Formula, {\n            defaultValue: child.value === undefined ? child[\"default\"] : child.value,\n            onChange: function onChange(value) {\n              return _onChange(key, index, value);\n            },\n            unit: child.unit\n          })]\n        }, key + '&' + index);\n      } else if (child.htmlEntity === 'select') {\n        return /*#__PURE__*/_jsxs(_Typography.Text, {\n          children: [child.label, \":\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(_Select, {\n            options: child.options,\n            defaultValue: child.value || child[\"default\"],\n            onChange: function onChange(value) {\n              return _onChange(key, index, value);\n            }\n          })]\n        }, key + '&' + index);\n      }\n    });\n\n    if (parameter !== null && parameter !== void 0 && parameter.advanced) {\n      advanced.push( /*#__PURE__*/_jsx(_Card, {\n        title: parameter === null || parameter === void 0 ? void 0 : parameter.label,\n        children: /*#__PURE__*/_jsx(_Space, {\n          direction: \"vertical\",\n          children: components\n        })\n      }, key));\n    } else {\n      parameters.push( /*#__PURE__*/_jsx(_Card, {\n        title: parameter === null || parameter === void 0 ? void 0 : parameter.label,\n        children: /*#__PURE__*/_jsx(_Space, {\n          direction: \"vertical\",\n          children: components\n        })\n      }, key));\n    }\n  });\n  /**\n   * Render\n   */\n\n  return /*#__PURE__*/_jsx(_Layout, {\n    children: /*#__PURE__*/_jsxs(_Layout.Content, {\n      children: [parameters, /*#__PURE__*/_jsx(_Collapse, {\n        children: /*#__PURE__*/_jsx(_Collapse.Panel, {\n          header: \"Advanced\",\n          children: advanced\n        })\n      })]\n    })\n  });\n};\n\nexport default Parameters;","map":null,"metadata":{},"sourceType":"module"}