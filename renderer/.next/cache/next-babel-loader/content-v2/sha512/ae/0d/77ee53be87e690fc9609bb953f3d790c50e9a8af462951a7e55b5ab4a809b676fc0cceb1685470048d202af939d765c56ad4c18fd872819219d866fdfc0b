{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _Space from \"antd/lib/space\";\nimport _Button from \"antd/lib/button\";\nimport _Typography from \"antd/lib/typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/materials/list/index.js\";\nimport { useState } from 'react';\nimport { EditOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { enable, disable, select } from '../../../../../store/select/action';\nimport Delete from '../delete';\n\nconst List = ({\n  project,\n  simulation,\n  onEdit\n}) => {\n  var _simulation$scheme, _simulation$scheme$co, _materials$values;\n\n  // State\n  const {\n    0: enabled,\n    1: setEnabled\n  } = useState(true); // Data\n\n  const materials = (simulation === null || simulation === void 0 ? void 0 : (_simulation$scheme = simulation.scheme) === null || _simulation$scheme === void 0 ? void 0 : (_simulation$scheme$co = _simulation$scheme.configuration) === null || _simulation$scheme$co === void 0 ? void 0 : _simulation$scheme$co.materials) || {};\n  const dispatch = useDispatch();\n  /**\n   * Highlight current\n   * @param {number} index Index\n   */\n\n  const highlight = index => {\n    var _materials$values$ind;\n\n    dispatch(enable());\n    const currentSelected = materials === null || materials === void 0 ? void 0 : (_materials$values$ind = materials.values[index]) === null || _materials$values$ind === void 0 ? void 0 : _materials$values$ind.selected;\n    currentSelected === null || currentSelected === void 0 ? void 0 : currentSelected.forEach(s => {\n      dispatch(select(s.uuid));\n    });\n  };\n  /**\n   * Unhighlight current\n   */\n\n\n  const unhighlight = () => {\n    dispatch(disable());\n  }; // List\n\n\n  const list = (_materials$values = materials.values) === null || _materials$values === void 0 ? void 0 : _materials$values.map((material, index) => {\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      hoverable: true,\n      style: {\n        marginTop: '5px'\n      },\n      onMouseEnter: () => highlight(index),\n      onMouseLeave: () => {\n        enabled && unhighlight();\n      },\n      children: /*#__PURE__*/_jsxDEV(_Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n          children: material.material.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Space, {\n          children: [/*#__PURE__*/_jsxDEV(_Button, {\n            icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 23\n            }, this),\n            onClick: () => {\n              setEnabled(false);\n              onEdit(index);\n              setTimeout(() => setEnabled(true), 500);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Delete, {\n            project: project,\n            simulation: simulation,\n            index: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  }).filter(l => l);\n  /**\n   * Render\n   */\n\n  return list || null;\n};\n\nexport default List;","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/materials/list/index.js"],"names":["useState","EditOutlined","useDispatch","enable","disable","select","Delete","List","project","simulation","onEdit","enabled","setEnabled","materials","scheme","configuration","dispatch","highlight","index","currentSelected","values","selected","forEach","s","uuid","unhighlight","list","map","material","marginTop","label","setTimeout","filter","l"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { Button, Card, Space, Typography } from 'antd'\nimport { EditOutlined } from '@ant-design/icons'\n\nimport { useDispatch } from 'react-redux'\nimport { enable, disable, select } from '../../../../../store/select/action'\n\nimport Delete from '../delete'\n\nconst List = ({ project, simulation, onEdit }) => {\n  // State\n  const [enabled, setEnabled] = useState(true)\n\n  // Data\n  const materials = simulation?.scheme?.configuration?.materials || {}\n  const dispatch = useDispatch()\n\n  /**\n   * Highlight current\n   * @param {number} index Index\n   */\n  const highlight = (index) => {\n    dispatch(enable())\n    const currentSelected = materials?.values[index]?.selected\n    currentSelected?.forEach((s) => {\n      dispatch(select(s.uuid))\n    })\n  }\n\n  /**\n   * Unhighlight current\n   */\n  const unhighlight = () => {\n    dispatch(disable())\n  }\n\n  // List\n  const list = materials.values\n    ?.map((material, index) => {\n      return (\n        <Card\n          key={index}\n          hoverable\n          style={{ marginTop: '5px' }}\n          onMouseEnter={() => highlight(index)}\n          onMouseLeave={() => {\n            enabled && unhighlight()\n          }}\n        >\n          <Space direction=\"vertical\">\n            <Typography.Text>{material.material.label}</Typography.Text>\n            <Space>\n              <Button\n                icon={<EditOutlined />}\n                onClick={() => {\n                  setEnabled(false)\n                  onEdit(index)\n                  setTimeout(() => setEnabled(true), 500)\n                }}\n              />\n              <Delete project={project} simulation={simulation} index={index} />\n            </Space>\n          </Space>\n        </Card>\n      )\n    })\n    .filter((l) => l)\n\n  /**\n   * Render\n   */\n  return list || null\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}