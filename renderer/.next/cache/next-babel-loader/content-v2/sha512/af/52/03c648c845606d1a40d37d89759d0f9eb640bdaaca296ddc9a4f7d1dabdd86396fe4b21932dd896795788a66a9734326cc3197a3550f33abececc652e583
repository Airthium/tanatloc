{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _Form from \"antd/lib/form\";\nimport _Input from \"antd/lib/input\";\nimport _Button from \"antd/lib/button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport { Error } from '../../assets/notification';\nimport Dialog from '../../assets/dialog';\nimport WorkspaceAPI from '../../../../src/api/workspace';\nconst errors = {\n  addError: 'Unable to add the workspace'\n};\n/**\n * Add workspace\n * @memberof module:renderer/components/workspace\n */\n\nconst Add = () => {\n  // Sate\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // Data\n\n  const [, {\n    addOneWorkspace\n  }] = WorkspaceAPI.useWorkspaces();\n  /**\n   * Toggle dialog\n   */\n\n  const toggleDialog = () => {\n    setVisible(!visible);\n  };\n  /**\n   * On confirm\n   * @param {Object} values Values\n   */\n\n\n  const onOk = async values => {\n    setLoading(true);\n\n    try {\n      // Add\n      const workspace = await WorkspaceAPI.add(values); // Mutate\n\n      addOneWorkspace(workspace);\n      toggleDialog();\n    } catch (err) {\n      Error(errors.addError, err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  /**\n   * On cancel\n   */\n\n\n  const onCancel = () => {\n    toggleDialog();\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(_Button, {\n      onClick: toggleDialog,\n      icon: /*#__PURE__*/_jsx(PlusCircleOutlined, {}),\n      children: \"Create a new workspace\"\n    }), /*#__PURE__*/_jsx(Dialog, {\n      title: \"Create a new workspace\",\n      closable: false,\n      visible: visible,\n      onCancel: onCancel,\n      onOk: onOk,\n      confirmLoading: loading,\n      children: /*#__PURE__*/_jsx(_Form.Item, {\n        label: \"Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: \"Please enter a workspace's name\"\n        }],\n        children: /*#__PURE__*/_jsx(_Input, {\n          placeholder: \"Workspace's name\"\n        })\n      })\n    })]\n  });\n};\n\nexport default Add;","map":null,"metadata":{},"sourceType":"module"}