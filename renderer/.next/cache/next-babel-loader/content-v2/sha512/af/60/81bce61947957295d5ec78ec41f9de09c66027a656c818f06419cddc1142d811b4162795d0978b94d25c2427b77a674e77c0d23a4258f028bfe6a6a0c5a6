{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _Space from \"antd/lib/space\";\nimport _Table from \"antd/lib/table\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _Empty from \"antd/lib/empty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRouter } from 'next/router';\nimport { Error } from '../../assets/notification';\nimport Data from '../data';\nimport Delete from '../delete';\nimport ProjectAPI from '../../../../src/api/project';\n/**\n * Errors project/list\n * @memberof module:renderer/components/project\n */\n\nvar errors = {\n  updateError: 'Unable to update the project'\n};\n/**\n * Projects' list\n * @memberof module:renderer/components/project\n * @param {Object} props Props\n */\n\nvar ProjectList = function ProjectList(_ref) {\n  var workspace = _ref.workspace,\n      filter = _ref.filter;\n  // Router\n  var router = useRouter(); // Load projects\n\n  var _ProjectAPI$useProjec = ProjectAPI.useProjects(workspace === null || workspace === void 0 ? void 0 : workspace.projects),\n      _ProjectAPI$useProjec2 = _slicedToArray(_ProjectAPI$useProjec, 2),\n      projects = _ProjectAPI$useProjec2[0],\n      mutateOneProject = _ProjectAPI$useProjec2[1].mutateOneProject; // Data\n\n\n  var data = projects.map(function (project) {\n    return Data(project, filter, function (title) {\n      return setTitle(project, title);\n    });\n  }).filter(function (d) {\n    return d;\n  }); // Open project\n\n  var openProject = function openProject(project) {\n    router.push({\n      pathname: '/project',\n      query: {\n        workspaceId: workspace.id,\n        projectId: project.id\n      }\n    });\n  };\n  /**\n   * Set title\n   * @param {string} project Project { id }\n   * @param {string} title Title\n   */\n\n\n  var setTitle = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(project, title) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return ProjectAPI.update({\n                id: project.id\n              }, [{\n                key: 'title',\n                value: title\n              }]);\n\n            case 3:\n              // Mutate project\n              mutateOneProject(_objectSpread(_objectSpread({}, project), {}, {\n                title: title\n              }));\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              Error(errors.updateError, _context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function setTitle(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxs(_Table, {\n    pagination: false,\n    dataSource: data,\n    bordered: true,\n    size: \"small\",\n    scroll: {\n      y: 'calc(100vh - 232px)'\n    },\n    locale: {\n      emptyText: /*#__PURE__*/_jsx(_Empty, {\n        image: _Empty.PRESENTED_IMAGE_SIMPLE,\n        description: \"No projects yet.\"\n      })\n    },\n    children: [/*#__PURE__*/_jsx(_Table.Column, {\n      title: \"\",\n      dataIndex: \"snapshot\",\n      onCell: function onCell(project) {\n        return {\n          onClick: function onClick() {\n            return openProject(project);\n          }\n        };\n      }\n    }), /*#__PURE__*/_jsx(_Table.Column, {\n      title: \"Project Name\",\n      dataIndex: \"title\"\n    }), /*#__PURE__*/_jsx(_Table.Column, {\n      title: \"Status\",\n      dataIndex: \"tags\",\n      align: \"center\"\n    }), /*#__PURE__*/_jsx(_Table.Column, {\n      title: \"Administrators\",\n      dataIndex: \"owners\",\n      align: \"center\"\n    }), /*#__PURE__*/_jsx(_Table.Column, {\n      title: \"Actions\",\n      align: \"center\",\n      render: function render(value) {\n        return /*#__PURE__*/_jsx(_Space, {\n          size: \"middle\",\n          children: /*#__PURE__*/_jsx(Delete, {\n            workspace: workspace,\n            project: value\n          })\n        });\n      }\n    })]\n  });\n};\n\nexport default ProjectList;","map":null,"metadata":{},"sourceType":"module"}