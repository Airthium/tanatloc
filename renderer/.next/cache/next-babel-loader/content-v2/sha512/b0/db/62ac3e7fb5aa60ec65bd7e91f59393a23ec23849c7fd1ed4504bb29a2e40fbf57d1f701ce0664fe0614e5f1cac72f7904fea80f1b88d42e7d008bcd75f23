{"ast":null,"code":"import _Layout from \"antd/lib/layout\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport _Button from \"antd/lib/button\";\nimport _Card from \"antd/lib/card\";\nimport _Spin from \"antd/lib/spin\";\nimport _Alert from \"antd/lib/alert\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _Collapse from \"antd/lib/collapse\";\nimport _Space from \"antd/lib/space\";\nimport _Upload from \"antd/lib/upload\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _Typography from \"antd/lib/typography\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { DeleteOutlined, DownloadOutlined, LoadingOutlined, PlusOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { Error } from '../../../assets/notification';\nimport SimulationAPI from '../../../../../src/api/simulation';\nimport FileAPI from '../../../../../src/api/file';\n/**\n * Errors simulation/geometry\n * @memberof module:renderer/components/project/simulation\n */\n\nvar errors = {\n  updateError: 'Unable to update the simulation',\n  downloadError: 'Unable to download the file',\n  UNABLE_TO_LOAD: 'Unable to load geometry'\n};\n/**\n * Geometry\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\n\nvar Geometry = function Geometry(_ref) {\n  var _part$solids, _part$faces, _part$edges;\n\n  var project = _ref.project,\n      simulation = _ref.simulation,\n      part = _ref.part;\n\n  // State\n  var _useState = useState(false),\n      upload = _useState[0],\n      setUpload = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      currentFile = _useState3[0],\n      setCurrentFile = _useState3[1]; // Data\n\n\n  var _SimulationAPI$useSim = SimulationAPI.useSimulations(project === null || project === void 0 ? void 0 : project.simulations),\n      _SimulationAPI$useSim2 = _slicedToArray(_SimulationAPI$useSim, 2),\n      mutateOneSimulation = _SimulationAPI$useSim2[1].mutateOneSimulation; // Effect\n\n\n  useEffect(function () {\n    var file = simulation === null || simulation === void 0 ? void 0 : simulation.scheme.configuration.geometry.file;\n    setCurrentFile(file);\n\n    if (file) {\n      setUpload(false);\n    } else {\n      setUpload(true);\n    }\n  }, [simulation]);\n  /**\n   * Upload check\n   * @param {Object} file File\n   */\n\n  var beforeUpload = function beforeUpload(file) {\n    var goodFormat = file.name.toLowerCase().includes('.stp') || file.name.toLowerCase().includes('.step') || file.name.toLowerCase().includes('.dxf');\n    return goodFormat;\n  };\n  /**\n   * On upload\n   * @param {object} info Info\n   */\n\n\n  var onChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(info) {\n      var buffer, diff;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (info.file.status === 'uploading') setLoading(true);\n\n              if (!(info.file.status === 'done')) {\n                _context.next = 18;\n                break;\n              }\n\n              _context.next = 4;\n              return getFile(info.file.originFileObj);\n\n            case 4:\n              buffer = _context.sent;\n              // Diff scheme\n              diff = {\n                file: {\n                  name: info.file.name,\n                  uid: info.file.uid,\n                  buffer: Buffer.from(buffer)\n                },\n                done: true\n              };\n              _context.prev = 6;\n              _context.next = 9;\n              return SimulationAPI.update({\n                id: simulation.id\n              }, [{\n                key: 'scheme',\n                type: 'json',\n                method: 'diff',\n                path: ['configuration', 'geometry'],\n                value: diff\n              }]);\n\n            case 9:\n              // Mutate simulation\n              mutateOneSimulation(_objectSpread({}, simulation), true);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](6);\n              Error(errors.updateError, _context.t0);\n\n            case 15:\n              _context.prev = 15;\n              setLoading(false);\n              return _context.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 12, 15, 18]]);\n    }));\n\n    return function onChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\n   * Get file\n   * @param {Object} file File\n   */\n\n\n  var getFile = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(file) {\n      var reader, buffer;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              reader = new FileReader();\n              _context2.next = 3;\n              return new Promise(function (resolve) {\n                reader.addEventListener('load', function () {\n                  resolve(reader.result);\n                });\n                reader.readAsArrayBuffer(file);\n              });\n\n            case 3:\n              buffer = _context2.sent;\n              return _context2.abrupt(\"return\", buffer);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getFile(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  /**\n   * On delete\n   */\n\n\n  var onDelete = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var diff;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // Diff scheme\n              diff = {\n                file: 'remove',\n                done: false\n              };\n              _context3.prev = 1;\n              _context3.next = 4;\n              return SimulationAPI.update({\n                id: simulation.id\n              }, [{\n                key: 'scheme',\n                type: 'json',\n                method: 'diff',\n                path: ['configuration', 'geometry'],\n                value: diff\n              }]);\n\n            case 4:\n              // Mutate\n              mutateOneSimulation(_objectSpread(_objectSpread({}, simulation), {}, {\n                scheme: _objectSpread(_objectSpread({}, simulation.scheme), {}, {\n                  configuration: _objectSpread(_objectSpread({}, simulation.scheme.configuration), {}, {\n                    geometry: _objectSpread(_objectSpread({}, simulation.scheme.configuration.geometry), {}, {\n                      file: undefined,\n                      done: false\n                    })\n                  })\n                })\n              }));\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              Error(errors.updateError, _context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 7]]);\n    }));\n\n    return function onDelete() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onDownload = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var file, content, data, url, link;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              file = {\n                origin: simulation.scheme.configuration.geometry.file.origin,\n                originPath: simulation.scheme.configuration.geometry.file.originPath\n              };\n              _context4.prev = 1;\n              _context4.next = 4;\n              return FileAPI.get({\n                id: simulation.id\n              }, file);\n\n            case 4:\n              content = _context4.sent;\n              data = new File([Buffer.from(content.buffer).toString()], file.origin);\n              url = window.URL.createObjectURL(data);\n              link = document.createElement('a');\n              link.href = url;\n              link.setAttribute('download', file.origin);\n              link.click();\n              link.remove();\n              _context4.next = 17;\n              break;\n\n            case 14:\n              _context4.prev = 14;\n              _context4.t0 = _context4[\"catch\"](1);\n              Error(errors.downloadError, _context4.t0);\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 14]]);\n    }));\n\n    return function onDownload() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var _window$MathJax;\n\n    (_window$MathJax = window.MathJax) === null || _window$MathJax === void 0 ? void 0 : _window$MathJax.typeset();\n  }, []);\n  /**\n   * Render\n   */\n\n  return /*#__PURE__*/_jsx(_Layout, {\n    children: /*#__PURE__*/_jsx(_Layout.Content, {\n      children: upload ? /*#__PURE__*/_jsxs(_Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsx(_Typography.Text, {\n          children: /*#__PURE__*/_jsx(\"b\", {\n            children: \"Upload a geometry\"\n          })\n        }), /*#__PURE__*/_jsx(_Typography.Text, {\n          children: \"STEP (3D) of DXF (2D) file\"\n        }), /*#__PURE__*/_jsx(_Upload, {\n          accept: \".stp,.step,.dxf\",\n          showUploadList: false,\n          listType: \"picture-card\",\n          beforeUpload: beforeUpload,\n          onChange: onChange,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            children: [loading ? /*#__PURE__*/_jsx(LoadingOutlined, {}) : /*#__PURE__*/_jsx(PlusOutlined, {}), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                marginTop: 8\n              },\n              children: \"Upload\"\n            })]\n          })\n        })]\n      }) : /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(_Card, {\n          title: \"Informations\",\n          children: /*#__PURE__*/_jsxs(_Space, {\n            direction: \"vertical\",\n            children: [/*#__PURE__*/_jsxs(_Typography.Text, {\n              children: [/*#__PURE__*/_jsx(\"b\", {\n                children: \"File:\"\n              }), \" \", currentFile === null || currentFile === void 0 ? void 0 : currentFile.name, ' ']\n            }), /*#__PURE__*/_jsxs(_Typography.Text, {\n              children: [/*#__PURE__*/_jsx(\"b\", {\n                children: \"Unit:\"\n              }), \" \\\\(m\\\\)\"]\n            }), part ? part.error ? /*#__PURE__*/_jsx(_Alert, {\n              message: \"Error\",\n              description: /*#__PURE__*/_jsxs(_Fragment, {\n                children: [errors.UNABLE_TO_LOAD, /*#__PURE__*/_jsx(_Collapse, {\n                  ghost: true,\n                  children: /*#__PURE__*/_jsx(_Collapse.Panel, {\n                    header: \"Error\",\n                    children: part.message\n                  })\n                })]\n              }),\n              type: \"error\"\n            }) : /*#__PURE__*/_jsxs(_Fragment, {\n              children: [part.solids && /*#__PURE__*/_jsxs(_Typography.Text, {\n                children: [/*#__PURE__*/_jsx(\"b\", {\n                  children: \"Number of solids:\"\n                }), \" \", (_part$solids = part.solids) === null || _part$solids === void 0 ? void 0 : _part$solids.length]\n              }), part.faces && /*#__PURE__*/_jsxs(_Typography.Text, {\n                children: [/*#__PURE__*/_jsx(\"b\", {\n                  children: \"Number of faces:\"\n                }), \" \", (_part$faces = part.faces) === null || _part$faces === void 0 ? void 0 : _part$faces.length]\n              }), part.edges && /*#__PURE__*/_jsxs(_Typography.Text, {\n                children: [/*#__PURE__*/_jsx(\"b\", {\n                  children: \"Number of edges:\"\n                }), \" \", (_part$edges = part.edges) === null || _part$edges === void 0 ? void 0 : _part$edges.length]\n              })]\n            }) : /*#__PURE__*/_jsx(_Spin, {})]\n          })\n        }), /*#__PURE__*/_jsxs(_Space, {\n          style: {\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsx(_Button, {\n            icon: /*#__PURE__*/_jsx(DownloadOutlined, {}),\n            onClick: onDownload\n          }), /*#__PURE__*/_jsx(_Popconfirm, {\n            title: \"Are you sure\",\n            icon: /*#__PURE__*/_jsx(QuestionCircleOutlined, {\n              style: {\n                color: 'red'\n              }\n            }),\n            onConfirm: onDelete,\n            children: /*#__PURE__*/_jsx(_Button, {\n              type: \"danger\",\n              icon: /*#__PURE__*/_jsx(DeleteOutlined, {})\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport default Geometry;","map":null,"metadata":{},"sourceType":"module"}