{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _Form from \"antd/lib/form\";\nimport _Input from \"antd/lib/input\";\nimport _Button from \"antd/lib/button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport { Error } from '../../assets/notification';\nimport Dialog from '../../assets/dialog';\nimport ProjectAPI from '../../../../src/api/project';\nimport WorkspaceAPI from '../../../../src/api/workspace';\n/**\n * Errors project/add\n * @memberof module:renderer/components/project\n */\n\nvar errors = {\n  addError: 'Unable to add a project'\n};\n/**\n * Add project\n * @memberof module:renderer/components/project\n * @param {Object} props Props\n */\n\nvar Add = function Add(props) {\n  // Props\n  var workspace = props.workspace || {}; // State\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1]; // Data\n\n\n  var _ProjectAPI$useProjec = ProjectAPI.useProjects(workspace.projects),\n      _ProjectAPI$useProjec2 = _slicedToArray(_ProjectAPI$useProjec, 2),\n      addOneProject = _ProjectAPI$useProjec2[1].addOneProject;\n\n  var _WorkspaceAPI$useWork = WorkspaceAPI.useWorkspaces(),\n      _WorkspaceAPI$useWork2 = _slicedToArray(_WorkspaceAPI$useWork, 2),\n      mutateOneWorkspace = _WorkspaceAPI$useWork2[1].mutateOneWorkspace;\n  /**\n   * Toggle dialog\n   */\n\n\n  var toggleDialog = function toggleDialog() {\n    setVisible(!visible);\n  };\n  /**\n   * On confirm\n   * @param {Object} values Values\n   */\n\n\n  var onOk = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var project;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return ProjectAPI.add({\n                id: workspace.id\n              }, values);\n\n            case 4:\n              project = _context.sent;\n              // Mutate projects\n              addOneProject(project); // Mutate workspaces\n\n              mutateOneWorkspace(_objectSpread(_objectSpread({}, workspace), {}, {\n                projects: [].concat(_toConsumableArray(workspace.projects), [project.id])\n              }));\n              toggleDialog();\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              Error(errors.addError, _context.t0);\n\n            case 13:\n              _context.prev = 13;\n              setLoading(false);\n              return _context.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10, 13, 16]]);\n    }));\n\n    return function onOk(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\n   * On cancel\n   */\n\n\n  var onCancel = function onCancel() {\n    toggleDialog();\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(_Button, {\n      onClick: toggleDialog,\n      type: \"primary\",\n      icon: /*#__PURE__*/_jsx(PlusCircleOutlined, {}),\n      children: \"Create a new project\"\n    }), /*#__PURE__*/_jsxs(Dialog, {\n      title: \"Create a new project\",\n      closable: false,\n      visible: visible,\n      onCancel: onCancel,\n      onOk: onOk,\n      loading: loading,\n      children: [/*#__PURE__*/_jsx(_Form.Item, {\n        label: \"Name\",\n        name: \"title\",\n        rules: [{\n          required: true,\n          message: \"Please enter a project's name\"\n        }],\n        children: /*#__PURE__*/_jsx(_Input, {\n          placeholder: \"Project's name\"\n        })\n      }), /*#__PURE__*/_jsx(_Form.Item, {\n        label: \"Description\",\n        name: \"description\",\n        children: /*#__PURE__*/_jsx(_Input.TextArea, {\n          placeholder: \"Project's description\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default Add;","map":null,"metadata":{},"sourceType":"module"}