{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Modal from \"antd/lib/modal\";\nimport _Space from \"antd/lib/space\";\nimport _Card from \"antd/lib/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/cloudServer/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport merge from 'lodash.merge';\nimport Plugins from '../../../../../plugin';\nimport PluginAPI from '../../../../../../src/api/plugin';\n\nvar CloudServer = function CloudServer(_ref) {\n  _s();\n\n  var visible = _ref.visible,\n      onClose = _ref.onClose,\n      onOk = _ref.onOk;\n\n  // Data\n  var _PluginAPI$usePlugins = PluginAPI.usePlugins(),\n      _PluginAPI$usePlugins2 = _slicedToArray(_PluginAPI$usePlugins, 1),\n      plugins = _PluginAPI$usePlugins2[0];\n\n  var onMerge = function onMerge(plugin, diff) {\n    // Merge\n    merge(plugin, diff); // Close\n\n    onClose(); // Ok\n\n    onOk(plugin);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Card, {\n    children: [/*#__PURE__*/_jsxDEV(_Modal, {\n      visible: visible,\n      title: \"Cloud server\",\n      onOk: function onOk() {},\n      okButtonProps: {\n        disabled: true,\n        style: {\n          display: 'none'\n        }\n      },\n      onCancel: onClose,\n      children: /*#__PURE__*/_jsxDEV(_Space, {\n        align: \"start\",\n        direction: \"horizontal\",\n        children: plugins === null || plugins === void 0 ? void 0 : plugins.map(function (plugin) {\n          var base = Plugins[plugin.key];\n          return /*#__PURE__*/_jsxDEV(_Card, {\n            title: plugin.name,\n            children: /*#__PURE__*/_jsxDEV(base.renderer, {\n              data: plugin.data,\n              onSelect: function onSelect(diff) {\n                return onMerge(plugin, diff);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, _this)\n          }, plugin.uuid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n      icon: /*#__PURE__*/_jsxDEV(CloudServerOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, _this),\n      onClick: function onClick() {\n        return setCloudServerVisible(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CloudServer, \"czAKdU7C9YtF+Ktiih7GeBLq6PM=\", false, function () {\n  return [PluginAPI.usePlugins];\n});\n\n_c = CloudServer;\nexport default CloudServer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CloudServer\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/cloudServer/index.js"],"names":["merge","Plugins","PluginAPI","CloudServer","visible","onClose","onOk","usePlugins","plugins","onMerge","plugin","diff","disabled","style","display","map","base","key","name","data","uuid","setCloudServerVisible"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,cAAlB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgC;AAAA;;AAAA,MAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAClD;AADkD,8BAEhCJ,SAAS,CAACK,UAAV,EAFgC;AAAA;AAAA,MAE3CC,OAF2C;;AAIlD,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASC,IAAT,EAAkB;AAChC;AACAX,IAAAA,KAAK,CAACU,MAAD,EAASC,IAAT,CAAL,CAFgC,CAIhC;;AACAN,IAAAA,OAAO,GALyB,CAOhC;;AACAC,IAAAA,IAAI,CAACI,MAAD,CAAJ;AACD,GATD;;AAWA,sBACE;AAAA,4BACE;AACE,MAAA,OAAO,EAAEN,OADX;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,IAAI,EAAE,gBAAM,CAAE,CAHhB;AAIE,MAAA,aAAa,EAAE;AACbQ,QAAAA,QAAQ,EAAE,IADG;AAEbC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAFM,OAJjB;AAQE,MAAA,QAAQ,EAAET,OARZ;AAAA,6BAUE;AAAO,QAAA,KAAK,EAAC,OAAb;AAAqB,QAAA,SAAS,EAAC,YAA/B;AAAA,kBACGG,OADH,aACGA,OADH,uBACGA,OAAO,CAAEO,GAAT,CAAa,UAACL,MAAD,EAAY;AACxB,cAAMM,IAAI,GAAGf,OAAO,CAACS,MAAM,CAACO,GAAR,CAApB;AAEA,8BACE;AAAwB,YAAA,KAAK,EAAEP,MAAM,CAACQ,IAAtC;AAAA,mCACE,QAAC,IAAD,CAAM,QAAN;AACE,cAAA,IAAI,EAAER,MAAM,CAACS,IADf;AAEE,cAAA,QAAQ,EAAE,kBAACR,IAAD;AAAA,uBAAUF,OAAO,CAACC,MAAD,EAASC,IAAT,CAAjB;AAAA;AAFZ;AAAA;AAAA;AAAA;AAAA;AADF,aAAWD,MAAM,CAACU,IAAlB;AAAA;AAAA;AAAA;AAAA,mBADF;AAQD,SAXA;AADH;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,aADF,eA0BE;AACE,MAAA,IAAI,eAAE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,eADR;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMC,qBAAqB,CAAC,IAAD,CAA3B;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,aA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAiCD,CAhDD;;GAAMlB,W;UAEcD,SAAS,CAACK,U;;;KAFxBJ,W;AAkDN,eAAeA,WAAf","sourcesContent":["import { Button, Card, Modal, Space } from 'antd'\nimport merge from 'lodash.merge'\n\nimport Plugins from '../../../../../plugin'\n\nimport PluginAPI from '../../../../../../src/api/plugin'\n\nconst CloudServer = ({ visible, onClose, onOk }) => {\n  // Data\n  const [plugins] = PluginAPI.usePlugins()\n\n  const onMerge = (plugin, diff) => {\n    // Merge\n    merge(plugin, diff)\n\n    // Close\n    onClose()\n\n    // Ok\n    onOk(plugin)\n  }\n\n  return (\n    <Card>\n      <Modal\n        visible={visible}\n        title=\"Cloud server\"\n        onOk={() => {}}\n        okButtonProps={{\n          disabled: true,\n          style: { display: 'none' }\n        }}\n        onCancel={onClose}\n      >\n        <Space align=\"start\" direction=\"horizontal\">\n          {plugins?.map((plugin) => {\n            const base = Plugins[plugin.key]\n\n            return (\n              <Card key={plugin.uuid} title={plugin.name}>\n                <base.renderer\n                  data={plugin.data}\n                  onSelect={(diff) => onMerge(plugin, diff)}\n                />\n              </Card>\n            )\n          })}\n        </Space>\n      </Modal>\n      <Button\n        icon={<CloudServerOutlined />}\n        onClick={() => setCloudServerVisible(true)}\n      />\n    </Card>\n  )\n}\n\nexport default CloudServer\n"]},"metadata":{},"sourceType":"module"}