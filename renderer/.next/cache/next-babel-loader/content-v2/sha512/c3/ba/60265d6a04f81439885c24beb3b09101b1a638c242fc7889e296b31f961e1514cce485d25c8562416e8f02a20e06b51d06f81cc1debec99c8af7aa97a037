{"ast":null,"code":"import _Space from \"antd/lib/space\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _Button from \"antd/lib/button\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _Select from \"antd/lib/select\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _Form from \"antd/lib/form\";\nimport { createElement as _createElement } from \"react\";\nimport _Input from \"antd/lib/input\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\n\n/**\n * Plugin form\n * @param {Object} props Props\n */\nvar PluginForm = function PluginForm(_ref) {\n  var plugin = _ref.plugin,\n      onFinish = _ref.onFinish,\n      onCancel = _ref.onCancel;\n\n  // State\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1]; // Data\n\n\n  var layout = {\n    labelCol: {\n      span: 2\n    },\n    wrapperCol: {\n      span: 8\n    }\n  };\n  var tailLayout = {\n    wrapperCol: {\n      offset: 2,\n      span: 8\n    }\n  };\n  /**\n   * Build input item\n   * @param {Object} item Item\n   * @param {string} key Key\n   */\n\n  var inputItem = function inputItem(item, key) {\n    return /*#__PURE__*/_createElement(_Form.Item, _objectSpread(_objectSpread({}, layout), {}, {\n      key: item.label,\n      name: key,\n      label: item.label,\n      htmlFor: 'input-' + key,\n      rules: [{\n        required: true,\n        message: \"'\" + item.label + \"' is required\"\n      }]\n    }), /*#__PURE__*/_jsx(_Input, {\n      id: 'input-' + key,\n      autoComplete: \"off\"\n    }));\n  };\n  /**\n   * Build password item\n   * @param {Object} item Item\n   * @param {string} key Key\n   */\n\n\n  var passwordItem = function passwordItem(item, key) {\n    return /*#__PURE__*/_createElement(_Form.Item, _objectSpread(_objectSpread({}, layout), {}, {\n      key: item.label,\n      name: key,\n      label: item.label,\n      htmlFor: 'input-' + key,\n      rules: [{\n        required: true,\n        message: \"'\" + item.label + \"' is required\"\n      }]\n    }), /*#__PURE__*/_jsx(_Input, {\n      id: 'input-' + key,\n      type: \"password\",\n      autoComplete: \"off\"\n    }));\n  };\n  /**\n   * Build select item\n   * @param {Object} item Item\n   * @param {string} key Key\n   */\n\n\n  var selectItem = function selectItem(item, key) {\n    return /*#__PURE__*/_createElement(_Form.Item, _objectSpread(_objectSpread({}, layout), {}, {\n      key: item.label,\n      name: key,\n      label: item.label,\n      htmlFor: 'select-' + key,\n      rules: [{\n        required: true,\n        message: \"'\" + item.label + \"' is required\"\n      }]\n    }), /*#__PURE__*/_jsx(_Select, {\n      id: 'select-' + key,\n      children: item.options.map(function (option) {\n        return /*#__PURE__*/_jsx(_Select.Option, {\n          value: option,\n          children: option\n        }, option);\n      })\n    }));\n  };\n  /**\n   * On finish\n   * @param {Object} values Values\n   */\n\n\n  var onFinishInternal = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return onFinish(values);\n\n            case 4:\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n\n            case 9:\n              _context.prev = 9;\n              setLoading(false);\n              return _context.finish(9);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 6, 9, 12]]);\n    }));\n\n    return function onFinishInternal(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // Initial values\n\n\n  var initialValues = {};\n  Object.keys(plugin.configuration).forEach(function (key) {\n    initialValues[key] = plugin.configuration[key].value;\n  });\n  /**\n   * Render\n   */\n\n  return /*#__PURE__*/_jsxs(_Form, _objectSpread(_objectSpread({}, layout), {}, {\n    onFinish: onFinishInternal,\n    initialValues: initialValues,\n    autoComplete: \"off\",\n    children: [Object.keys(plugin.configuration).map(function (key) {\n      var item = plugin.configuration[key];\n      if (item.type === 'input') return inputItem(item, key);else if (item.type === 'password') return passwordItem(item, key);else if (item.type === 'select') return selectItem(item, key);\n    }), /*#__PURE__*/_jsx(_Form.Item, _objectSpread(_objectSpread({}, tailLayout), {}, {\n      children: /*#__PURE__*/_jsxs(_Space, {\n        children: [/*#__PURE__*/_jsx(_Button, {\n          loading: loading,\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Save\"\n        }), /*#__PURE__*/_jsx(_Button, {\n          onClick: onCancel,\n          children: \"Cancel\"\n        })]\n      })\n    }))]\n  }));\n};\n\nexport default PluginForm;","map":null,"metadata":{},"sourceType":"module"}