{"ast":null,"code":"import _Space from \"antd/lib/space\";\nimport _Button from \"antd/lib/button\";\nimport _Modal from \"antd/lib/modal\";\nimport _Table from \"antd/lib/table\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Typography from \"antd/lib/typography\";\nimport _Avatar from \"antd/lib/avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/plugin/rescale/renderer/index.js\";\nimport { useState } from 'react';\nimport { SelectOutlined } from '@ant-design/icons';\n\nconst Rescale = ({\n  data\n}) => {\n  // State\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(); // Data\n\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_Avatar, {\n        style: {\n          marginRight: '-15px',\n          background: 'linear-gradient(to right,' + record.color + ', rgba(255, 255, 255, 0))',\n          opacity: 0.5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Typography.Text, {\n        strong: true,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), record.processorInfo]\n    }, void 0, true)\n  }, {\n    title: 'Cores',\n    dataIndex: 'cores',\n    key: 'cores',\n    render: cores => cores.join(', ')\n  }, {\n    title: 'Pro Price',\n    dataIndex: 'price',\n    key: 'price'\n  }, {\n    title: 'Price',\n    dataIndex: 'lowPriorityPrice',\n    key: 'lowPriorityPrice'\n  }];\n\n  const onRow = record => {\n    if (selected === record) setSelected();else setSelected(record);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Modal, {\n      title: \"Rescale plugin\",\n      visible: visible,\n      onCancel: () => setVisible(false),\n      children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n        strong: true,\n        children: \"Select a coretype:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Table, {\n        dataSource: data.coreTypes,\n        columns: columns,\n        onRow: record => {\n          return {\n            onClick: () => onRow(record)\n          };\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Space, {\n      children: [/*#__PURE__*/_jsxDEV(_Typography.Text, {\n        children: [\"More information on\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.rescale.com/infrastructure/\",\n          target: \"_blank\",\n          children: \"Rescale website\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        onClick: () => setVisible(true),\n        icon: /*#__PURE__*/_jsxDEV(SelectOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Rescale;\n{\n  /* <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space> */\n}","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/plugin/rescale/renderer/index.js"],"names":["useState","SelectOutlined","Rescale","data","visible","setVisible","selected","setSelected","columns","title","dataIndex","key","render","text","record","marginRight","background","color","opacity","processorInfo","cores","join","onRow","coreTypes","onClick"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { Avatar, Button, Modal, Space, Table, Typography } from 'antd'\nimport { SelectOutlined } from '@ant-design/icons'\n\nconst Rescale = ({ data }) => {\n  // State\n  const [visible, setVisible] = useState(false)\n  const [selected, setSelected] = useState()\n\n  // Data\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text, record) => (\n        <>\n          <Avatar\n            style={{\n              marginRight: '-15px',\n              background:\n                'linear-gradient(to right,' +\n                record.color +\n                ', rgba(255, 255, 255, 0))',\n              opacity: 0.5\n            }}\n          />\n          <Typography.Text strong={true}>{text}</Typography.Text>\n          <br />\n          {record.processorInfo}\n        </>\n      )\n    },\n    {\n      title: 'Cores',\n      dataIndex: 'cores',\n      key: 'cores',\n      render: (cores) => cores.join(', ')\n    },\n    {\n      title: 'Pro Price',\n      dataIndex: 'price',\n      key: 'price'\n    },\n    {\n      title: 'Price',\n      dataIndex: 'lowPriorityPrice',\n      key: 'lowPriorityPrice'\n    }\n  ]\n\n  const onRow = (record) => {\n    if (selected === record) setSelected()\n    else setSelected(record)\n  }\n\n  return (\n    <>\n      <Modal\n        title=\"Rescale plugin\"\n        visible={visible}\n        onCancel={() => setVisible(false)}\n      >\n        <Typography.Text strong={true}>Select a coretype:</Typography.Text>\n        <Table\n          dataSource={data.coreTypes}\n          columns={columns}\n          onRow={(record) => {\n            return { onClick: () => onRow(record) }\n          }}\n        />\n      </Modal>\n      <Space>\n        <Typography.Text>\n          More information on{' '}\n          <a href=\"https://www.rescale.com/infrastructure/\" target=\"_blank\">\n            Rescale website\n          </a>\n          .\n        </Typography.Text>\n        <Button onClick={() => setVisible(true)} icon={<SelectOutlined />} />\n      </Space>\n    </>\n  )\n}\n\nexport default Rescale\n\n{\n  /* <Space>\n                <Space direction=\"vertical\">\n                  {plugin.configuration.name.value}\n                  <Form>\n                    {Object.keys(plugin.inUseConfiguration).map((key) => {\n                      const item = plugin.inUseConfiguration[key]\n                      console.log(item)\n                      if (item.type === 'label')\n                        return (\n                          <div\n                            dangerouslySetInnerHTML={{ __html: item.label }}\n                          />\n                        )\n                      else if (item.type === 'number')\n                        return (\n                          <Form.Item htmlFor={key} label={item.label}>\n                            <InputNumber id={key} defaultValue={item.default} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'select')\n                        return (\n                          <Form.Item label={item.label}>\n                            <Select id={key} options={item.options} />\n                          </Form.Item>\n                        )\n                      else if (item.type === 'radio')\n                        return (\n                          <Form.Item label={item.label} htmlFor={key}>\n                            <Radio.Group id={key}>\n                              {item.options.map((o) => (\n                                <Radio value={o.value}>{o.label}</Radio>\n                              ))}\n                            </Radio.Group>\n                          </Form.Item>\n                        )\n                    })}\n                  </Form>\n                </Space>\n                <Button type=\"primary\" icon={<SelectOutlined />} />\n              </Space> */\n}\n"]},"metadata":{},"sourceType":"module"}