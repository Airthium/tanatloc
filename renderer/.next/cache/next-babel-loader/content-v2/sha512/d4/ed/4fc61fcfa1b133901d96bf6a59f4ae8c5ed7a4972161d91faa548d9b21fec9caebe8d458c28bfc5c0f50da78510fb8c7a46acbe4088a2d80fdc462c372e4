{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _Button from \"antd/lib/button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { Error } from '../../assets/notification';\nimport PluginForm from './pluginForm';\nimport List from './list';\nimport PluginAPI from '../../../../src/api/plugin';\n/**\n * Errors hpc/plugin\n */\n\nvar errors = {\n  updateError: 'Unable to update plugins'\n};\n/**\n * Plugin\n * @param {Object} props Props\n */\n\nvar Plugin = function Plugin(_ref) {\n  var plugin = _ref.plugin;\n\n  // State\n  var _useState = useState(false),\n      add = _useState[0],\n      setAdd = _useState[1]; // Data\n\n\n  var _PluginAPI$usePlugins = PluginAPI.usePlugins(),\n      _PluginAPI$usePlugins2 = _slicedToArray(_PluginAPI$usePlugins, 2),\n      addOnePlugin = _PluginAPI$usePlugins2[1].addOnePlugin;\n  /**\n   * On finish\n   * @param {Object} values Values\n   */\n\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              // Set values\n              Object.keys(values).forEach(function (key) {\n                plugin.configuration[key].value = values[key];\n              }); // Remove logo\n\n              plugin.logo && delete plugin.logo; // Set uuid\n\n              plugin.uuid = uuid(); // API\n\n              _context.next = 6;\n              return PluginAPI.add(plugin);\n\n            case 6:\n              // Mutate\n              addOnePlugin(plugin); // Finish\n\n              setAdd(false);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              Error(errors.updateError, _context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [add ? /*#__PURE__*/_jsx(PluginForm, {\n      plugin: plugin,\n      onFinish: onFinish,\n      onCancel: function onCancel() {\n        return setAdd(false);\n      }\n    }) : /*#__PURE__*/_jsx(_Button, {\n      type: \"primary\",\n      onClick: function onClick() {\n        return setAdd(true);\n      },\n      children: \"Add\"\n    }), /*#__PURE__*/_jsx(List, {\n      plugin: plugin\n    })]\n  });\n};\n\nexport default Plugin;","map":null,"metadata":{},"sourceType":"module"}