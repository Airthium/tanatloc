{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _Button from \"antd/lib/button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { Error } from '../../assets/notification';\nimport { DeleteDialog } from '../../assets/dialog';\nimport WorkspaceAPI from '../../../../src/api/workspace';\nconst errors = {\n  delError: 'Unable to delete the workspace'\n};\n/**\n * Delete workspace\n * @memberof module:renderer/components/workspace\n * @param {Object} props Props\n */\n\nconst Delete = props => {\n  // Props\n  const workspace = props.workspace; // Sate\n\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // Data\n\n  const [, {\n    delOneWorkspace\n  }] = WorkspaceAPI.useWorkspaces();\n  /**\n   * Toggle dialog delete\n   */\n\n  const toggleDialog = () => {\n    setVisible(!visible);\n  };\n  /**\n   * Handle delete\n   */\n\n\n  const handleDelete = async () => {\n    setLoading(true);\n\n    try {\n      // Delete\n      await WorkspaceAPI.del({\n        id: workspace.id\n      }); // Mutate\n\n      delOneWorkspace({\n        id: workspace.id\n      });\n    } catch (err) {\n      Error(errors.delError, err);\n      setLoading(false);\n    }\n  };\n  /**\n   * Render\n   */\n\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(_Button, {\n      onClick: toggleDialog,\n      icon: /*#__PURE__*/_jsx(DeleteOutlined, {}),\n      children: \"Delete\"\n    }), /*#__PURE__*/_jsx(DeleteDialog, {\n      visible: visible,\n      onCancel: toggleDialog,\n      onOk: handleDelete,\n      loading: loading,\n      children: \"The projects contained in this workspace will be lost.\"\n    })]\n  });\n};\n\nexport default Delete;","map":null,"metadata":{},"sourceType":"module"}