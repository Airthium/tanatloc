{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _Spin from \"antd/lib/spin\";\nimport _Card from \"antd/lib/card\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport Plugin from './plugin';\nimport Plugins from '../../../plugin';\nimport PluginAPI from '../../../../src/api/plugin';\n/**\n * HPC plugins\n */\n\nconst HPC = () => {\n  // State\n  const {\n    0: list,\n    1: setList\n  } = useState([]); // Data\n\n  const [, {\n    loadingPlugins\n  }] = PluginAPI.usePlugins(); // Plugins list\n\n  useEffect(() => {\n    if (loadingPlugins) return; // HPC only\n\n    const HPCPlugins = Object.keys(Plugins).map(key => {\n      const plugin = Plugins[key];\n      if (plugin.category === 'HPC') return plugin;\n    }).filter(p => p); // List\n\n    const pluginsList = HPCPlugins.map(plugin => {\n      return /*#__PURE__*/_jsx(_Card, {\n        title: plugin.name,\n        children: /*#__PURE__*/_jsx(Plugin, {\n          plugin: plugin\n        })\n      }, plugin.key);\n    });\n    setList(pluginsList);\n  }, [loadingPlugins]);\n  /**\n   * Render\n   */\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: loadingPlugins ? /*#__PURE__*/_jsx(_Spin, {}) : list\n  });\n};\n\nexport default HPC;","map":null,"metadata":{},"sourceType":"module"}