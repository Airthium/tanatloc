{"ast":null,"code":"import _Modal from \"antd/lib/modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _Form from \"antd/lib/form\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport DeleteDialog from './delete';\n/**\n * Dialog\n * @param {Object} props Props\n */\n\nconst Dialog = props => {\n  // Props\n  const title = props.title;\n  const visible = props.visible;\n  const onCancel = props.onCancel;\n  const onOk = props.onOk;\n  const loading = props.loading; // Form\n\n  const [form] = _Form.useForm(); // Layout\n\n\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 18\n    }\n  };\n  /**\n   * Render\n   */\n\n  return /*#__PURE__*/_jsx(_Modal, {\n    title: title,\n    visible: visible,\n    onCancel: () => {\n      form.resetFields();\n      onCancel();\n    },\n    onOk: async () => {\n      try {\n        const values = await form.validateFields();\n        await onOk(values);\n        form.resetFields();\n      } catch (info) {\n        console.warn('Validation Failed:', info);\n      }\n    },\n    confirmLoading: loading,\n    children: /*#__PURE__*/_jsx(_Form, _objectSpread(_objectSpread({\n      form: form\n    }, layout), {}, {\n      children: props.children\n    }))\n  });\n};\n\nexport default Dialog;\nexport { DeleteDialog };","map":null,"metadata":{},"sourceType":"module"}