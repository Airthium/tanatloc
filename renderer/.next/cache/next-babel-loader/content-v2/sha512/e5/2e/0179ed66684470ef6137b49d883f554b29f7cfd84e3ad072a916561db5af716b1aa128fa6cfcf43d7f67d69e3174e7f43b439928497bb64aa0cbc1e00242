{"ast":null,"code":"import _Modal from \"antd/lib/modal\";\nimport _Space from \"antd/lib/space\";\nimport _Card from \"antd/lib/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/cloudServer/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Plugins from '../../../../../plugin';\nimport PluginAPI from '../../../../../../src/api/plugin';\n\nvar CloudServer = function CloudServer(_ref) {\n  _s();\n\n  var visible = _ref.visible,\n      onCancel = _ref.onCancel;\n\n  // Data\n  var _PluginAPI$usePlugins = PluginAPI.usePlugins(),\n      _PluginAPI$usePlugins2 = _slicedToArray(_PluginAPI$usePlugins, 1),\n      plugins = _PluginAPI$usePlugins2[0];\n\n  var onMerge = function onMerge() {//TODO\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Modal, {\n    visible: visible,\n    title: \"Cloud server\",\n    onOk: function onOk() {},\n    onCancel: onCancel,\n    children: /*#__PURE__*/_jsxDEV(_Space, {\n      align: \"start\",\n      direction: \"horizontal\",\n      children: plugins === null || plugins === void 0 ? void 0 : plugins.map(function (plugin) {\n        var base = Plugins[plugin.key];\n        return /*#__PURE__*/_jsxDEV(_Card, {\n          title: plugin.name,\n          children: /*#__PURE__*/_jsxDEV(base.renderer, {\n            data: plugin.data,\n            onSelect: onMerge\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, _this)\n        }, plugin.uuid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CloudServer, \"czAKdU7C9YtF+Ktiih7GeBLq6PM=\", false, function () {\n  return [PluginAPI.usePlugins];\n});\n\n_c = CloudServer;\nexport default CloudServer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CloudServer\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/run/cloudServer/index.js"],"names":["Plugins","PluginAPI","CloudServer","visible","onCancel","usePlugins","plugins","onMerge","map","plugin","base","key","name","data","uuid"],"mappings":";;;;;;;;;;AAEA,OAAOA,OAAP,MAAoB,uBAApB;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA2B;AAAA;;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC7C;AAD6C,8BAE3BH,SAAS,CAACI,UAAV,EAF2B;AAAA;AAAA,MAEtCC,OAFsC;;AAI7C,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM,CACpB;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,OAAO,EAAEJ,OADX;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,IAAI,EAAE,gBAAM,CAAE,CAHhB;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAAA,2BAME;AAAO,MAAA,KAAK,EAAC,OAAb;AAAqB,MAAA,SAAS,EAAC,YAA/B;AAAA,gBACGE,OADH,aACGA,OADH,uBACGA,OAAO,CAAEE,GAAT,CAAa,UAACC,MAAD,EAAY;AACxB,YAAMC,IAAI,GAAGV,OAAO,CAACS,MAAM,CAACE,GAAR,CAApB;AAEA,4BACE;AAAwB,UAAA,KAAK,EAAEF,MAAM,CAACG,IAAtC;AAAA,iCACE,QAAC,IAAD,CAAM,QAAN;AAAe,YAAA,IAAI,EAAEH,MAAM,CAACI,IAA5B;AAAkC,YAAA,QAAQ,EAAEN;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF,WAAWE,MAAM,CAACK,IAAlB;AAAA;AAAA;AAAA;AAAA,iBADF;AAKD,OARA;AADH;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,WADF;AAoBD,CA5BD;;GAAMZ,W;UAEcD,SAAS,CAACI,U;;;KAFxBH,W;AA8BN,eAAeA,WAAf","sourcesContent":["import { Card, Modal, Space } from 'antd'\n\nimport Plugins from '../../../../../plugin'\n\nimport PluginAPI from '../../../../../../src/api/plugin'\n\nconst CloudServer = ({ visible, onCancel }) => {\n  // Data\n  const [plugins] = PluginAPI.usePlugins()\n\n  const onMerge = () => {\n    //TODO\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      title=\"Cloud server\"\n      onOk={() => {}}\n      onCancel={onCancel}\n    >\n      <Space align=\"start\" direction=\"horizontal\">\n        {plugins?.map((plugin) => {\n          const base = Plugins[plugin.key]\n\n          return (\n            <Card key={plugin.uuid} title={plugin.name}>\n              <base.renderer data={plugin.data} onSelect={onMerge} />\n            </Card>\n          )\n        })}\n      </Space>\n    </Modal>\n  )\n}\n\nexport default CloudServer\n"]},"metadata":{},"sourceType":"module"}