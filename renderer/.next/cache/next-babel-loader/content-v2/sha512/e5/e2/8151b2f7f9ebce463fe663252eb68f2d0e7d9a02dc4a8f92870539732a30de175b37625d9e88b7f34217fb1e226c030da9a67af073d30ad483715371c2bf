{"ast":null,"code":"import { Color } from '../../../build/three.module.js';\nimport { Pass } from '../postprocessing/Pass.js';\n\nvar RenderPass = function (scene, camera, overrideMaterial, clearColor, clearAlpha) {\n  Pass.call(this);\n  this.scene = scene;\n  this.camera = camera;\n  this.overrideMaterial = overrideMaterial;\n  this.clearColor = clearColor;\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n  this.clear = true;\n  this.clearDepth = false;\n  this.needsSwap = false;\n  this._oldClearColor = new Color();\n};\n\nRenderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: RenderPass,\n  render: function (renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    var oldClearAlpha, oldOverrideMaterial;\n\n    if (this.overrideMaterial !== undefined) {\n      oldOverrideMaterial = this.scene.overrideMaterial;\n      this.scene.overrideMaterial = this.overrideMaterial;\n    }\n\n    if (this.clearColor) {\n      renderer.getClearColor(this._oldClearColor);\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n\n    if (this.clearDepth) {\n      renderer.clearDepth();\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n    renderer.render(this.scene, this.camera);\n\n    if (this.clearColor) {\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n    }\n\n    if (this.overrideMaterial !== undefined) {\n      this.scene.overrideMaterial = oldOverrideMaterial;\n    }\n\n    renderer.autoClear = oldAutoClear;\n  }\n});\nexport { RenderPass };","map":null,"metadata":{},"sourceType":"module"}