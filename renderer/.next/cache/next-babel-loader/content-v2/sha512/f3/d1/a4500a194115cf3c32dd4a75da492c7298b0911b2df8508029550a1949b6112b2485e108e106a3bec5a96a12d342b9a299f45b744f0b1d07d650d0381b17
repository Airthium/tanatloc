{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/delete/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { Error } from '../../../assets/notification';\nimport { DeleteDialog } from '../../../assets/dialog';\nimport SimulationAPI from '../../../../../src/api/simulation';\nimport ProjectAPI from '../../../../../src/api/project';\n/**\n * Errors simulation/delete\n * @memberof module:renderer/components/project/simulation\n */\n\nvar errors = {\n  delError: 'Unable to delete the simulation'\n};\n/**\n * Delete\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\n\nvar Delete = function Delete(_ref) {\n  _s();\n\n  var project = _ref.project,\n      simulation = _ref.simulation;\n\n  // State\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1]; // Data\n\n\n  var _SimulationAPI$useSim = SimulationAPI.useSimulations(project === null || project === void 0 ? void 0 : project.simulations),\n      _SimulationAPI$useSim2 = _slicedToArray(_SimulationAPI$useSim, 2),\n      delOneSimulation = _SimulationAPI$useSim2[1].delOneSimulation;\n\n  var _ProjectAPI$useProjec = ProjectAPI.useProject(project === null || project === void 0 ? void 0 : project.id),\n      _ProjectAPI$useProjec2 = _slicedToArray(_ProjectAPI$useProjec, 2),\n      mutateProject = _ProjectAPI$useProjec2[1].mutateProject;\n\n  var toggleDialog = function toggleDialog() {\n    setVisible(!visible);\n  };\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var index;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return SimulationAPI.del(project, simulation);\n\n            case 4:\n              // Mutate project\n              index = project.simulations.findIndex(function (s) {\n                return s.id === simulation.id;\n              });\n              project.simulations = [].concat(_toConsumableArray(project.simulations.slice(0, index)), _toConsumableArray(project.simulations.slice(index + 1)));\n              mutateProject(project); // Mutate simulations\n\n              delOneSimulation({\n                id: simulation.id\n              });\n              toggleDialog();\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              Error(errors.delError, _context.t0);\n\n            case 14:\n              _context.prev = 14;\n              setLoading(false);\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11, 14, 17]]);\n    }));\n\n    return function handleDelete() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      type: \"danger\",\n      icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 35\n      }, _this),\n      onClick: toggleDialog,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DeleteDialog, {\n      visible: visible,\n      onCancel: toggleDialog,\n      onOk: handleDelete,\n      loading: loading,\n      children: [\"Delete \", simulation.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Delete, \"mu+pYDn+o0CGFQv80IKmT+gCICw=\", false, function () {\n  return [SimulationAPI.useSimulations, ProjectAPI.useProject];\n});\n\n_c = Delete;\nexport default Delete;\n\nvar _c;\n\n$RefreshReg$(_c, \"Delete\");","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/components/project/simulation/delete/index.js"],"names":["useState","DeleteOutlined","Error","DeleteDialog","SimulationAPI","ProjectAPI","errors","delError","Delete","project","simulation","visible","setVisible","loading","setLoading","useSimulations","simulations","delOneSimulation","useProject","id","mutateProject","toggleDialog","handleDelete","del","index","findIndex","s","slice","name"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { Button } from 'antd'\nimport { DeleteOutlined } from '@ant-design/icons'\n\nimport { Error } from '../../../assets/notification'\nimport { DeleteDialog } from '../../../assets/dialog'\n\nimport SimulationAPI from '../../../../../src/api/simulation'\nimport ProjectAPI from '../../../../../src/api/project'\n\n/**\n * Errors simulation/delete\n * @memberof module:renderer/components/project/simulation\n */\nconst errors = {\n  delError: 'Unable to delete the simulation'\n}\n\n/**\n * Delete\n * @memberof module:renderer/components/project/simulation\n * @param {Object} props Props\n */\nconst Delete = ({ project, simulation }) => {\n  // State\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  // Data\n  const [, { delOneSimulation }] = SimulationAPI.useSimulations(\n    project?.simulations\n  )\n  const [, { mutateProject }] = ProjectAPI.useProject(project?.id)\n\n  const toggleDialog = () => {\n    setVisible(!visible)\n  }\n\n  const handleDelete = async () => {\n    setLoading(true)\n    try {\n      // Delete\n      await SimulationAPI.del(project, simulation)\n\n      // Mutate project\n      const index = project.simulations.findIndex((s) => s.id === simulation.id)\n      project.simulations = [\n        ...project.simulations.slice(0, index),\n        ...project.simulations.slice(index + 1)\n      ]\n      mutateProject(project)\n\n      // Mutate simulations\n      delOneSimulation({ id: simulation.id })\n\n      toggleDialog()\n    } catch (err) {\n      Error(errors.delError, err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <>\n      <Button type=\"danger\" icon={<DeleteOutlined />} onClick={toggleDialog}>\n        Delete\n      </Button>\n      <DeleteDialog\n        visible={visible}\n        onCancel={toggleDialog}\n        onOk={handleDelete}\n        loading={loading}\n      >\n        Delete {simulation.name}\n      </DeleteDialog>\n    </>\n  )\n}\n\nexport default Delete\n"]},"metadata":{},"sourceType":"module"}