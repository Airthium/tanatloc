{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport isElectron from 'is-electron';\nimport user from '../../user';\nimport call from '../call';\nexport default /*#__PURE__*/(function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var username, password;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            username = _ref.username, password = _ref.password;\n\n            if (!isElectron()) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 4;\n            return user.login(username, password);\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n            _context.next = 9;\n            return call('api/user/login', {\n              method: 'POST',\n              body: JSON.stringify({\n                username: username,\n                password: password\n              })\n            });\n\n          case 9:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/home/simon/Documents/Git/Airthium/tanatloc-ssr/renderer/src/lib/api/user/login.js"],"names":["isElectron","user","call","username","password","login","method","body","JSON","stringify"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AAEA;AAAA,uEAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,QAAT,QAASA,QAAT,EAAmBC,QAAnB,QAAmBA,QAAnB;;AAAA,iBACTJ,UAAU,EADD;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEEC,IAAI,CAACI,KAAL,CAAWF,QAAX,EAAqBC,QAArB,CAFF;;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAIEF,IAAI,CAAC,gBAAD,EAAmB;AAClCI,cAAAA,MAAM,EAAE,MAD0B;AAElCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,gBAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,gBAAAA,QAAQ,EAAEA;AAAhC,eAAf;AAF4B,aAAnB,CAJN;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import isElectron from 'is-electron'\nimport user from '../../user'\n\nimport call from '../call'\n\nexport default async ({ username, password }) => {\n  if (isElectron()) {\n    return await user.login(username, password)\n  } else {\n    return await call('api/user/login', {\n      method: 'POST',\n      body: JSON.stringify({ username: username, password: password })\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}