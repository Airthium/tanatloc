[
  {
    "caption": "abs",
    "snippet": "abs(${1:expression})",
    "type": "function"
  },
  {
    "caption": "acos",
    "snippet": "acos(${1:expression})",
    "type": "function"
  },
  {
    "caption": "acosh",
    "snippet": "acosh(${1:expression})",
    "type": "function"
  },
  {
    "caption": "adaptmesh",
    "snippet": "adaptmesh(${1:expression})",
    "type": "function"
  },
  {
    "caption": "adj",
    "snippet": "adj(${1:expression})",
    "type": "function"
  },
  {
    "caption": "affinecg",
    "snippet": "affinecg(${1:expression})",
    "type": "function"
  },
  {
    "caption": "affinegmres",
    "snippet": "affinegmres(${1:expression})",
    "type": "function"
  },
  {
    "caption": "arg",
    "snippet": "arg(${1:expression})",
    "type": "function"
  },
  {
    "caption": "asin",
    "snippet": "asin(${1:expression})",
    "type": "function"
  },
  {
    "caption": "asinh",
    "snippet": "asinh(${1:expression})",
    "type": "function"
  },
  {
    "caption": "assert",
    "snippet": "assert(${1:expression})",
    "type": "function"
  },
  {
    "caption": "atan",
    "snippet": "atan(${1:expression})",
    "type": "function"
  },
  {
    "caption": "atan2",
    "snippet": "atan2(${1:x}, ${2:y})",
    "type": "function"
  },
  {
    "caption": "atanh",
    "snippet": "atanh(${1:expression})",
    "type": "function"
  },
  {
    "caption": "atoi",
    "snippet": "atoi(${1:string})",
    "type": "function"
  },
  {
    "caption": "atof",
    "snippet": "atof(${1:string})",
    "type": "function"
  },
  {
    "caption": "bfgs",
    "snippet": "bfgs(${1:expression})",
    "type": "function"
  },
  {
    "caption": "buildmesh",
    "snippet": "buildmesh(${1:expression})",
    "type": "function"
  },
  {
    "caption": "ceil",
    "snippet": "ceil(${1:expression})",
    "type": "function"
  },
  {
    "caption": "change",
    "snippet": "change(${1:expression})",
    "type": "function"
  },
  {
    "caption": "checkmovemesh",
    "snippet": "checkmovemesh();",
    "type": "function"
  },
  {
    "caption": "chi",
    "snippet": "chi();",
    "type": "function"
  },
  {
    "caption": "clock",
    "snippet": "clock();",
    "type": "function"
  },
  {
    "caption": "complexeigenvalue",
    "snippet": "complexeigenvalue();",
    "type": "function"
  },
  {
    "caption": "conj",
    "snippet": "conj();",
    "type": "function"
  },
  {
    "caption": "convect",
    "snippet": "convect();",
    "type": "function"
  },
  {
    "caption": "copysign",
    "snippet": "copysign();",
    "type": "function"
  },
  {
    "caption": "cos",
    "snippet": "cos();",
    "type": "function"
  },
  {
    "caption": "cosh",
    "snippet": "cosh();",
    "type": "function"
  },
  {
    "caption": "diffnp",
    "snippet": "diffnp();",
    "type": "function"
  },
  {
    "caption": "diffpos",
    "snippet": "diffpos();",
    "type": "function"
  },
  {
    "caption": "dist",
    "snippet": "dist();",
    "type": "function"
  },
  {
    "caption": "dumptable",
    "snippet": "dumptable();",
    "type": "function"
  },
  {
    "caption": "dx",
    "snippet": "dx();",
    "type": "function"
  },
  {
    "caption": "dxx",
    "snippet": "dxx();",
    "type": "function"
  },
  {
    "caption": "dxy",
    "snippet": "dxy();",
    "type": "function"
  },
  {
    "caption": "dxz",
    "snippet": "dxz();",
    "type": "function"
  },
  {
    "caption": "dy",
    "snippet": "dy();",
    "type": "function"
  },
  {
    "caption": "dyx",
    "snippet": "dyx();",
    "type": "function"
  },
  {
    "caption": "dyy",
    "snippet": "dyy();",
    "type": "function"
  },
  {
    "caption": "dyz",
    "snippet": "dyz();",
    "type": "function"
  },
  {
    "caption": "dz",
    "snippet": "dz();",
    "type": "function"
  },
  {
    "caption": "dzx",
    "snippet": "dzx();",
    "type": "function"
  },
  {
    "caption": "dzy",
    "snippet": "dzy();",
    "type": "function"
  },
  {
    "caption": "dzz",
    "snippet": "dzz();",
    "type": "function"
  },
  {
    "caption": "eigenvalue",
    "snippet": "eigenvalue();",
    "type": "function"
  },
  {
    "caption": "emptymesh",
    "snippet": "emptymesh(${1:mesh});",
    "type": "function"
  },
  {
    "caption": "erf",
    "snippet": "erf(${1:x});",
    "type": "function"
  },
  {
    "caption": "erfc",
    "snippet": "erfc(${1:x});",
    "type": "function"
  },
  {
    "caption": "exec",
    "snippet": "exec(\"${1:command}\");",
    "type": "function"
  },
  {
    "caption": "exit",
    "snippet": "exit(${1:code});",
    "type": "function"
  },
  {
    "caption": "exp",
    "snippet": "exp(${1:x});",
    "type": "function"
  },
  {
    "caption": "fdim",
    "snippet": "fdim(${1:x},${2:y});",
    "type": "function"
  },
  {
    "caption": "floor",
    "snippet": "floor(${1:x});",
    "type": "function"
  },
  {
    "caption": "fmax",
    "snippet": "fmax(${1:x},${2:y});",
    "type": "function"
  },
  {
    "caption": "fmin",
    "snippet": "fmin(${1:x},${2:y});",
    "type": "function"
  },
  {
    "caption": "fmod",
    "snippet": "fmod(${1:x},${2:y});",
    "type": "function"
  },
  {
    "caption": "imag",
    "snippet": "imag(${1:x});",
    "type": "function"
  },
  {
    "caption": "int1d",
    "snippet": "int1d(${1:f},${2:a},${3:b});",
    "type": "function"
  },
  {
    "caption": "int2d",
    "snippet": "int2d(${1:f},${2:a1},${3:b1},${4:a2},${5:b2});",
    "type": "function"
  },
  {
    "caption": "int3d",
    "snippet": "int3d(${1:f},${2:a1},${3:b1},${4:a2},${5:b2},${6:a3},${7:b3});",
    "type": "function"
  },
  {
    "caption": "intN",
    "snippet": "intN(${1:f},${2:a},${3:b},${4:n});",
    "type": "function"
  },
  {
    "caption": "intalledges",
    "snippet": "intalledges(${1:f},${2:a},${3:b});",
    "type": "function"
  },
  {
    "caption": "intallfaces",
    "snippet": "intallfaces(${1:f},${2:a},${3:b});",
    "type": "function"
  },
  {
    "caption": "interpolate",
    "snippet": "interpolate(${1:f},${2:a},${3:b});",
    "type": "function"
  },
  {
    "caption": "invdiff",
    "snippet": "invdiff(${1:f},${2:a},${3:b});",
    "type": "function"
  },
  {
    "caption": "invdiffnp",
    "snippet": "invdiffnp(${1:n}, ${2:h})",
    "type": "function"
  },
  {
    "caption": "invdiffpos",
    "snippet": "invdiffpos(${1:n}, ${2:h})",
    "type": "function"
  },
  {
    "caption": "isinf",
    "snippet": "isinf(${1:x})",
    "type": "function"
  },
  {
    "caption": "isnan",
    "snippet": "isnan(${1:x})",
    "type": "function"
  },
  {
    "caption": "isnormal",
    "snippet": "isnormal(${1:x})",
    "type": "function"
  },
  {
    "caption": "j0",
    "snippet": "j0(${1:x})",
    "type": "function"
  },
  {
    "caption": "j1",
    "snippet": "j1(${1:x})",
    "type": "function"
  },
  {
    "caption": "jn",
    "snippet": "jn(${1:n}, ${2:x})",
    "type": "function"
  },
  {
    "caption": "jump",
    "snippet": "jump(${1:expr})",
    "type": "function"
  },
  {
    "caption": "linearcg",
    "snippet": "linearcg(${1:A}, ${2:b}, ${3:x})",
    "type": "function"
  },
  {
    "caption": "lineargmres",
    "snippet": "lineargmres(${1:A}, ${2:b}, ${3:x})",
    "type": "function"
  },
  {
    "caption": "lgamma",
    "snippet": "lgamma(${1:x})",
    "type": "function"
  },
  {
    "caption": "log",
    "snippet": "log(${1:x})",
    "type": "function"
  },
  {
    "caption": "log10",
    "snippet": "log10(${1:x})",
    "type": "function"
  },
  {
    "caption": "lrint",
    "snippet": "lrint(${1:x})",
    "type": "function"
  },
  {
    "caption": "lround",
    "snippet": "lround(${1:x})",
    "type": "function"
  },
  {
    "caption": "ltime",
    "snippet": "ltime()",
    "type": "function"
  },
  {
    "caption": "max",
    "snippet": "max(${1:x}, ${2:y})",
    "type": "function"
  },
  {
    "caption": "min",
    "snippet": "min(${1:x}, ${2:y})",
    "type": "function"
  },
  {
    "caption": "movemesh",
    "snippet": "movemesh(${1:mesh}, ${2:V})",
    "type": "function"
  },
  {
    "caption": "nan",
    "snippet": "nan()",
    "type": "function"
  },
  {
    "caption": "nlcg",
    "snippet": "nlcg(${1:func}, ${2:x0})",
    "type": "function"
  }
]
