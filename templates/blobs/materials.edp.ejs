// Materials
appendLog("Define materials...");

<%
	materials.values = materials.values.filter(value => {
		if (value.material.key === 'fundation') {
			meshes[value.geometryIndex].tag = 'fundation'
			return false
		}
		return true
	})
-%>

<%
	materials.children.forEach(material => {
		let firstValue = 0
		let index = 0
-%>
// <%- material.label -%><%= locals.geometryIndex ? (' - Geometry' + locals.geometryIndex) : '' %>
func <%= material.name -%><%= locals.geometryIndex ?? '' -%> =
<%
	materials.values.forEach((value) => {
		if (locals.geometryIndex && (value.geometryIndex !== locals.geometryIndex)) return
		let child = value.material.children.find(child => child.symbol === material.name) || material
		if (index === 0) {
			firstValue = child.value ?? material.default
-%>
	<%= child.value ?? material.default %>
<%
		} else {
-%>
	+ (<%= child.value ?? material.default -%> - <%= firstValue -%>)
<%
			value.selected.forEach(select => {
-%>
		* (region == <%= select.label -%>)
<%
			})
		}
		index++
	})
-%>
	;
<% }) -%>
// End Materials